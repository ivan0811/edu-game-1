%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 0102.OlehDovhan.Police.O1.eps
%%Creator: Adobe Illustrator(R) 19.2
%%For: MSI
%%CreationDate: 9/26/2020
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.2.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.2.1 x147 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c111 79.158366, 2015/09/25-01:12:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Flat police set</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2020-09-26T22:18:18+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2020-09-26T22:18:18+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2020-09-26T22:18:18+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+ICQElDQ19QUk9GSUxFAAEBAAACMEFEQkUCEAAAbW50clJHQiBYWVogB88ABgAD&#xA;AAAAAAAAYWNzcEFQUEwAAAAAbm9uZQAAAAAAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1BREJFAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKY3BydAAAAPwAAAAy&#xA;ZGVzYwAAATAAAABrd3RwdAAAAZwAAAAUYmtwdAAAAbAAAAAUclRSQwAAAcQAAAAOZ1RSQwAAAdQA&#xA;AAAOYlRSQwAAAeQAAAAOclhZWgAAAfQAAAAUZ1hZWgAAAggAAAAUYlhZWgAAAhwAAAAUdGV4dAAA&#xA;AABDb3B5cmlnaHQgMTk5OSBBZG9iZSBTeXN0ZW1zIEluY29ycG9yYXRlZAAAAGRlc2MAAAAAAAAA&#xA;EUFkb2JlIFJHQiAoMTk5OCkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAA&#xA;ARbMWFlaIAAAAAAAAAAAAAAAAAAAAABjdXJ2AAAAAAAAAAECMwAAY3VydgAAAAAAAAABAjMAAGN1&#xA;cnYAAAAAAAAAAQIzAABYWVogAAAAAAAAnBgAAE+lAAAE/FhZWiAAAAAAAAA0jQAAoCwAAA+VWFla&#xA;IAAAAAAAACYxAAAQLwAAvpz/7gAOQWRvYmUAZMAAAAAB/9sAhAAGBAQEBQQGBQUGCQYFBgkLCAYG&#xA;CAsMCgoLCgoMEAwMDAwMDBAMDg8QDw4MExMUFBMTHBsbGxwfHx8fHx8fHx8fAQcHBw0MDRgQEBga&#xA;FREVGh8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx//wAAR&#xA;CAEAAQADAREAAhEBAxEB/8QBogAAAAcBAQEBAQAAAAAAAAAABAUDAgYBAAcICQoLAQACAgMBAQEB&#xA;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&#xA;irsVdirsVdirsVdirsVdirsVf//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:7bc4d4a8-43e4-c941-b983-e20a8fbd2c9f</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:7bc4d4a8-43e4-c941-b983-e20a8fbd2c9f</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:0399577c-5d9b-ad41-ad7c-cdfccb911ba1</stRef:instanceID>
            <stRef:documentID>xmp.did:0399577c-5d9b-ad41-ad7c-cdfccb911ba1</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d962765b-45c8-ce45-af4e-e000beed012e</stEvt:instanceID>
                  <stEvt:when>2018-01-25T14:28:21+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0dc867e6-6f58-9343-9a24-8c14113794d5</stEvt:instanceID>
                  <stEvt:when>2018-01-30T12:57:02+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0399577c-5d9b-ad41-ad7c-cdfccb911ba1</stEvt:instanceID>
                  <stEvt:when>2018-02-01T10:35:04+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7bc4d4a8-43e4-c941-b983-e20a8fbd2c9f</stEvt:instanceID>
                  <stEvt:when>2020-09-26T22:18:18+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Áåëûé</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>×åðíûé</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
450 450 mo
0 450 li
0 0 li
450 0 li
450 450 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
42.279 347.062 mo
39.1151 346.428 li
39.1151 346.428 33.2239 343.841 34.8104 341.862 cv
36.3554 339.934 37.8001 340.635 38.0219 341.12 cv
38.2438 341.605 38.0177 341.961 38.506 341.86 cv
38.9942 341.76 40.0508 340.075 41.6555 340.855 cv
41.6555 340.855 41.7215 340.999 41.682 341.549 cv
41.6426 342.1 42.4143 342.16 42.5687 342.08 cv
43.0232 341.844 44.0856 340.529 45.3037 341.092 cv
45.9187 341.377 45.5778 341.434 45.7657 342.265 cv
45.9538 343.097 47.5639 342.141 48.0773 341.774 cv
48.5907 341.406 50.1481 341.623 50.2911 342.254 cv
50.434 342.885 49.365 343.134 49.9042 343.345 cv
50.4436 343.556 50.9688 343.059 51.8885 342.788 cv
52.8082 342.517 54.6387 342.887 54.5207 343.844 cv
54.2566 345.987 42.279 347.062 42.279 347.062 cv
cp
.180392 .0352941 .121569 rgb
f
42.8262 347.223 mo
39.6623 346.589 li
39.6623 346.589 33.6724 343.918 35.3576 342.022 cv
37.0428 340.127 37.8618 340.747 38.0837 341.232 cv
38.3055 341.717 38.5648 342.122 39.0531 342.021 cv
39.5414 341.921 40.4873 340.281 41.7081 340.878 cv
41.7081 340.878 42.2687 341.16 42.2292 341.71 cv
42.1898 342.261 42.9615 342.321 43.1158 342.241 cv
43.5703 342.005 44.6718 340.848 45.3037 341.092 cv
45.9356 341.337 46.125 341.595 46.3129 342.426 cv
46.501 343.258 48.1111 342.302 48.6245 341.935 cv
49.1379 341.567 50.1481 341.623 50.2911 342.254 cv
50.434 342.885 49.9122 343.295 50.4514 343.506 cv
50.9907 343.717 51.516 343.22 52.4357 342.949 cv
53.3554 342.677 54.6328 342.952 54.5148 343.91 cv
54.2507 346.053 42.8262 347.223 42.8262 347.223 cv
cp
.321569 .0627451 .219608 rgb
f
88.4658 330.08 mo
87.0478 328.662 84.244 329.158 82.2159 331.186 cv
80.1876 333.215 79.6913 336.018 81.1092 337.436 cv
82.5271 338.854 85.3309 338.358 87.3591 336.33 cv
89.3873 334.301 89.8837 331.498 88.4658 330.08 cv
cp
79.929 338.617 mo
77.8602 336.548 78.3567 332.685 81.0356 330.006 cv
83.7146 327.327 87.5772 326.831 89.646 328.9 cv
91.7148 330.968 91.2183 334.831 88.5394 337.51 cv
85.8604 340.189 81.9978 340.685 79.929 338.617 cv
cp
f
75.3509 347.168 mo
71.3776 343.195 li
75.9803 338.592 li
79.9536 342.565 li
75.3509 347.168 li
cp
f
73.8961 365.46 mo
71.6325 366.426 68.911 366.154 66.9165 364.382 cv
66.8173 364.292 66.7205 364.2 66.6238 364.103 cv
66.3027 363.782 li
68.4153 370.313 66.8811 377.772 61.7047 382.948 cv
54.3521 390.301 42.3873 390.303 35.0324 382.948 cv
27.6798 375.596 27.6798 363.629 35.0324 356.276 cv
40.2087 351.1 47.6699 349.568 54.1987 351.678 cv
56.9462 352.565 59.526 354.097 61.7047 356.276 cv
67.2516 361.823 li
67.3484 361.92 67.4475 362.009 67.5466 362.099 cv
69.2485 363.612 71.4814 364.032 73.5066 363.522 cv
72.4303 359.047 70.1478 354.806 66.6615 351.319 cv
63.4656 348.123 59.6347 345.94 55.5677 344.771 cv
54.9257 344.583 54.2743 344.422 53.6181 344.29 cv
45.3756 342.591 36.4604 344.934 30.0755 351.319 cv
19.9897 361.405 19.9897 377.819 30.0755 387.905 cv
40.1639 397.993 56.5756 397.991 66.6615 387.905 cv
72.7631 381.804 75.1754 373.391 73.8961 365.46 cv
cp
.513726 .266667 .392157 rgb
f
73.1069 363.61 mo
73.1063 363.61 li
73.1069 363.61 li
cp
f
67.6689 362.201 mo
67.8567 362.357 li
67.6689 362.201 li
cp
51.319 345.89 mo
57.2938 351.865 li
51.319 345.89 li
cp
67.6197 335.852 mo
67.0971 335.549 66.4562 335.508 65.9016 335.763 cv
66.4566 335.508 67.0969 335.548 67.6197 335.852 cv
cp
76.5354 361.873 mo
76.6951 361.723 76.8492 361.566 76.9956 361.399 cv
77.0343 361.353 li
77.1762 361.188 77.3121 361.017 77.4396 360.837 cv
77.4629 360.802 li
77.5915 360.618 77.7129 360.426 77.8251 360.226 cv
77.8286 360.22 li
81.905 352.948 li
82.2564 352.32 li
82.3373 352.142 li
82.6194 351.485 82.5028 350.726 82.0321 350.183 cv
81.9463 350.081 li
68.0064 336.141 li
67.3639 335.499 66.3565 335.409 65.611 335.929 cv
53.618 344.29 li
51.3188 345.89 li
67.2514 361.823 li
67.3483 361.92 67.4492 362.011 67.5466 362.099 cv
68.2734 362.745 69.1049 363.205 70.0229 363.471 cv
70.0831 363.486 li
70.1896 363.516 70.2965 363.545 70.4053 363.569 cv
70.5322 363.598 70.6601 363.623 70.7887 363.643 cv
71.4198 363.746 72.0614 363.754 72.6929 363.674 cv
72.7075 363.673 li
72.8216 363.658 72.9351 363.64 73.0484 363.619 cv
73.1063 363.61 li
73.0892 363.613 li
73.1083 363.61 li
73.1069 363.61 li
73.1231 363.607 li
73.275 363.574 li
73.5066 363.523 li
73.512 363.521 li
73.7266 363.467 73.9388 363.403 74.1478 363.328 cv
74.1945 363.311 li
74.3874 363.24 74.5775 363.162 74.7641 363.074 cv
74.8352 363.039 li
75.0194 362.95 75.2003 362.854 75.3768 362.748 cv
75.4182 362.723 li
75.6039 362.609 75.7853 362.487 75.9608 362.356 cv
75.9641 362.354 li
75.9671 362.351 li
76.1524 362.212 76.3315 362.063 76.5035 361.904 cv
76.5354 361.873 li
cp
f
73.8961 365.46 mo
71.6325 366.426 68.911 366.154 66.9165 364.382 cv
66.8173 364.292 66.7205 364.2 66.6238 364.103 cv
66.3027 363.782 li
65.4152 361.035 63.8833 358.455 61.7047 356.276 cv
67.2516 361.823 li
67.3484 361.92 67.4475 362.009 67.5466 362.099 cv
69.2485 363.612 71.4814 364.032 73.5066 363.522 cv
73.6624 364.164 73.7899 364.811 73.8961 365.46 cv
cp
.321569 .0627451 .219608 rgb
f
72.088 355.872 mo
73.8772 354.083 li
74.4224 354.628 li
73.719 353.916 li
73.483 353.68 li
71.6938 355.469 li
71.2761 355.367 70.8182 355.476 70.4925 355.802 cv
69.992 356.302 69.992 357.114 70.4924 357.614 cv
70.6199 357.723 li
70.7025 357.782 li
70.398 357.289 70.4594 356.632 70.8866 356.205 cv
71.2124 355.879 71.6703 355.771 72.088 355.872 cv
cp
.180392 .0352941 .121569 rgb
f
72.3028 357.612 mo
71.8662 358.049 71.1958 358.105 70.7025 357.782 cv
70.398 357.289 70.4594 356.632 70.8866 356.205 cv
71.2124 355.879 71.6703 355.771 72.088 355.872 cv
73.8772 354.083 li
74.4224 354.628 li
72.638 356.413 li
72.7371 356.828 72.6286 357.286 72.3028 357.612 cv
cp
.321569 .0627451 .219608 rgb
f
67.4239 339.241 mo
66.9676 339.697 66.2279 339.697 65.7717 339.241 cv
65.3154 338.785 65.3154 338.045 65.7717 337.589 cv
66.2279 337.133 66.9676 337.133 67.4239 337.589 cv
67.8801 338.045 67.8801 338.785 67.4239 339.241 cv
cp
f
67.2248 339.042 mo
66.8785 339.388 66.3171 339.388 65.9708 339.042 cv
65.6245 338.696 65.6245 338.134 65.9708 337.788 cv
66.3171 337.442 66.8785 337.442 67.2248 337.788 cv
67.571 338.134 67.571 338.696 67.2248 339.042 cv
cp
.513726 .266667 .392157 rgb
f
56.1924 347.168 mo
55.7361 347.624 54.9964 347.624 54.5402 347.168 cv
54.0839 346.712 54.0839 345.972 54.5402 345.516 cv
54.9964 345.06 55.7361 345.06 56.1924 345.516 cv
56.6487 345.972 56.6487 346.712 56.1924 347.168 cv
cp
.321569 .0627451 .219608 rgb
f
55.9933 346.969 mo
55.647 347.315 55.0856 347.315 54.7393 346.969 cv
54.393 346.623 54.393 346.061 54.7393 345.715 cv
55.0856 345.369 55.647 345.369 55.9933 345.715 cv
56.3395 346.061 56.3395 346.623 55.9933 346.969 cv
cp
.513726 .266667 .392157 rgb
f
80.7011 352.518 mo
80.2448 352.975 79.5051 352.975 79.0488 352.518 cv
78.5925 352.062 78.5925 351.322 79.0488 350.866 cv
79.5051 350.41 80.2448 350.41 80.7011 350.866 cv
81.1573 351.322 81.1573 352.062 80.7011 352.518 cv
cp
.321569 .0627451 .219608 rgb
f
80.5019 352.319 mo
80.1557 352.665 79.5942 352.665 79.248 352.319 cv
78.9017 351.973 78.9017 351.411 79.248 351.065 cv
79.5942 350.719 80.1557 350.719 80.5019 351.065 cv
80.8482 351.411 80.8482 351.973 80.5019 352.319 cv
cp
.513726 .266667 .392157 rgb
f
85.3217 338.255 mo
85.6602 337.866 85.6398 337.276 85.2751 336.911 cv
81.6346 333.271 li
81.27 332.906 80.6798 332.885 80.2908 333.224 cv
74.2408 338.49 li
74.0355 338.669 73.9123 338.927 73.903 339.199 cv
73.8936 339.471 73.9985 339.738 74.191 339.93 cv
78.6153 344.355 li
78.8079 344.547 79.0744 344.652 79.3465 344.643 cv
79.6185 344.633 79.8768 344.51 80.0555 344.305 cv
85.3217 338.255 li
cp
f
141.256 347.062 mo
144.419 346.428 li
144.419 346.428 150.311 343.841 148.724 341.862 cv
147.179 339.934 145.734 340.635 145.513 341.12 cv
145.291 341.605 145.517 341.961 145.029 341.86 cv
144.54 341.76 143.484 340.075 141.879 340.855 cv
141.879 340.855 141.813 340.999 141.852 341.549 cv
141.892 342.1 141.12 342.16 140.966 342.08 cv
140.511 341.844 139.449 340.529 138.231 341.092 cv
137.616 341.377 137.957 341.434 137.769 342.265 cv
137.581 343.097 135.971 342.141 135.457 341.774 cv
134.944 341.406 133.386 341.623 133.243 342.254 cv
133.1 342.885 134.17 343.134 133.63 343.345 cv
133.091 343.556 132.566 343.059 131.646 342.788 cv
130.726 342.517 128.896 342.887 129.014 343.844 cv
129.278 345.987 141.256 347.062 141.256 347.062 cv
cp
.180392 .0352941 .121569 rgb
f
140.708 347.223 mo
143.872 346.589 li
143.872 346.589 149.862 343.918 148.177 342.022 cv
146.492 340.127 145.673 340.747 145.451 341.232 cv
145.229 341.717 144.97 342.122 144.481 342.021 cv
143.993 341.921 143.047 340.281 141.826 340.878 cv
141.826 340.878 141.266 341.16 141.305 341.71 cv
141.345 342.261 140.573 342.321 140.419 342.241 cv
139.964 342.005 138.863 340.848 138.231 341.092 cv
137.599 341.337 137.41 341.595 137.222 342.426 cv
137.034 343.258 135.423 342.302 134.91 341.935 cv
134.397 341.567 133.386 341.623 133.243 342.254 cv
133.1 342.885 133.622 343.295 133.083 343.506 cv
132.544 343.717 132.019 343.22 131.099 342.949 cv
130.179 342.677 128.902 342.952 129.02 343.91 cv
129.284 346.053 140.708 347.223 140.708 347.223 cv
cp
.321569 .0627451 .219608 rgb
f
96.1754 336.33 mo
98.2036 338.358 101.007 338.854 102.425 337.436 cv
103.843 336.018 103.347 333.215 101.319 331.186 cv
99.2904 329.158 96.4867 328.662 95.0687 330.08 cv
93.6507 331.498 94.1471 334.301 96.1754 336.33 cv
cp
94.9952 337.51 mo
92.3163 334.831 91.8197 330.968 93.8885 328.9 cv
95.9573 326.831 99.8199 327.327 102.499 330.006 cv
105.178 332.685 105.674 336.548 103.606 338.617 cv
101.537 340.685 97.6741 340.189 94.9952 337.51 cv
cp
f
91.7389 336.14 mo
94.605 336.255 97.002 334.718 97.0822 332.714 cv
97.1624 330.711 94.896 328.987 92.03 328.872 cv
89.1639 328.758 86.7669 330.294 86.6867 332.298 cv
86.6064 334.302 88.8729 336.025 91.7389 336.14 cv
cp
91.6721 337.808 mo
87.8866 337.656 84.9019 335.155 85.019 332.231 cv
85.1361 329.308 88.3112 327.053 92.0967 327.205 cv
95.8824 327.356 98.867 329.858 98.7499 332.781 cv
98.6328 335.705 95.4577 337.96 91.6721 337.808 cv
cp
f
108.184 347.168 mo
112.157 343.195 li
107.554 338.592 li
103.581 342.565 li
108.184 347.168 li
cp
f
116.873 387.905 mo
126.959 397.991 143.371 397.993 153.459 387.905 cv
163.545 377.819 163.545 361.405 153.459 351.319 cv
147.074 344.934 138.159 342.591 129.917 344.29 cv
129.26 344.422 128.609 344.583 127.967 344.771 cv
123.9 345.94 120.069 348.123 116.873 351.319 cv
113.387 354.806 111.104 359.047 110.028 363.522 cv
112.053 364.032 114.286 363.612 115.988 362.099 cv
116.087 362.009 116.186 361.92 116.283 361.823 cv
121.83 356.276 li
124.008 354.097 126.588 352.565 129.336 351.678 cv
135.865 349.568 143.326 351.1 148.502 356.276 cv
155.855 363.629 155.855 375.596 148.502 382.948 cv
141.147 390.303 129.182 390.301 121.83 382.948 cv
116.654 377.772 115.119 370.313 117.232 363.782 cv
116.911 364.103 li
116.814 364.2 116.717 364.292 116.618 364.382 cv
114.624 366.154 111.902 366.426 109.638 365.46 cv
108.359 373.391 110.771 381.804 116.873 387.905 cv
cp
.513726 .266667 .392157 rgb
f
110.428 363.61 mo
110.428 363.61 li
110.428 363.61 li
cp
f
115.678 362.357 mo
115.866 362.201 li
115.678 362.357 li
cp
132.215 345.89 mo
126.241 351.865 li
132.215 345.89 li
cp
117.633 335.763 mo
117.078 335.508 116.438 335.549 115.915 335.852 cv
116.438 335.548 117.078 335.508 117.633 335.763 cv
cp
107.031 361.904 mo
107.203 362.063 107.382 362.212 107.567 362.351 cv
107.57 362.354 li
107.574 362.356 li
107.749 362.487 107.931 362.609 108.116 362.723 cv
108.158 362.748 li
108.334 362.854 108.515 362.95 108.699 363.039 cv
108.77 363.074 li
108.957 363.162 109.147 363.24 109.34 363.311 cv
109.387 363.328 li
109.596 363.403 109.808 363.467 110.022 363.521 cv
110.028 363.523 li
110.259 363.574 li
110.411 363.607 li
110.428 363.61 li
110.426 363.61 li
110.445 363.613 li
110.428 363.61 li
110.486 363.619 li
110.599 363.64 110.713 363.658 110.827 363.673 cv
110.842 363.674 li
111.473 363.754 112.115 363.746 112.746 363.643 cv
112.874 363.623 113.002 363.598 113.129 363.569 cv
113.238 363.545 113.345 363.516 113.451 363.486 cv
113.512 363.471 li
114.43 363.205 115.261 362.745 115.988 362.099 cv
116.085 362.011 116.186 361.92 116.283 361.823 cv
132.216 345.89 li
129.917 344.29 li
117.924 335.929 li
117.178 335.409 116.171 335.499 115.528 336.141 cv
101.588 350.081 li
101.502 350.183 li
101.032 350.726 100.915 351.485 101.197 352.142 cv
101.278 352.32 li
101.629 352.948 li
105.706 360.22 li
105.709 360.226 li
105.822 360.426 105.943 360.618 106.072 360.802 cv
106.095 360.837 li
106.222 361.017 106.358 361.188 106.5 361.353 cv
106.539 361.399 li
106.685 361.566 106.839 361.723 106.999 361.873 cv
107.031 361.904 li
cp
f
109.638 365.46 mo
111.902 366.426 114.624 366.154 116.618 364.382 cv
116.717 364.292 116.814 364.2 116.911 364.103 cv
117.232 363.782 li
118.119 361.035 119.651 358.455 121.83 356.276 cv
116.283 361.823 li
116.186 361.92 116.087 362.009 115.988 362.099 cv
114.286 363.612 112.053 364.032 110.028 363.522 cv
109.872 364.164 109.745 364.811 109.638 365.46 cv
cp
.321569 .0627451 .219608 rgb
f
121.352 344.865 mo
119.402 343.253 li
118.91 343.847 li
119.543 343.071 li
119.756 342.814 li
121.706 344.426 li
122.113 344.285 122.579 344.35 122.934 344.644 cv
123.479 345.095 123.556 345.903 123.105 346.448 cv
122.989 346.568 li
122.912 346.635 li
123.168 346.115 123.045 345.468 122.58 345.083 cv
122.224 344.789 121.758 344.724 121.352 344.865 cv
cp
.180392 .0352941 .121569 rgb
f
121.303 346.617 mo
121.779 347.011 122.451 347.004 122.912 346.635 cv
123.168 346.115 123.045 345.468 122.58 345.083 cv
122.224 344.789 121.758 344.724 121.352 344.865 cv
119.402 343.253 li
118.91 343.847 li
120.856 345.455 li
120.796 345.878 120.948 346.324 121.303 346.617 cv
cp
.321569 .0627451 .219608 rgb
f
116.111 339.241 mo
116.567 339.697 117.307 339.697 117.763 339.241 cv
118.219 338.785 118.219 338.045 117.763 337.589 cv
117.307 337.133 116.567 337.133 116.111 337.589 cv
115.654 338.045 115.654 338.785 116.111 339.241 cv
cp
f
116.31 339.042 mo
116.656 339.388 117.217 339.388 117.564 339.042 cv
117.91 338.696 117.91 338.134 117.564 337.788 cv
117.217 337.442 116.656 337.442 116.31 337.788 cv
115.963 338.134 115.963 338.696 116.31 339.042 cv
cp
.513726 .266667 .392157 rgb
f
127.342 347.168 mo
127.798 347.624 128.538 347.624 128.994 347.168 cv
129.451 346.712 129.451 345.972 128.994 345.516 cv
128.538 345.06 127.798 345.06 127.342 345.516 cv
126.886 345.972 126.886 346.712 127.342 347.168 cv
cp
.321569 .0627451 .219608 rgb
f
127.541 346.969 mo
127.888 347.315 128.449 347.315 128.795 346.969 cv
129.141 346.623 129.141 346.061 128.795 345.715 cv
128.449 345.369 127.888 345.369 127.541 345.715 cv
127.195 346.061 127.195 346.623 127.541 346.969 cv
cp
.513726 .266667 .392157 rgb
f
102.833 352.518 mo
103.29 352.975 104.029 352.975 104.486 352.518 cv
104.942 352.062 104.942 351.322 104.486 350.866 cv
104.029 350.41 103.29 350.41 102.833 350.866 cv
102.377 351.322 102.377 352.062 102.833 352.518 cv
cp
.321569 .0627451 .219608 rgb
f
103.033 352.319 mo
103.379 352.665 103.94 352.665 104.287 352.319 cv
104.633 351.973 104.633 351.411 104.287 351.065 cv
103.94 350.719 103.379 350.719 103.033 351.065 cv
102.686 351.411 102.686 351.973 103.033 352.319 cv
cp
.513726 .266667 .392157 rgb
f
98.2129 338.255 mo
97.8743 337.866 97.8947 337.276 98.2594 336.911 cv
101.9 333.271 li
102.265 332.906 102.855 332.885 103.244 333.224 cv
109.294 338.49 li
109.499 338.669 109.622 338.927 109.632 339.199 cv
109.641 339.471 109.536 339.738 109.344 339.93 cv
104.919 344.355 li
104.727 344.547 104.46 344.652 104.188 344.643 cv
103.916 344.633 103.658 344.51 103.479 344.305 cv
98.2129 338.255 li
cp
f
148.077 279.017 mo
148.04 275.917 li
151.254 275.917 li
151.29 279.017 li
148.077 279.017 li
cp
.321569 .0627451 .219608 rgb
f
148.155 285.203 mo
148.113 282.11 li
151.327 282.11 li
151.369 285.203 li
148.155 285.203 li
cp
f
148.227 291.396 mo
148.191 288.303 li
151.405 288.303 li
151.441 291.396 li
148.227 291.396 li
cp
f
151.604 295.316 mo
148.39 295.316 li
148.336 295.044 148.3 294.773 148.282 294.496 cv
151.495 294.496 li
151.514 294.773 151.556 295.044 151.604 295.316 cv
cp
f
155.614 153.619 mo
152.279 154.403 149.795 157.592 149.843 161.379 cv
151.212 272.824 li
147.998 272.824 li
146.629 161.379 li
146.575 157.007 149.892 153.432 154.004 153.432 cv
154.559 153.432 155.095 153.498 155.614 153.619 cv
cp
f
151.212 272.824 mo
149.843 161.379 li
149.795 157.592 152.279 154.403 155.614 153.619 cv
158.948 154.409 161.427 157.598 161.378 161.379 cv
160.004 272.824 li
151.212 272.824 li
cp
.513726 .266667 .392157 rgb
f
155.609 257.194 mo
154.151 257.194 152.964 255.538 152.946 253.477 cv
152.159 162.945 li
152.157 162.745 152.162 162.546 152.171 162.351 cv
152.383 158.107 158.838 158.107 159.05 162.351 cv
159.06 162.547 159.064 162.745 159.063 162.945 cv
158.272 253.477 li
158.254 255.538 157.067 257.194 155.609 257.194 cv
cp
.639216 .333333 .490196 rgb
f
151.29 279.017 mo
151.254 275.917 li
159.961 275.917 li
159.925 279.017 li
151.29 279.017 li
cp
.513726 .266667 .392157 rgb
f
151.369 285.203 mo
151.327 282.11 li
159.889 282.11 li
159.847 285.203 li
151.369 285.203 li
cp
f
151.441 291.396 mo
151.405 288.303 li
159.811 288.303 li
159.775 291.396 li
151.441 291.396 li
cp
f
159.72 294.496 mo
159.702 294.773 159.666 295.044 159.618 295.316 cv
151.604 295.316 li
151.556 295.044 151.514 294.773 151.495 294.496 cv
159.72 294.496 li
cp
f
177.906 261.072 mo
177.906 270.478 li
177.792 270.491 177.683 270.509 177.569 270.503 cv
160.022 270.062 li
158.333 270.014 156.983 268.633 156.983 266.939 cv
156.983 264.611 li
156.983 262.917 158.333 261.53 160.022 261.488 cv
177.569 261.042 li
177.683 261.042 177.792 261.06 177.906 261.072 cv
cp
f
151.254 275.917 mo
148.04 275.917 li
147.998 272.824 li
151.212 272.824 li
151.254 275.917 li
cp
.25098 .0470588 .172549 rgb
f
160.004 272.824 mo
159.961 275.917 li
151.254 275.917 li
151.212 272.824 li
160.004 272.824 li
cp
.341176 .0627451 .235294 rgb
f
151.327 282.11 mo
148.113 282.11 li
148.077 279.017 li
151.29 279.017 li
151.327 282.11 li
cp
.25098 .0470588 .172549 rgb
f
159.925 279.017 mo
159.889 282.11 li
151.327 282.11 li
151.29 279.017 li
159.925 279.017 li
cp
.341176 .0627451 .235294 rgb
f
151.405 288.303 mo
148.191 288.303 li
148.155 285.203 li
151.369 285.203 li
151.405 288.303 li
cp
.25098 .0470588 .172549 rgb
f
159.847 285.203 mo
159.811 288.303 li
151.405 288.303 li
151.369 285.203 li
159.847 285.203 li
cp
.341176 .0627451 .235294 rgb
f
151.495 294.496 mo
148.282 294.496 li
148.269 294.375 148.263 294.254 148.263 294.134 cv
148.227 291.396 li
151.441 291.396 li
151.477 294.134 li
151.477 294.254 151.483 294.375 151.495 294.496 cv
cp
.25098 .0470588 .172549 rgb
f
159.775 291.396 mo
159.738 294.134 li
159.738 294.254 159.732 294.375 159.72 294.496 cv
151.495 294.496 li
151.483 294.375 151.477 294.254 151.477 294.134 cv
151.441 291.396 li
159.775 291.396 li
cp
.341176 .0627451 .235294 rgb
f
181.754 271.678 mo
179.691 271.678 li
178.883 271.678 178.196 271.184 177.906 270.478 cv
177.906 261.072 li
178.196 260.366 178.883 259.872 179.691 259.872 cv
181.754 259.872 li
180.946 259.872 180.258 260.366 179.969 261.072 cv
179.969 270.478 li
180.258 271.184 180.946 271.678 181.754 271.678 cv
cp
.25098 .0470588 .172549 rgb
f
184.039 261.795 mo
184.039 269.749 li
184.039 270.816 183.177 271.678 182.109 271.678 cv
181.754 271.678 li
180.946 271.678 180.258 271.184 179.969 270.478 cv
179.969 261.072 li
180.258 260.366 180.946 259.872 181.754 259.872 cv
182.109 259.872 li
183.177 259.872 184.039 260.734 184.039 261.795 cv
cp
.341176 .0627451 .235294 rgb
f
151.93 303.625 mo
148.716 303.625 li
147.299 303.625 146.153 302.479 146.153 301.062 cv
146.153 297.842 li
146.153 296.54 147.13 295.478 148.39 295.316 cv
151.604 295.316 li
150.344 295.478 149.367 296.54 149.367 297.842 cv
149.367 301.062 li
149.367 302.479 150.513 303.625 151.93 303.625 cv
cp
.2 .0352941 .137255 rgb
f
161.849 297.842 mo
161.849 301.062 li
161.849 302.479 160.703 303.625 159.292 303.625 cv
151.93 303.625 li
150.513 303.625 149.367 302.479 149.367 301.062 cv
149.367 297.842 li
149.367 296.54 150.344 295.478 151.604 295.316 cv
159.618 295.316 li
160.878 295.478 161.849 296.54 161.849 297.842 cv
cp
.341176 .0627451 .235294 rgb
f
104.712 200.665 mo
99.1036 183.236 li
96.8487 191.744 li
87.7485 191.744 li
87.7485 189.943 li
95.4625 189.943 li
98.9361 176.835 li
104.921 195.434 li
107.186 189.943 li
114.662 189.943 li
114.662 191.744 li
108.392 191.744 li
104.712 200.665 li
cp
.858824 .498039 .333333 rgb
f
87.0036 238.262 mo
86.2671 238.262 85.7447 238.998 86.0098 239.685 cv
86.3772 240.638 86.5935 241.805 86.5935 243.066 cv
86.5935 244.22 86.141 245.609 85.7302 246.632 cv
85.452 247.325 85.9695 248.079 86.7163 248.079 cv
89.8185 248.079 li
89.8185 238.262 li
87.0036 238.262 li
cp
.678431 .0941176 .00392157 rgb
f
86.2927 200.615 mo
86.1465 200.648 85.9919 200.665 85.8374 200.665 cv
84.6844 200.665 83.7486 199.729 83.7486 198.576 cv
83.7486 189.908 li
83.7486 188.755 84.6844 187.819 85.8374 187.819 cv
85.9919 187.819 86.1465 187.836 86.2927 187.869 cv
85.357 188.074 84.6551 188.909 84.6551 189.908 cv
84.6551 198.576 li
84.6551 199.574 85.357 200.41 86.2927 200.615 cv
cp
.564706 .611765 .592157 rgb
f
87.9261 189.908 mo
87.9261 198.576 li
87.9261 199.574 87.2284 200.406 86.2927 200.615 cv
85.357 200.41 84.6551 199.574 84.6551 198.576 cv
84.6551 189.908 li
84.6551 188.909 85.357 188.074 86.2927 187.869 cv
86.6854 187.957 87.0363 188.157 87.312 188.433 cv
87.6921 188.809 87.9261 189.331 87.9261 189.908 cv
cp
.729412 .788235 .764706 rgb
f
83.7486 197.268 mo
83.7486 200.402 li
82.675 200.402 li
82.675 197.268 li
83.7486 197.268 li
cp
.737255 .8 .776471 rgb
f
88.9955 197.268 mo
88.9955 200.402 li
83.7486 200.402 li
83.7486 197.268 li
88.9955 197.268 li
cp
.843137 .913725 .886275 rgb
f
116.788 200.615 mo
116.642 200.648 116.487 200.665 116.333 200.665 cv
115.18 200.665 114.244 199.729 114.244 198.576 cv
114.244 189.908 li
114.244 188.755 115.18 187.819 116.333 187.819 cv
116.487 187.819 116.642 187.836 116.788 187.869 cv
115.852 188.074 115.151 188.909 115.151 189.908 cv
115.151 198.576 li
115.151 199.574 115.852 200.41 116.788 200.615 cv
cp
.564706 .611765 .592157 rgb
f
118.422 189.908 mo
118.422 198.576 li
118.422 199.574 117.724 200.406 116.788 200.615 cv
115.852 200.41 115.151 199.574 115.151 198.576 cv
115.151 189.908 li
115.151 188.909 115.852 188.074 116.788 187.869 cv
117.181 187.957 117.532 188.157 117.807 188.433 cv
118.188 188.809 118.422 189.331 118.422 189.908 cv
cp
.729412 .788235 .764706 rgb
f
114.244 197.268 mo
114.244 200.402 li
113.17 200.402 li
113.17 197.268 li
114.244 197.268 li
cp
.737255 .8 .776471 rgb
f
119.491 197.268 mo
119.491 200.402 li
114.244 200.402 li
114.244 197.268 li
119.491 197.268 li
cp
.843137 .913725 .886275 rgb
f
93.8873 293.822 mo
89.5678 293.822 li
88.8493 293.822 88.2644 293.191 88.2644 292.41 cv
88.2644 235.3 li
92.584 235.3 li
92.584 292.41 li
92.584 293.191 93.1688 293.822 93.8873 293.822 cv
cp
.121569 .235294 .321569 rgb
f
113.747 235.3 mo
113.747 243.066 li
108.011 243.066 li
104.552 243.066 101.653 245.693 101.315 249.136 cv
96.9034 293.822 li
93.8873 293.822 li
93.1688 293.822 92.584 293.191 92.584 292.41 cv
92.584 235.3 li
113.747 235.3 li
cp
.145098 .282353 .384314 rgb
f
113.747 243.066 mo
113.747 289.59 li
113.747 290.367 113.162 291.002 112.444 291.002 cv
109.068 291.002 li
108.709 291.002 108.379 291.161 108.145 291.416 cv
107.907 291.671 107.761 292.021 107.761 292.41 cv
107.761 293.191 107.18 293.822 106.457 293.822 cv
96.9034 293.822 li
101.315 249.136 li
101.653 245.693 104.552 243.066 108.011 243.066 cv
113.747 243.066 li
cp
.0509804 .137255 .192157 rgb
f
107.69 244.599 mo
107.69 253.927 li
106.574 253.927 li
105.288 253.927 104.122 253.405 103.278 252.561 cv
102.434 251.717 101.912 250.552 101.912 249.261 cv
101.912 246.688 104.001 244.599 106.574 244.599 cv
107.69 244.599 li
cp
.027451 .0784314 .109804 rgb
f
113.747 255.669 mo
113.747 264.998 li
106.574 264.998 li
105.288 264.998 104.122 264.475 103.278 263.631 cv
102.434 262.788 101.912 261.622 101.912 260.331 cv
101.912 257.758 104.001 255.669 106.574 255.669 cv
113.747 255.669 li
cp
.231373 .196078 .156863 rgb
f
107.69 255.669 mo
107.69 264.998 li
106.574 264.998 li
105.288 264.998 104.122 264.475 103.278 263.631 cv
102.434 262.788 101.912 261.622 101.912 260.331 cv
101.912 257.758 104.001 255.669 106.574 255.669 cv
107.69 255.669 li
cp
.027451 .0784314 .109804 rgb
f
113.747 266.739 mo
113.747 276.068 li
106.574 276.068 li
105.288 276.068 104.122 275.546 103.278 274.702 cv
102.434 273.858 101.912 272.692 101.912 271.402 cv
101.912 268.828 104.001 266.739 106.574 266.739 cv
113.747 266.739 li
cp
.231373 .196078 .156863 rgb
f
107.69 266.739 mo
107.69 276.068 li
106.574 276.068 li
105.288 276.068 104.122 275.546 103.278 274.702 cv
102.434 273.858 101.912 272.692 101.912 271.402 cv
101.912 268.828 104.001 266.739 106.574 266.739 cv
107.69 266.739 li
cp
.027451 .0784314 .109804 rgb
f
107.69 277.81 mo
107.69 287.138 li
106.574 287.138 li
105.288 287.138 104.122 286.616 103.278 285.772 cv
102.434 284.928 101.912 283.763 101.912 282.472 cv
101.912 279.898 104.001 277.81 106.574 277.81 cv
107.69 277.81 li
cp
f
113.747 244.599 mo
113.747 253.927 li
110.685 253.927 li
110.685 244.599 li
113.747 244.599 li
cp
.0901961 .254902 .360784 rgb
f
113.747 255.669 mo
113.747 264.998 li
110.685 264.998 li
110.685 255.669 li
113.747 255.669 li
cp
f
113.747 266.739 mo
113.747 276.068 li
110.685 276.068 li
110.685 266.739 li
113.747 266.739 li
cp
f
113.747 277.81 mo
113.747 287.138 li
110.685 287.138 li
110.685 277.81 li
113.747 277.81 li
cp
f
110.685 277.81 mo
110.685 287.138 li
107.69 287.138 li
107.69 277.81 li
110.685 277.81 li
cp
.0627451 .176471 .25098 rgb
f
110.685 266.739 mo
110.685 276.068 li
107.69 276.068 li
107.69 266.739 li
110.685 266.739 li
cp
f
110.685 255.669 mo
110.685 264.998 li
107.69 264.998 li
107.69 255.669 li
110.685 255.669 li
cp
f
110.685 244.599 mo
110.685 253.927 li
107.69 253.927 li
107.69 244.599 li
110.685 244.599 li
cp
f
89.8185 236.098 mo
85.499 236.098 li
82.65 236.098 80.3357 233.779 80.3357 230.93 cv
80.3357 203.685 li
80.3357 200.836 82.65 198.522 85.499 198.522 cv
88.7073 198.522 li
88.8618 198.522 89.0164 198.534 89.1668 198.563 cv
86.6227 198.885 84.6551 201.057 84.6551 203.685 cv
84.6551 230.93 li
84.6551 233.779 86.9694 236.098 89.8185 236.098 cv
cp
.0862745 .239216 .341176 rgb
f
121.676 203.685 mo
121.676 230.93 li
121.676 233.779 119.361 236.098 116.512 236.098 cv
89.8184 236.098 li
86.9694 236.098 84.6551 233.779 84.6551 230.93 cv
84.6551 203.685 li
84.6551 201.057 86.6227 198.885 89.1667 198.563 cv
90.1652 198.747 90.9631 199.528 91.1803 200.589 cv
92.1286 205.231 96.2601 208.598 101.006 208.598 cv
101.745 208.598 102.468 208.518 103.165 208.36 cv
106.959 207.52 110.029 204.508 110.831 200.589 cv
111.082 199.37 112.097 198.522 113.304 198.522 cv
116.512 198.522 li
116.734 198.522 116.951 198.534 117.164 198.563 cv
119.708 198.885 121.676 201.057 121.676 203.685 cv
.0901961 .254902 .360784 rgb
f
102.026 230.283 mo
101.5 229.584 100.458 229.071 99.3387 228.859 cv
97.8577 228.579 96.5988 227.792 95.7936 226.644 cv
94.3832 224.632 95.2728 222.836 96.2148 220.935 cv
97.413 218.516 95.6628 216.133 95.6449 216.109 cv
95.4941 215.907 li
97.2285 214.218 li
97.4278 214.397 li
98.0135 214.922 98.6135 215.114 99.1789 215.114 cv
100.702 215.114 101.973 213.716 102.039 213.643 cv
102.106 213.716 103.39 215.112 104.917 215.112 cv
105.484 215.112 106.084 214.92 106.667 214.397 cv
106.866 214.218 li
108.6 215.907 li
108.45 216.109 li
108.432 216.132 106.685 218.524 107.879 220.935 cv
108.821 222.836 109.711 224.632 108.301 226.644 cv
107.496 227.792 106.237 228.579 104.756 228.859 cv
103.637 229.071 102.552 229.584 102.026 230.283 cv
97.2506 214.998 mo
96.2469 215.975 li
96.6827 216.655 97.8782 218.87 96.7289 221.19 cv
95.7898 223.085 95.0482 224.582 96.2629 226.314 cv
96.9821 227.339 98.1123 228.043 99.4457 228.296 cv
100.562 228.508 101.435 228.951 102.047 229.614 cv
102.66 228.951 103.532 228.508 104.649 228.296 cv
105.982 228.043 107.113 227.339 107.831 226.314 cv
109.046 224.582 108.305 223.085 107.365 221.19 cv
106.216 218.87 107.412 216.655 107.848 215.975 cv
106.844 214.998 li
106.164 215.537 105.488 215.734 104.862 215.734 cv
103.565 215.734 102.487 214.888 102.047 214.485 cv
101.608 214.888 100.529 215.733 99.2328 215.733 cv
98.6071 215.733 97.9305 215.536 97.2506 214.998 cv
.623529 .694118 .737255 rgb
f
98.6815 219.362 mo
98.2512 219.362 li
98.2512 217.94 li
99.0096 217.94 li
99.3421 217.94 99.521 218.162 99.521 218.428 cv
99.521 218.692 99.3421 218.914 99.0096 218.914 cv
98.6815 218.914 li
98.6815 219.362 li
98.6815 218.315 mo
98.6815 218.539 li
98.9542 218.539 li
99.0842 218.428 li
98.9542 218.315 li
98.6815 218.315 li
f
100.364 219.387 mo
99.9251 219.387 99.5863 219.089 99.5863 218.652 cv
99.5863 218.215 99.9251 217.917 100.364 217.917 cv
100.803 217.917 101.142 218.215 101.142 218.652 cv
101.142 219.089 100.803 219.387 100.364 219.387 cv
100.364 218.296 mo
100.157 218.296 100.023 218.454 100.023 218.652 cv
100.023 218.85 100.157 219.008 100.364 219.008 cv
100.571 219.008 100.705 218.85 100.705 218.652 cv
100.705 218.454 100.571 218.296 100.364 218.296 cv
f
102.266 219.362 mo
101.297 219.362 li
101.297 217.94 li
101.727 217.94 li
101.727 218.987 li
102.266 218.987 li
102.266 219.362 li
f
102.87 219.362 mo
102.44 219.362 li
102.44 217.94 li
102.87 217.94 li
102.87 219.362 li
f
103.806 219.387 mo
103.361 219.387 103.024 219.089 103.024 218.652 cv
103.024 218.213 103.361 217.917 103.806 217.917 cv
104.179 217.917 104.366 218.134 104.452 218.33 cv
104.081 218.503 li
104.045 218.392 103.934 218.296 103.806 218.296 cv
103.599 218.296 103.461 218.454 103.461 218.652 cv
103.461 218.85 103.599 219.008 103.806 219.008 cv
103.934 219.008 104.045 218.912 104.081 218.801 cv
104.452 218.972 li
104.368 219.161 104.179 219.387 103.806 219.387 cv
f
105.665 219.362 mo
104.587 219.362 li
104.587 217.94 li
105.665 217.94 li
105.665 218.315 li
105.017 218.315 li
105.017 218.456 li
105.65 218.456 li
105.65 218.831 li
105.017 218.831 li
105.017 218.987 li
105.665 218.987 li
105.665 219.362 li
f
99.9471 225.07 mo
99.6094 225.07 99.3496 224.937 99.1932 224.791 cv
99.5134 224.435 li
99.5989 224.511 99.7481 224.588 99.8904 224.588 cv
100.133 224.588 100.344 224.436 100.371 223.983 cv
100.217 224.129 100.007 224.211 99.8621 224.211 cv
99.4778 224.211 99.1649 224.002 99.1649 223.526 cv
99.1649 223.052 99.5524 222.772 99.997 222.772 cv
100.449 222.772 100.929 223.079 100.929 223.883 cv
100.929 224.686 100.449 225.07 99.9471 225.07 cv
100.011 223.219 mo
99.8654 223.219 99.7196 223.293 99.7196 223.526 cv
99.7196 223.722 99.8405 223.792 99.997 223.792 cv
100.113 223.792 100.235 223.741 100.351 223.602 cv
100.292 223.291 100.134 223.219 100.011 223.219 cv
f
103.072 225.028 mo
101.386 225.028 li
101.386 224.546 li
101.976 224.546 li
101.976 223.401 li
101.478 223.401 li
101.478 223.031 li
101.798 222.982 101.955 222.926 102.14 222.814 cv
102.588 222.814 li
102.588 224.546 li
103.072 224.546 li
103.072 225.028 li
f
105.207 225.028 mo
103.521 225.028 li
103.521 224.546 li
104.112 224.546 li
104.112 223.401 li
103.614 223.401 li
103.614 223.031 li
103.934 222.982 104.09 222.926 104.275 222.814 cv
104.724 222.814 li
104.724 224.546 li
105.207 224.546 li
105.207 225.028 li
f
102.047 226.864 mo
99.3791 226.864 97.2084 225.652 97.2084 224.163 cv
97.2084 222.673 99.3791 221.461 102.047 221.461 cv
104.715 221.461 106.886 222.673 106.886 224.163 cv
106.886 225.652 104.715 226.864 102.047 226.864 cv
102.047 221.774 mo
99.5517 221.774 97.5217 222.846 97.5217 224.163 cv
97.5217 225.479 99.5517 226.551 102.047 226.551 cv
104.543 226.551 106.573 225.479 106.573 224.163 cv
106.573 222.846 104.543 221.774 102.047 221.774 cv
f
304.573 383.533 mo
302.809 383.533 301.151 383.126 299.663 382.419 cv
299.428 382.387 299.2 382.354 298.972 382.314 cv
298.786 382.289 298.599 382.248 298.42 382.2 cv
298.29 382.175 li
298.111 382.127 li
297.55 381.988 297.014 381.802 296.493 381.574 cv
296.347 381.517 296.201 381.452 296.063 381.379 cv
295.851 381.273 li
295.648 381.168 li
295.095 380.883 294.567 380.542 294.079 380.16 cv
293.86 379.989 li
293.681 379.851 293.519 379.713 293.356 379.558 cv
293.242 379.461 293.137 379.355 293.031 379.249 cv
292.917 379.144 292.803 379.038 292.706 378.916 cv
292.6 378.802 292.495 378.689 292.397 378.575 cv
292.291 378.461 292.194 378.339 292.096 378.217 cv
291.999 378.095 291.909 377.973 291.812 377.843 cv
291.592 377.559 291.397 377.258 291.219 376.949 cv
291.219 376.933 li
291.056 376.665 li
290.885 376.372 290.739 376.071 290.601 375.754 cv
290.487 375.494 li
290.446 375.389 li
290.389 375.25 290.333 375.104 290.284 374.958 cv
290.219 374.795 290.17 374.633 290.121 374.462 cv
290.089 374.348 290.048 374.251 290.024 374.137 cv
290.008 374.088 li
290.008 374.08 li
289.999 374.064 li
289.983 373.974 li
289.975 373.958 li
289.918 373.722 li
289.886 373.584 289.853 373.43 289.829 373.284 cv
289.788 373.113 289.764 372.934 289.739 372.755 cv
289.715 372.609 289.699 372.455 289.682 372.308 cv
289.666 372.146 li
289.642 371.821 289.625 371.487 289.625 371.154 cv
289.625 364.896 294.697 359.824 300.956 359.824 cv
302.719 359.824 304.377 360.222 305.865 360.937 cv
305.873 360.937 li
307.612 361.132 309.222 361.726 310.628 362.612 cv
313.797 364.627 315.903 368.163 315.903 372.194 cv
315.903 373.064 315.805 373.909 315.618 374.722 cv
315.618 374.73 li
315.326 376.023 314.805 377.234 314.106 378.315 cv
312.099 381.452 308.579 383.533 304.573 383.533 cv
cp
338.977 369.602 mo
338.961 369.179 338.937 368.764 338.904 368.35 cv
338.896 368.179 338.88 368.017 338.864 367.846 cv
338.847 367.651 338.831 367.456 338.807 367.269 cv
338.766 366.854 338.717 366.432 338.66 366.017 cv
338.604 365.554 338.53 365.099 338.449 364.644 cv
338.449 364.627 li
338.425 364.481 li
338.417 364.465 li
338.36 364.115 338.295 363.766 338.222 363.425 cv
338.189 363.262 338.157 363.091 338.116 362.929 cv
338.083 362.75 338.043 362.579 337.994 362.4 cv
337.986 362.36 li
337.888 361.929 337.775 361.506 337.653 361.084 cv
337.612 360.897 li
337.482 360.425 337.336 359.962 337.189 359.507 cv
337.149 359.361 337.092 359.206 337.043 359.06 cv
336.783 358.272 336.49 357.499 336.173 356.735 cv
336.1 356.54 336.019 356.345 335.93 356.15 cv
335.84 355.931 335.743 355.711 335.637 355.492 cv
335.572 355.337 335.499 355.191 335.434 355.045 cv
335.287 354.728 335.141 354.411 334.979 354.102 cv
334.881 353.899 334.783 353.704 334.678 353.517 cv
334.548 353.257 334.41 353.005 334.271 352.753 cv
334.084 352.428 333.906 352.103 333.711 351.786 cv
333.711 351.777 li
333.638 351.664 li
333.605 351.615 li
333.491 351.404 333.361 351.2 333.231 350.997 cv
333.223 350.989 li
333.15 350.851 333.069 350.729 332.987 350.599 cv
332.857 350.404 332.727 350.209 332.597 350.022 cv
331.573 348.478 330.427 347.014 329.183 345.649 cv
329.062 345.511 328.923 345.365 328.793 345.226 cv
328.647 345.056 328.484 344.885 328.314 344.723 cv
328.208 344.609 328.102 344.495 327.989 344.389 cv
327.834 344.235 li
327.55 343.942 327.265 343.666 326.973 343.398 cv
326.729 343.162 326.485 342.943 326.233 342.723 cv
326.111 342.617 li
325.997 342.512 325.884 342.406 325.762 342.309 cv
325.68 342.235 li
325.672 342.235 li
325.38 341.983 325.087 341.731 324.786 341.496 cv
324.437 341.211 324.087 340.943 323.73 340.683 cv
323.575 340.561 li
323.201 340.285 322.836 340.016 322.454 339.765 cv
320.877 338.675 319.203 337.708 317.463 336.871 cv
317.203 336.773 316.951 336.684 316.691 336.595 cv
314.952 336.18 313.172 335.888 311.351 335.733 cv
311.343 335.733 li
310.221 335.627 309.092 335.579 307.945 335.579 cv
305.727 335.579 303.54 335.766 301.427 336.14 cv
301.208 336.172 300.988 336.213 300.769 336.261 cv
300.761 336.261 li
298.469 336.692 296.266 337.334 294.145 338.163 cv
293.73 339.415 292.954 340.345 291.824 340.816 cv
292.474 341.865 292.535 343.194 292.129 344.462 cv
292.015 344.836 291.853 345.178 291.649 345.495 cv
291.397 345.893 291.08 346.242 290.723 346.527 cv
290.259 346.917 289.723 347.193 289.146 347.348 cv
289.138 347.348 li
288.544 347.527 287.902 347.567 287.268 347.462 cv
287.285 347.941 287.228 348.421 287.073 348.9 cv
287.073 348.908 li
287.065 348.933 li
286.708 350.071 285.936 350.956 284.96 351.469 cv
284.489 351.721 283.969 351.891 283.432 351.948 cv
283.156 351.997 282.871 352.005 282.587 351.972 cv
282.254 351.956 281.904 351.891 281.571 351.786 cv
280.888 351.566 280.303 351.2 279.823 350.729 cv
279.011 351.891 277.661 352.59 276.239 352.59 cv
272.232 358.613 269.899 365.847 269.899 373.625 cv
269.899 379.095 271.054 384.297 273.142 389.003 cv
273.346 389.474 273.565 389.937 273.793 390.393 cv
275.776 394.432 278.458 398.065 281.677 401.137 cv
281.685 401.146 li
282.18 401.617 282.693 402.08 283.213 402.527 cv
283.383 402.674 283.554 402.82 283.725 402.958 cv
283.969 403.169 284.22 403.373 284.481 403.576 cv
284.976 403.966 285.497 404.348 286.017 404.714 cv
286.252 404.884 286.488 405.047 286.732 405.201 cv
287.098 405.445 287.464 405.689 287.829 405.917 cv
288.057 406.055 li
288.317 406.217 288.585 406.38 288.853 406.534 cv
288.975 406.608 289.105 406.681 289.227 406.754 cv
289.252 406.77 li
289.276 406.778 li
289.991 407.185 290.723 407.567 291.462 407.924 cv
291.722 408.022 291.983 408.111 292.243 408.201 cv
295.039 408.859 297.956 409.2 300.956 409.2 cv
301.5 409.2 302.045 409.192 302.589 409.16 cv
302.727 409.16 302.858 409.151 302.988 409.143 cv
303.532 409.119 304.069 409.078 304.605 409.021 cv
304.743 409.005 304.89 408.997 305.036 408.981 cv
305.215 408.965 li
305.41 408.94 305.605 408.916 305.8 408.891 cv
305.995 408.867 306.19 408.843 306.385 408.81 cv
306.621 408.778 306.856 408.745 307.092 408.704 cv
307.401 408.656 307.71 408.599 308.019 408.542 cv
308.295 408.493 308.563 408.436 308.831 408.379 cv
309.319 408.282 309.807 408.168 310.286 408.046 cv
310.294 408.046 li
310.587 407.973 310.88 407.892 311.164 407.81 cv
311.449 407.737 311.733 407.656 312.018 407.567 cv
312.172 407.518 312.318 407.469 312.465 407.428 cv
313.456 407.12 314.431 406.762 315.391 406.364 cv
315.618 406.274 315.854 406.177 316.081 406.071 cv
316.707 405.803 317.325 405.518 317.935 405.21 cv
318.17 405.096 318.406 404.974 318.634 404.852 cv
318.983 404.673 319.324 404.486 319.666 404.291 cv
320.007 404.096 320.348 403.893 320.69 403.69 cv
320.877 403.576 321.064 403.462 321.243 403.348 cv
321.421 403.234 321.6 403.113 321.787 402.999 cv
322.511 402.527 323.226 402.023 323.917 401.495 cv
324.25 401.243 324.583 400.983 324.916 400.715 cv
325.233 400.455 325.55 400.195 325.859 399.926 cv
325.94 399.853 li
325.949 399.853 li
325.957 399.853 li
326.233 399.593 li
326.566 399.301 326.9 398.992 327.233 398.675 cv
327.558 398.366 327.875 398.049 328.184 397.724 cv
328.428 397.48 328.663 397.236 328.891 396.984 cv
329.127 396.74 329.354 396.48 329.574 396.228 cv
329.826 395.944 330.078 395.651 330.321 395.359 cv
330.362 395.31 li
330.362 395.302 li
330.581 395.034 330.801 394.765 331.012 394.489 cv
331.224 394.221 331.435 393.944 331.638 393.66 cv
331.841 393.384 332.044 393.099 332.24 392.815 cv
332.443 392.53 332.63 392.246 332.825 391.953 cv
332.963 391.75 333.093 391.539 333.223 391.327 cv
333.442 390.986 333.654 390.636 333.857 390.279 cv
334.052 389.954 334.239 389.62 334.418 389.287 cv
334.426 389.263 li
334.597 388.954 334.759 388.645 334.914 388.336 cv
334.987 388.206 335.052 388.068 335.109 387.938 cv
335.174 387.808 335.239 387.67 335.304 387.54 cv
335.783 386.548 336.222 385.532 336.604 384.492 cv
336.726 384.159 336.848 383.825 336.962 383.492 cv
337.076 383.159 337.189 382.826 337.295 382.484 cv
337.425 382.07 337.547 381.639 337.661 381.216 cv
337.734 380.956 337.799 380.704 337.864 380.444 cv
337.872 380.428 li
337.978 380.005 338.075 379.574 338.165 379.144 cv
338.238 378.827 338.303 378.502 338.36 378.176 cv
338.433 377.794 338.498 377.412 338.555 377.03 cv
338.612 376.689 338.66 376.348 338.701 375.998 cv
338.815 375.153 338.896 374.291 338.937 373.422 cv
338.953 373.227 338.961 373.023 338.969 372.828 cv
339.002 372.276 339.01 371.715 339.01 371.154 cv
339.01 370.634 339.002 370.114 338.977 369.602 cv
cp
1 .792157 .494118 rgb
f
291.462 407.924 mo
289.325 407.144 287.285 406.177 285.35 405.031 cv
285.285 404.998 li
281.335 402.674 277.84 399.642 274.963 396.082 cv
274.955 396.066 li
274.67 395.724 274.402 395.375 274.142 395.017 cv
274.142 395.009 li
273.419 394.058 272.744 393.083 272.126 392.059 cv
268.574 386.28 266.526 379.477 266.526 372.194 cv
266.526 364.384 268.883 357.109 272.923 351.07 cv
273.443 351.664 274.118 352.135 274.922 352.387 cv
275.361 352.525 275.8 352.59 276.239 352.59 cv
272.232 358.613 269.899 365.847 269.899 373.625 cv
269.899 379.095 271.054 384.297 273.142 389.003 cv
273.346 389.474 273.565 389.937 273.793 390.393 cv
275.776 394.432 278.458 398.065 281.677 401.137 cv
281.685 401.146 li
282.18 401.617 282.693 402.08 283.213 402.527 cv
283.383 402.674 283.554 402.82 283.725 402.958 cv
283.969 403.169 284.22 403.373 284.481 403.576 cv
284.976 403.966 285.497 404.348 286.017 404.714 cv
286.252 404.884 286.488 405.047 286.732 405.201 cv
287.09 405.453 287.455 405.689 287.829 405.917 cv
288.057 406.055 li
288.317 406.225 288.585 406.38 288.853 406.534 cv
288.975 406.608 289.105 406.681 289.227 406.754 cv
289.252 406.77 li
289.276 406.778 li
289.991 407.185 290.723 407.567 291.462 407.924 cv
cp
.972549 .847059 .541176 rgb
f
342.617 372.194 mo
342.617 393.206 325.583 410.24 304.571 410.24 cv
300.255 410.24 296.108 409.52 292.241 408.199 cv
295.042 408.858 297.958 409.203 300.957 409.203 cv
321.972 409.203 339.006 392.169 339.006 371.158 cv
339.006 354.469 328.264 340.293 313.318 335.163 cv
330.115 339.112 342.617 354.192 342.617 372.194 cv
cp
1 .729412 .341176 rgb
f
293.239 372.194 mo
293.239 376.698 295.863 380.585 299.664 382.418 cv
294.016 381.777 289.624 376.978 289.624 371.158 cv
289.624 364.897 294.7 359.822 300.957 359.822 cv
302.717 359.822 304.38 360.221 305.863 360.934 cv
305.438 360.887 305.006 360.862 304.571 360.862 cv
298.311 360.862 293.239 365.934 293.239 372.194 cv
cp
f
294.333 338.077 mo
294.317 338.126 li
293.899 339.389 292.964 340.34 291.824 340.816 cv
292.48 341.874 292.693 343.202 292.283 344.482 cv
292.169 344.859 292.005 345.203 291.8 345.523 cv
291.545 345.925 291.226 346.277 290.865 346.564 cv
290.397 346.958 289.856 347.237 289.274 347.393 cv
289.266 347.393 li
288.667 347.573 288.019 347.614 287.38 347.507 cv
287.396 347.991 287.339 348.475 287.183 348.959 cv
287.183 348.967 li
287.175 348.992 li
286.814 350.14 286.035 351.033 285.051 351.55 cv
284.575 351.804 284.05 351.976 283.509 352.034 cv
283.23 352.083 282.943 352.091 282.657 352.058 cv
282.32 352.042 281.968 351.976 281.632 351.87 cv
280.943 351.648 280.352 351.279 279.868 350.804 cv
279.048 351.976 277.687 352.682 276.252 352.682 cv
275.809 352.682 275.367 352.616 274.924 352.477 cv
274.112 352.222 273.431 351.747 272.907 351.148 cv
274.793 351.747 277.868 351.148 279.212 349.016 cv
279.688 349.484 280.287 349.861 280.967 350.074 cv
283.296 350.812 285.781 349.525 286.519 347.196 cv
286.675 346.704 286.732 346.204 286.716 345.72 cv
288.848 346.056 290.955 344.81 291.627 342.694 cv
292.029 341.415 291.824 340.086 291.168 339.028 cv
292.324 338.545 294.144 337.489 294.193 335.587 cv
294.431 336.39 294.604 337.216 294.333 338.077 cv
cp
f
306.32 386.621 mo
305.393 385.979 304.321 385.451 302.939 385.451 cv
302.516 385.451 302.061 385.5 301.573 385.613 cv
296.428 386.776 288.764 385.085 290.828 380.639 cv
291.414 379.371 291.462 378.103 291.219 376.949 cv
291.219 376.933 li
291.162 376.632 291.08 376.331 290.983 376.047 cv
290.967 375.998 li
290.958 375.982 li
290.755 375.389 290.487 374.844 290.211 374.34 cv
290.203 374.34 li
290.064 374.153 li
290.008 374.088 li
290.008 374.08 li
289.999 374.064 li
289.902 373.934 289.796 373.796 289.682 373.657 cv
289.56 373.495 289.422 373.332 289.276 373.162 cv
289.113 372.967 288.943 372.755 288.764 372.544 cv
288.203 371.869 287.594 371.146 287.033 370.366 cv
286.87 370.146 286.708 369.919 286.561 369.683 cv
286.391 369.423 286.228 369.163 286.074 368.895 cv
284.326 365.838 287.033 362.417 289.26 362.717 cv
291.487 363.018 293.145 360.677 293.145 360.677 cv
295.794 355.337 299.988 355.394 304.792 355.029 cv
308.758 354.728 310.546 359.036 311.05 360.531 cv
313.237 362.27 314.293 363.173 315.838 367.358 cv
316.423 368.951 316.821 371.812 315.618 374.722 cv
315.618 374.73 li
315.391 375.275 315.114 375.819 314.765 376.356 cv
314.488 376.787 314.285 377.486 314.106 378.315 cv
313.245 382.314 312.847 389.547 306.32 386.621 cv
cp
342.432 368.407 mo
342.424 368.399 li
342.424 368.382 li
341.489 366.326 339.774 364.538 338.116 362.929 cv
338.108 362.921 li
336.791 361.645 335.515 360.474 334.678 359.377 cv
332.719 356.8 333.743 355.02 334.271 352.753 cv
334.572 351.46 334.718 350.006 334.06 348.152 cv
333.751 347.275 333.255 346.299 332.516 345.218 cv
331.256 343.373 329.728 342.569 328.111 342.309 cv
327.314 342.178 326.501 342.17 325.68 342.235 cv
325.672 342.235 li
321.503 342.577 317.26 344.641 315.529 340.358 cv
314.757 338.464 313.204 336.855 311.351 335.733 cv
311.343 335.733 li
310.213 335.05 308.978 334.555 307.742 334.278 cv
307.726 334.278 li
307.718 334.278 li
307.702 334.278 li
307.677 334.27 li
306.507 334.01 305.337 333.961 304.272 334.156 cv
304.247 334.156 li
303.5 334.294 302.809 334.546 302.191 334.928 cv
301.874 335.294 301.622 335.701 301.427 336.14 cv
300.037 339.163 301.086 343.625 299.598 345.966 cv
297.477 349.29 293.364 347.77 290.723 346.527 cv
290.259 346.917 289.723 347.193 289.146 347.348 cv
289.138 347.348 li
288.544 347.527 287.902 347.567 287.268 347.462 cv
287.285 347.941 287.228 348.421 287.073 348.9 cv
287.073 348.908 li
287.065 348.933 li
286.708 350.071 285.936 350.956 284.96 351.469 cv
284.489 351.721 283.969 351.891 283.432 351.948 cv
283.156 351.997 282.871 352.005 282.587 351.972 cv
281.92 355.175 281.4 358.499 277.263 359.377 cv
275.41 359.767 274.223 360.71 273.476 361.905 cv
273.467 361.921 li
273.443 361.945 li
273.435 361.97 li
273.419 362.002 li
273.386 362.075 li
273.354 362.157 li
273.264 362.384 li
273.256 362.392 li
273.216 362.53 li
273.175 362.652 li
273.167 362.685 li
273.118 362.864 li
273.094 362.953 li
273.069 363.051 li
273.029 363.262 li
273.004 363.368 li
272.972 363.555 272.947 363.758 272.931 363.969 cv
272.915 364.14 272.907 364.319 272.907 364.506 cv
272.907 364.717 272.915 364.944 272.939 365.172 cv
272.972 365.416 li
272.98 365.505 272.988 365.603 273.012 365.7 cv
273.053 365.936 li
273.069 366.042 273.094 366.139 273.11 366.237 cv
273.159 366.448 273.224 366.659 273.289 366.887 cv
273.329 366.993 273.362 367.106 273.41 367.22 cv
273.532 367.562 273.687 367.919 273.874 368.285 cv
273.939 368.407 274.004 368.529 274.069 368.651 cv
274.199 368.903 274.362 369.155 274.524 369.407 cv
274.613 369.537 274.703 369.667 274.792 369.797 cv
276.45 372.129 276.922 376.608 276.597 380.859 cv
276.58 381.094 276.556 381.338 276.54 381.574 cv
276.507 381.866 276.475 382.151 276.442 382.435 cv
276.442 382.444 li
276.337 383.281 276.198 384.102 276.036 384.874 cv
275.995 385.077 275.955 385.272 275.906 385.459 cv
275.889 385.516 li
275.841 385.727 275.792 385.93 275.735 386.134 cv
275.686 386.337 275.629 386.532 275.573 386.727 cv
275.532 386.873 275.491 387.011 275.442 387.15 cv
275.386 387.337 275.321 387.515 275.264 387.686 cv
275.207 387.84 275.15 387.987 275.093 388.125 cv
274.727 389.051 274.313 389.807 273.849 390.319 cv
273.793 390.393 li
273.695 390.531 li
273.614 390.661 li
273.565 390.758 273.516 390.856 273.484 390.962 cv
273.476 390.994 li
273.435 391.116 273.41 391.23 273.394 391.36 cv
273.378 391.482 273.37 391.612 273.37 391.742 cv
273.37 391.864 273.37 391.977 273.394 392.099 cv
273.41 392.229 li
273.419 392.278 li
273.427 392.376 273.443 392.49 273.467 392.595 cv
273.492 392.742 273.532 392.896 273.581 393.058 cv
273.622 393.213 273.679 393.375 273.736 393.538 cv
273.784 393.692 273.849 393.855 273.914 394.018 cv
274.02 394.286 274.15 394.554 274.288 394.83 cv
274.41 395.074 li
274.5 395.245 274.589 395.424 274.695 395.611 cv
274.776 395.757 274.865 395.911 274.955 396.066 cv
274.963 396.082 li
275.418 396.879 275.955 397.683 276.523 398.472 cv
276.548 398.504 li
276.808 398.87 277.076 399.236 277.344 399.593 cv
278.157 400.674 278.986 401.698 279.734 402.568 cv
280.018 402.901 280.287 403.21 280.53 403.495 cv
281.392 404.478 282.002 405.112 282.067 405.185 cv
282.075 405.193 li
285.854 407.68 290.715 409.932 296.648 411.395 cv
302.906 412.939 306.499 412.029 308.693 410.021 cv
308.701 410.013 li
308.71 410.013 li
309.344 409.444 309.864 408.77 310.286 408.046 cv
310.294 408.046 li
312.668 404.063 312.497 398.35 314.879 396.334 cv
318.211 393.522 322.275 398.984 325.94 399.853 cv
325.949 399.853 li
325.957 399.853 li
327.054 400.105 328.111 399.951 329.102 399.041 cv
330.427 397.821 330.516 396.659 330.362 395.31 cv
330.362 395.302 li
330.037 392.27 328.533 388.336 337.376 380.859 cv
337.547 380.712 337.71 380.574 337.872 380.428 cv
340.351 378.25 341.814 376.266 342.546 374.462 cv
342.554 374.454 li
343.488 372.186 343.261 370.195 342.432 368.407 cv
cp
1 .407843 .529412 rgb
f
302.418 388.004 mo
302.518 388.36 302.158 388.777 301.608 388.908 cv
299.974 389.295 298.263 389.536 296.531 389.416 cv
294.801 389.3 293.06 388.787 291.579 387.796 cv
290.841 387.299 290.172 386.68 289.636 385.948 cv
289.105 385.219 288.676 384.346 288.596 383.354 cv
288.517 382.342 288.847 381.451 289.106 380.688 cv
289.24 380.298 289.363 379.94 289.436 379.588 cv
289.514 379.235 289.546 378.889 289.515 378.577 cv
289.494 378.37 289.521 378.187 289.58 378.009 cv
289.643 377.833 289.73 377.662 289.893 377.565 cv
290.048 377.471 290.265 377.486 290.462 377.647 cv
290.66 377.802 290.826 378.103 290.858 378.442 cv
290.953 379.449 290.649 380.358 290.382 381.127 cv
290.111 381.902 289.884 382.607 289.941 383.247 cv
289.99 383.899 290.296 384.565 290.726 385.152 cv
291.161 385.745 291.71 386.256 292.331 386.675 cv
293.581 387.512 295.09 387.968 296.625 388.069 cv
298.169 388.177 299.746 387.963 301.296 387.594 cv
301.813 387.472 302.317 387.645 302.418 388.004 cv
cp
1 1 1 rgb
f
338.413 367.391 mo
338.229 367.369 338.066 367.257 337.954 367.117 cv
337.836 366.975 337.758 366.803 337.734 366.607 cv
337.585 365.421 336.795 364.282 335.87 363.31 cv
334.928 362.312 333.785 361.373 332.904 360.08 cv
332.463 359.438 332.124 358.695 331.926 357.939 cv
331.724 357.18 331.644 356.401 331.659 355.635 cv
331.671 354.867 331.775 354.11 331.947 353.374 cv
332.12 352.631 332.351 351.974 332.412 351.373 cv
332.433 351.174 332.508 351.008 332.619 350.866 cv
332.732 350.727 332.881 350.61 333.066 350.578 cv
333.246 350.546 333.435 350.621 333.57 350.796 cv
333.707 350.968 333.784 351.237 333.754 351.513 cv
333.664 352.336 333.406 353.033 333.262 353.68 cv
333.109 354.333 333.018 354.998 333.009 355.657 cv
332.983 356.979 333.288 358.269 334.022 359.324 cv
334.75 360.406 335.83 361.314 336.848 362.38 cv
337.363 362.923 337.85 363.513 338.25 364.184 cv
338.652 364.849 338.968 365.611 339.074 366.442 cv
339.109 366.72 339.035 366.984 338.906 367.155 cv
338.772 367.329 338.597 367.412 338.413 367.391 cv
cp
f
284.96 351.469 mo
284.692 352.273 284.57 353.167 284.513 354.078 cv
284.481 354.614 284.164 355.045 283.79 355.029 cv
283.44 355.012 283.172 354.606 283.172 354.094 cv
283.172 353.988 li
283.221 353.322 283.286 352.639 283.432 351.948 cv
283.969 351.891 284.489 351.721 284.96 351.469 cv
cp
f
299.566 348.453 mo
298.022 349.282 296.274 349.721 294.527 349.697 cv
293.657 349.705 292.763 349.55 291.95 349.347 cv
291.137 349.152 290.365 348.916 289.609 348.778 cv
288.853 348.64 288.122 348.583 287.472 348.77 cv
287.333 348.803 287.203 348.843 287.073 348.9 cv
287.228 348.421 287.285 347.941 287.268 347.462 cv
287.902 347.567 288.544 347.527 289.138 347.348 cv
289.146 347.348 li
289.39 347.38 289.625 347.413 289.853 347.453 cv
290.707 347.608 291.503 347.852 292.267 348.039 cv
293.039 348.226 293.779 348.347 294.543 348.347 cv
296.063 348.372 297.583 347.982 298.915 347.266 cv
299.354 347.023 299.867 347.031 300.086 347.34 cv
300.305 347.632 300.086 348.169 299.566 348.453 cv
cp
f
282.065 405.183 mo
274.376 400.11 271.129 394.016 272.317 391.41 cv
274.084 387.518 275.884 375.754 272.943 371.316 cv
272.943 371.316 271.226 365.495 273.465 361.917 cv
273.346 362.133 271.662 365.394 274.79 369.797 cv
278.03 374.358 276.744 387.076 273.85 390.315 cv
270.992 393.512 281.766 404.869 282.065 405.183 cv
cp
1 .219608 .380392 rgb
f
302.191 334.928 mo
301.874 335.294 301.622 335.701 301.427 336.14 cv
300.037 339.163 301.086 343.625 299.598 345.966 cv
297.477 349.29 293.364 347.77 290.723 346.527 cv
291.08 346.242 291.397 345.893 291.649 345.495 cv
295.803 346.015 299.452 347.283 299.582 340.358 cv
299.615 338.602 300.053 337.253 300.761 336.261 cv
300.769 336.261 li
301.159 335.709 301.646 335.27 302.191 334.928 cv
cp
f
311.054 360.535 mo
310.449 360.052 309.754 359.509 308.941 358.81 cv
305.193 355.599 295.845 357.608 295.082 360.07 cv
294.322 362.532 291.468 363.728 291.468 363.728 cv
291.046 363.954 290.539 364.134 289.912 364.246 cv
287.511 364.667 287.112 366.571 287.31 368.368 cv
287.493 370.013 288.192 371.572 289.239 372.911 cv
289.542 373.299 289.884 373.782 290.204 374.34 cv
289.167 372.878 287.292 371.046 286.071 368.897 cv
284.329 365.837 287.029 362.417 289.257 362.72 cv
291.486 363.018 293.149 360.679 293.149 360.679 cv
295.791 355.34 299.988 355.398 304.79 355.027 cv
308.757 354.724 310.55 359.033 311.054 360.535 cv
cp
f
291.283 349.923 mo
290.712 349.923 290.247 350.388 290.247 350.959 cv
290.247 355.353 li
290.247 355.924 290.712 356.389 291.283 356.389 cv
291.855 356.389 292.32 355.924 292.32 355.353 cv
292.32 350.959 li
292.32 350.388 291.855 349.923 291.283 349.923 cv
cp
1 .211765 .372549 rgb
f
289.25 394.17 mo
288.678 394.17 288.214 394.635 288.214 395.206 cv
288.214 399.6 li
288.214 400.171 288.678 400.636 289.25 400.636 cv
289.821 400.636 290.286 400.171 290.286 399.6 cv
290.286 395.206 li
290.286 394.635 289.821 394.17 289.25 394.17 cv
cp
f
279.292 363.507 mo
278.72 363.507 278.255 363.972 278.255 364.543 cv
278.255 368.937 li
278.255 369.508 278.72 369.973 279.292 369.973 cv
279.863 369.973 280.328 369.508 280.328 368.937 cv
280.328 364.543 li
280.328 363.972 279.863 363.507 279.292 363.507 cv
cp
f
309.363 344.014 mo
308.792 344.014 308.327 344.479 308.327 345.051 cv
308.327 349.445 li
308.327 350.016 308.792 350.481 309.363 350.481 cv
309.935 350.481 310.399 350.016 310.399 349.445 cv
310.399 345.051 li
310.399 344.479 309.935 344.014 309.363 344.014 cv
cp
f
337.106 376.326 mo
337.106 376.841 336.689 377.259 336.174 377.259 cv
335.659 377.259 335.241 376.841 335.241 376.326 cv
335.241 375.811 335.659 375.394 336.174 375.394 cv
336.689 375.394 337.106 375.811 337.106 376.326 cv
cp
f
329.493 361.827 mo
329.493 362.342 329.075 362.76 328.56 362.76 cv
328.045 362.76 327.628 362.342 327.628 361.827 cv
327.628 361.312 328.045 360.894 328.56 360.894 cv
329.075 360.894 329.493 361.312 329.493 361.827 cv
cp
f
325.241 346.244 mo
325.241 346.759 324.823 347.176 324.308 347.176 cv
323.793 347.176 323.375 346.759 323.375 346.244 cv
323.375 345.729 323.793 345.311 324.308 345.311 cv
324.823 345.311 325.241 345.729 325.241 346.244 cv
cp
f
297.852 392.971 mo
297.3 393.122 296.975 393.694 297.126 394.245 cv
298.288 398.482 li
298.44 399.033 299.011 399.358 299.562 399.207 cv
300.113 399.056 300.438 398.485 300.287 397.934 cv
299.125 393.697 li
298.974 393.145 298.403 392.82 297.852 392.971 cv
cp
f
276.187 381.424 mo
276.027 381.973 276.344 382.549 276.893 382.709 cv
281.111 383.936 li
281.66 384.096 282.236 383.78 282.396 383.231 cv
282.556 382.682 282.239 382.106 281.691 381.946 cv
277.472 380.719 li
276.923 380.559 276.347 380.876 276.187 381.424 cv
cp
f
319.717 368.497 mo
319.853 368.994 319.561 369.507 319.064 369.643 cv
318.567 369.779 318.054 369.487 317.918 368.99 cv
317.782 368.494 318.074 367.98 318.571 367.844 cv
319.067 367.708 319.58 368 319.717 368.497 cv
cp
f
288.395 358.648 mo
288.531 359.144 288.239 359.657 287.742 359.794 cv
287.246 359.93 286.732 359.638 286.596 359.141 cv
286.46 358.644 286.752 358.131 287.249 357.995 cv
287.746 357.859 288.259 358.151 288.395 358.648 cv
cp
f
282.31 376.08 mo
282.446 376.576 282.154 377.089 281.657 377.226 cv
281.16 377.362 280.647 377.07 280.511 376.573 cv
280.375 376.076 280.667 375.563 281.164 375.427 cv
281.66 375.291 282.174 375.583 282.31 376.08 cv
cp
f
287.217 387.168 mo
286.713 386.899 286.084 387.09 285.815 387.595 cv
283.746 391.471 li
283.477 391.975 283.669 392.604 284.173 392.873 cv
284.677 393.142 285.306 392.951 285.575 392.447 cv
287.643 388.57 li
287.912 388.066 287.721 387.437 287.217 387.168 cv
cp
f
315.2 386.561 mo
314.696 386.292 314.067 386.483 313.798 386.987 cv
311.729 390.864 li
311.46 391.368 311.652 391.997 312.156 392.266 cv
312.66 392.535 313.289 392.343 313.558 391.839 cv
315.626 387.963 li
315.895 387.459 315.704 386.83 315.2 386.561 cv
cp
f
307.437 404.05 mo
307.253 403.509 306.663 403.219 306.122 403.403 cv
301.962 404.82 li
301.422 405.004 301.132 405.594 301.316 406.135 cv
301.5 406.676 302.09 406.966 302.631 406.782 cv
306.79 405.365 li
307.331 405.181 307.621 404.591 307.437 404.05 cv
cp
f
331.621 382.356 mo
331.437 381.815 330.847 381.525 330.306 381.709 cv
326.146 383.126 li
325.606 383.31 325.315 383.9 325.5 384.441 cv
325.684 384.981 326.274 385.272 326.814 385.088 cv
330.974 383.671 li
331.515 383.487 331.805 382.897 331.621 382.356 cv
cp
f
333.28 369.752 mo
333.459 369.209 333.162 368.622 332.619 368.444 cv
328.444 367.074 li
327.901 366.896 327.315 367.193 327.136 367.736 cv
326.958 368.279 327.255 368.865 327.798 369.043 cv
331.973 370.413 li
332.516 370.591 333.102 370.295 333.28 369.752 cv
cp
f
326.524 353.414 mo
326.389 352.859 325.827 352.518 325.271 352.654 cv
321.003 353.697 li
320.448 353.833 320.107 354.395 320.243 354.95 cv
320.378 355.505 320.94 355.846 321.495 355.71 cv
325.764 354.667 li
326.319 354.531 326.66 353.969 326.524 353.414 cv
cp
f
327.021 377.334 mo
327.2 376.791 326.903 376.205 326.36 376.027 cv
322.185 374.657 li
321.642 374.479 321.055 374.775 320.877 375.318 cv
320.699 375.861 320.996 376.448 321.539 376.626 cv
325.714 377.996 li
326.257 378.174 326.843 377.877 327.021 377.334 cv
cp
f
283.956 397.14 mo
283.714 397.595 283.149 397.767 282.694 397.524 cv
282.24 397.282 282.068 396.717 282.311 396.262 cv
282.553 395.808 283.118 395.636 283.573 395.878 cv
284.027 396.121 284.199 396.686 283.956 397.14 cv
cp
f
320.103 382.767 mo
319.861 383.221 319.296 383.393 318.841 383.15 cv
318.387 382.908 318.215 382.343 318.457 381.889 cv
318.7 381.434 319.265 381.262 319.719 381.505 cv
320.174 381.747 320.345 382.312 320.103 382.767 cv
cp
f
309.02 396.207 mo
308.777 396.662 308.212 396.834 307.758 396.591 cv
307.304 396.349 307.132 395.784 307.374 395.329 cv
307.617 394.875 308.182 394.703 308.636 394.946 cv
309.091 395.188 309.262 395.753 309.02 396.207 cv
cp
f
306.031 341.631 mo
305.789 342.086 305.224 342.258 304.769 342.015 cv
304.315 341.773 304.143 341.208 304.386 340.753 cv
304.628 340.299 305.193 340.127 305.648 340.369 cv
306.102 340.612 306.274 341.177 306.031 341.631 cv
cp
f
319.265 360.57 mo
319.023 361.025 318.458 361.197 318.003 360.954 cv
317.549 360.712 317.377 360.147 317.62 359.692 cv
317.862 359.238 318.427 359.066 318.881 359.308 cv
319.336 359.551 319.508 360.116 319.265 360.57 cv
cp
f
291.938 350.013 mo
291.366 350.013 290.902 350.478 290.902 351.049 cv
290.902 355.443 li
290.902 356.014 291.366 356.479 291.938 356.479 cv
292.509 356.479 292.974 356.014 292.974 355.443 cv
292.974 351.049 li
292.974 350.478 292.509 350.013 291.938 350.013 cv
cp
.588235 .2 .564706 rgb
f
279.946 363.597 mo
279.375 363.597 278.91 364.061 278.91 364.633 cv
278.91 369.027 li
278.91 369.598 279.375 370.063 279.946 370.063 cv
280.517 370.063 280.982 369.598 280.982 369.027 cv
280.982 364.633 li
280.982 364.061 280.517 363.597 279.946 363.597 cv
cp
0 .709804 .694118 rgb
f
310.018 344.104 mo
309.446 344.104 308.981 344.569 308.981 345.141 cv
308.981 349.535 li
308.981 350.106 309.446 350.571 310.018 350.571 cv
310.589 350.571 311.054 350.106 311.054 349.535 cv
311.054 345.141 li
311.054 344.569 310.589 344.104 310.018 344.104 cv
cp
1 .666667 .721569 rgb
f
337.761 376.416 mo
337.761 376.931 337.343 377.349 336.828 377.349 cv
336.313 377.349 335.895 376.931 335.895 376.416 cv
335.895 375.901 336.313 375.484 336.828 375.484 cv
337.343 375.484 337.761 375.901 337.761 376.416 cv
cp
.588235 .2 .564706 rgb
f
325.895 346.334 mo
325.895 346.849 325.478 347.266 324.962 347.266 cv
324.447 347.266 324.03 346.849 324.03 346.334 cv
324.03 345.819 324.447 345.401 324.962 345.401 cv
325.478 345.401 325.895 345.819 325.895 346.334 cv
cp
1 .666667 .721569 rgb
f
298.506 393.061 mo
297.955 393.212 297.63 393.784 297.781 394.335 cv
298.943 398.572 li
299.094 399.123 299.665 399.448 300.216 399.297 cv
300.767 399.146 301.093 398.575 300.942 398.024 cv
299.779 393.787 li
299.628 393.235 299.057 392.91 298.506 393.061 cv
cp
.588235 .2 .564706 rgb
f
276.841 381.514 mo
276.682 382.063 276.998 382.639 277.547 382.799 cv
281.766 384.026 li
282.314 384.186 282.891 383.87 283.05 383.321 cv
283.21 382.772 282.894 382.196 282.345 382.036 cv
278.126 380.809 li
277.577 380.649 277.001 380.966 276.841 381.514 cv
cp
1 .666667 .721569 rgb
f
320.371 368.587 mo
320.507 369.084 320.215 369.597 319.718 369.733 cv
319.222 369.869 318.708 369.577 318.572 369.08 cv
318.436 368.584 318.728 368.071 319.225 367.934 cv
319.722 367.798 320.235 368.09 320.371 368.587 cv
cp
.588235 .2 .564706 rgb
f
282.964 376.17 mo
283.101 376.666 282.808 377.18 282.312 377.316 cv
281.815 377.452 281.302 377.16 281.165 376.663 cv
281.029 376.166 281.321 375.653 281.818 375.517 cv
282.315 375.381 282.828 375.673 282.964 376.17 cv
cp
1 .666667 .721569 rgb
f
287.871 387.258 mo
287.367 386.989 286.738 387.181 286.469 387.685 cv
284.401 391.561 li
284.132 392.065 284.323 392.694 284.827 392.963 cv
285.331 393.232 285.96 393.041 286.229 392.537 cv
288.298 388.66 li
288.567 388.156 288.375 387.527 287.871 387.258 cv
cp
0 .678431 .772549 rgb
f
315.854 386.651 mo
315.35 386.382 314.721 386.573 314.452 387.077 cv
312.384 390.954 li
312.115 391.458 312.306 392.087 312.81 392.356 cv
313.314 392.625 313.943 392.433 314.212 391.929 cv
316.281 388.053 li
316.55 387.549 316.358 386.92 315.854 386.651 cv
cp
1 .666667 .721569 rgb
f
308.091 404.14 mo
307.907 403.599 307.317 403.309 306.776 403.493 cv
302.617 404.91 li
302.076 405.094 301.786 405.684 301.97 406.225 cv
302.154 406.766 302.744 407.056 303.285 406.872 cv
307.444 405.455 li
307.985 405.271 308.276 404.681 308.091 404.14 cv
cp
0 .678431 .772549 rgb
f
333.935 369.842 mo
334.113 369.299 333.816 368.712 333.273 368.534 cv
329.098 367.164 li
328.556 366.986 327.969 367.283 327.791 367.826 cv
327.613 368.369 327.909 368.955 328.452 369.133 cv
332.627 370.503 li
333.17 370.681 333.757 370.385 333.935 369.842 cv
cp
.588235 .2 .564706 rgb
f
327.179 353.504 mo
327.043 352.949 326.481 352.608 325.926 352.744 cv
321.658 353.787 li
321.103 353.922 320.761 354.484 320.897 355.04 cv
321.033 355.595 321.595 355.936 322.15 355.8 cv
326.418 354.757 li
326.973 354.621 327.314 354.059 327.179 353.504 cv
cp
0 .678431 .772549 rgb
f
327.676 377.424 mo
327.854 376.881 327.557 376.295 327.014 376.117 cv
322.839 374.747 li
322.296 374.569 321.71 374.865 321.532 375.408 cv
321.354 375.951 321.65 376.538 322.193 376.716 cv
326.368 378.086 li
326.911 378.264 327.498 377.967 327.676 377.424 cv
cp
1 .666667 .721569 rgb
f
284.611 397.23 mo
284.368 397.685 283.803 397.857 283.349 397.614 cv
282.895 397.372 282.723 396.807 282.965 396.352 cv
283.208 395.898 283.773 395.726 284.227 395.968 cv
284.681 396.211 284.853 396.776 284.611 397.23 cv
cp
.588235 .2 .564706 rgb
f
320.757 382.857 mo
320.515 383.311 319.95 383.483 319.496 383.24 cv
319.041 382.998 318.869 382.433 319.112 381.979 cv
319.354 381.524 319.919 381.352 320.374 381.595 cv
320.828 381.837 321 382.402 320.757 382.857 cv
cp
0 .678431 .772549 rgb
f
306.686 341.721 mo
306.443 342.176 305.878 342.348 305.424 342.105 cv
304.97 341.863 304.798 341.298 305.04 340.843 cv
305.283 340.389 305.848 340.217 306.302 340.459 cv
306.756 340.702 306.928 341.267 306.686 341.721 cv
cp
0 .709804 .694118 rgb
f
319.92 360.66 mo
319.677 361.115 319.112 361.286 318.658 361.044 cv
318.203 360.802 318.032 360.237 318.274 359.782 cv
318.516 359.328 319.081 359.156 319.536 359.398 cv
319.99 359.641 320.162 360.206 319.92 360.66 cv
cp
1 .666667 .721569 rgb
f
289.904 394.26 mo
289.333 394.26 288.868 394.725 288.868 395.296 cv
288.868 399.69 li
288.868 400.261 289.333 400.726 289.904 400.726 cv
290.476 400.726 290.941 400.261 290.941 399.69 cv
290.941 395.296 li
290.941 394.725 290.476 394.26 289.904 394.26 cv
cp
1 .933333 .145098 rgb
f
330.147 361.917 mo
330.147 362.432 329.73 362.85 329.215 362.85 cv
328.7 362.85 328.282 362.432 328.282 361.917 cv
328.282 361.402 328.7 360.984 329.215 360.984 cv
329.73 360.984 330.147 361.402 330.147 361.917 cv
cp
f
289.05 358.738 mo
289.186 359.234 288.893 359.747 288.397 359.884 cv
287.9 360.02 287.387 359.728 287.251 359.231 cv
287.114 358.734 287.407 358.221 287.903 358.085 cv
288.4 357.949 288.913 358.241 289.05 358.738 cv
cp
f
332.275 382.446 mo
332.091 381.905 331.501 381.615 330.96 381.799 cv
326.801 383.216 li
326.26 383.4 325.97 383.99 326.154 384.531 cv
326.338 385.072 326.928 385.362 327.469 385.178 cv
331.628 383.761 li
332.169 383.577 332.46 382.987 332.275 382.446 cv
cp
f
309.674 396.297 mo
309.432 396.752 308.867 396.924 308.412 396.681 cv
307.958 396.439 307.786 395.874 308.029 395.419 cv
308.271 394.965 308.836 394.793 309.29 395.036 cv
309.745 395.278 309.917 395.843 309.674 396.297 cv
cp
f
298.437 408.196 mo
298.408 408.566 297.785 408.801 297.053 408.717 cv
292.699 408.157 288.47 406.747 284.628 404.638 cv
280.797 402.51 277.351 399.681 274.558 396.295 cv
274.097 395.72 273.963 395.068 274.261 394.846 cv
274.559 394.624 275.161 394.89 275.6 395.437 cv
278.28 398.686 281.594 401.408 285.28 403.456 cv
288.977 405.486 293.046 406.84 297.224 407.378 cv
297.92 407.458 298.467 407.826 298.437 408.196 cv
cp
1 1 1 rgb
f
317.463 336.871 mo
317.203 336.773 316.951 336.684 316.691 336.595 cv
314.952 336.18 313.172 335.888 311.351 335.733 cv
311.343 335.733 li
310.221 335.627 309.092 335.579 307.945 335.579 cv
305.727 335.579 303.54 335.766 301.427 336.14 cv
301.208 336.172 300.988 336.213 300.769 336.261 cv
300.761 336.261 li
298.469 336.692 296.266 337.334 294.145 338.163 cv
294.161 338.115 li
294.429 337.261 294.429 336.383 294.193 335.587 cv
297.396 334.677 300.769 334.181 304.247 334.156 cv
304.272 334.156 li
304.369 334.148 304.475 334.148 304.573 334.148 cv
305.613 334.148 306.653 334.189 307.677 334.27 cv
307.702 334.278 li
307.718 334.278 li
307.726 334.278 li
307.742 334.278 li
309.644 334.433 311.505 334.733 313.318 335.164 cv
313.684 335.286 314.05 335.424 314.407 335.562 cv
314.545 335.619 314.692 335.668 314.838 335.725 cv
314.984 335.782 315.122 335.839 315.26 335.896 cv
315.512 335.993 315.764 336.099 316.008 336.205 cv
316.504 336.416 316.984 336.635 317.463 336.871 cv
cp
.972549 .847059 .541176 rgb
f
343.868 69.1283 mo
352.679 69.1283 li
352.679 60.7168 li
343.868 60.7168 li
343.868 69.1283 li
cp
.0352941 .258824 .729412 rgb
f
277.899 71.7208 mo
282.21 61.3878 li
284.793 55.1959 290.845 51.1632 297.554 51.1632 cv
314.228 51.1632 li
314.228 71.7208 li
277.899 71.7208 li
cp
1 .168627 .164706 rgb
f
418.648 71.7208 mo
414.337 61.3878 li
411.753 55.1959 405.702 51.1632 398.992 51.1632 cv
382.318 51.1632 li
382.318 71.7208 li
418.648 71.7208 li
cp
.0431373 .313726 .890196 rgb
f
382.318 51.1567 mo
382.318 71.7273 li
326.402 70.6831 314.237 52.5141 314.237 51.1567 cv
382.318 51.1567 li
cp
.870588 .870588 .870588 rgb
f
314.228 69.1283 mo
305.418 69.1283 li
305.418 60.7168 li
314.228 60.7168 li
314.228 69.1283 li
cp
.721569 .121569 .121569 rgb
f
309.647 60.7168 mo
297.179 60.7168 li
292.161 60.7168 287.636 62.3669 285.704 64.9005 cv
282.48 69.1283 li
309.647 69.1283 li
309.647 69.1283 305.066 65.8653 309.647 60.7168 cv
cp
.611765 .101961 .101961 rgb
f
386.9 60.7168 mo
399.368 60.7168 li
404.385 60.7168 408.911 62.3669 410.843 64.9005 cv
414.066 69.1283 li
386.9 69.1283 li
386.9 69.1283 391.481 65.8653 386.9 60.7168 cv
cp
.0313726 .231373 .658824 rgb
f
418.648 75.3646 mo
277.899 75.3646 li
277.899 71.7208 li
418.648 71.7208 li
418.648 75.3646 li
cp
.65098 .65098 .65098 rgb
f
382.318 71.7273 mo
314.237 71.7273 li
314.237 51.1567 li
314.237 52.5141 326.402 70.6831 382.318 71.7273 cv
cp
.780392 .780392 .780392 rgb
f
325.986 59.6643 mo
325.986 58.6905 325.256 58.0991 324.281 58.0991 cv
321.655 58.0991 li
321.655 61.2296 li
324.281 61.2296 li
325.256 61.2296 325.986 60.6212 325.986 59.6643 cv
cp
319.185 67.5264 mo
319.185 55.9254 li
324.612 55.9254 li
327.134 55.9254 328.508 57.63 328.508 59.6643 cv
328.508 61.6817 327.117 63.4033 324.612 63.4033 cv
321.655 63.4033 li
321.655 67.5264 li
319.185 67.5264 li
cp
0 0 0 rgb
f
339.065 61.7343 mo
339.065 59.5606 337.674 57.9257 335.534 57.9257 cv
333.394 57.9257 332.02 59.5606 332.02 61.7343 cv
332.02 63.8911 333.394 65.543 335.534 65.543 cv
337.674 65.543 339.065 63.8911 339.065 61.7343 cv
cp
329.481 61.7343 mo
329.481 58.2384 332.038 55.7333 335.534 55.7333 cv
339.048 55.7333 341.605 58.2384 341.605 61.7343 cv
341.605 65.2303 339.048 67.7354 335.534 67.7354 cv
332.038 67.7354 329.481 65.2303 329.481 61.7343 cv
cp
f
343.343 67.5264 mo
343.343 55.9254 li
345.812 55.9254 li
345.812 65.3526 li
350.718 65.3526 li
350.718 67.5264 li
343.343 67.5264 li
cp
f
352.438 67.5264 mo
352.438 55.9254 li
354.908 55.9254 li
354.908 67.5264 li
352.438 67.5264 li
cp
f
356.647 61.7343 mo
356.647 58.1688 359.343 55.7333 362.821 55.7333 cv
365.378 55.7333 366.856 57.1252 367.674 58.5681 cv
365.552 59.6117 li
365.065 58.6735 364.022 57.9257 362.821 57.9257 cv
360.717 57.9257 359.186 59.542 359.186 61.7343 cv
359.186 63.925 360.717 65.543 362.821 65.543 cv
364.022 65.543 365.065 64.8122 365.552 63.8571 cv
367.674 64.8819 li
366.839 66.3265 365.378 67.7354 362.821 67.7354 cv
359.343 67.7354 356.647 65.3 356.647 61.7343 cv
cp
f
369.152 67.5264 mo
369.152 55.9254 li
377.361 55.9254 li
377.361 58.0991 li
371.621 58.0991 li
371.621 60.5515 li
377.24 60.5515 li
377.24 62.7252 li
371.621 62.7252 li
371.621 65.3526 li
377.361 65.3526 li
377.361 67.5264 li
369.152 67.5264 li
cp
f
58.1413 216.109 mo
57.8007 210.359 li
57.7496 209.497 57.0333 208.822 56.17 208.822 cv
53.8152 208.822 li
52.9519 208.822 52.2355 209.497 52.1846 210.359 cv
51.8438 216.109 li
51.8169 216.563 51.9738 216.995 52.2857 217.326 cv
52.5975 217.657 53.0196 217.839 53.4744 217.839 cv
56.5108 217.839 li
56.9654 217.839 57.3876 217.657 57.6994 217.326 cv
58.0113 216.995 58.1682 216.563 58.1413 216.109 cv
cp
.137255 .0431373 .0941176 rgb
f
23.6591 228.172 mo
23.6591 236.06 li
23.6591 236.536 24.0473 236.924 24.5242 236.924 cv
28.2432 236.924 li
28.7201 236.924 29.1081 236.536 29.1081 236.06 cv
29.1081 228.172 li
29.1081 227.695 28.7201 227.307 28.2432 227.307 cv
24.5242 227.307 li
24.0473 227.307 23.6591 227.695 23.6591 228.172 cv
cp
.462745 .701961 .372549 rgb
f
23.6591 239.704 mo
23.6591 247.592 li
23.6591 248.069 24.0473 248.457 24.5242 248.457 cv
28.2432 248.457 li
28.7201 248.457 29.1081 248.069 29.1081 247.592 cv
29.1081 239.704 li
29.1081 239.227 28.7201 238.839 28.2432 238.839 cv
24.5242 238.839 li
24.0473 238.839 23.6591 239.227 23.6591 239.704 cv
cp
1 .168627 .164706 rgb
f
28.2075 224.707 mo
26.6267 224.707 li
25.8678 224.707 25.2504 225.324 25.2504 226.083 cv
25.2504 249.384 li
25.2504 250.142 25.8678 250.76 26.6267 250.76 cv
28.2075 250.76 li
28.9664 250.76 29.5838 250.142 29.5838 249.384 cv
29.5838 226.083 li
29.5838 225.324 28.9664 224.707 28.2075 224.707 cv
cp
.235294 .117647 .180392 rgb
f
39.0408 174.448 mo
39.0124 172.803 37.6508 171.465 36.0057 171.465 cv
34.3607 171.465 32.9991 172.803 32.9706 174.448 cv
32.2434 216.411 li
32.2429 216.444 li
39.7686 216.444 li
39.0408 174.448 li
cp
.137255 .0431373 .0941176 rgb
f
58.9362 215.201 mo
51.0488 215.201 li
50.5719 215.201 50.1839 215.589 50.1839 216.066 cv
50.1839 219.785 li
50.1839 220.262 50.5719 220.65 51.0488 220.65 cv
58.9362 220.65 li
59.4131 220.65 59.8013 220.262 59.8013 219.785 cv
59.8013 216.066 li
59.8013 215.589 59.4131 215.201 58.9362 215.201 cv
cp
.235294 .117647 .180392 rgb
f
39.9948 215.201 mo
32.1073 215.201 li
31.6304 215.201 31.2423 215.589 31.2423 216.066 cv
31.2423 219.785 li
31.2423 220.262 31.6304 220.65 32.1073 220.65 cv
39.9948 220.65 li
40.4717 220.65 40.8597 220.262 40.8597 219.785 cv
40.8597 216.066 li
40.8597 215.589 40.4717 215.201 39.9948 215.201 cv
cp
f
57.7611 217.709 mo
33.2825 217.709 li
29.873 217.709 27.0992 220.483 27.0992 223.893 cv
27.0992 287.292 li
27.0992 290.702 29.873 293.475 33.2825 293.475 cv
57.7611 293.475 li
61.1706 293.475 63.9444 290.702 63.9444 287.292 cv
63.9444 223.893 li
63.9444 220.483 61.1706 217.709 57.7611 217.709 cv
cp
.321569 .0627451 .219608 rgb
f
58.5031 226.549 mo
32.5404 226.549 li
31.8247 226.549 31.2424 227.131 31.2424 227.847 cv
31.2424 237.541 li
31.2424 238.257 31.8247 238.839 32.5404 238.839 cv
58.5031 238.839 li
59.2189 238.839 59.8013 238.257 59.8013 237.541 cv
59.8013 227.847 li
59.8013 227.131 59.2189 226.549 58.5031 226.549 cv
cp
.607843 .690196 .384314 rgb
f
32.5405 238.287 mo
32.1292 238.287 31.7948 237.952 31.7948 237.541 cv
31.7948 227.847 li
31.7948 227.435 32.1292 227.101 32.5405 227.101 cv
58.5031 227.101 li
58.9143 227.101 59.2489 227.435 59.2489 227.847 cv
59.2489 237.541 li
59.2489 237.952 58.9143 238.287 58.5031 238.287 cv
32.5405 238.287 li
cp
1 .937255 .278431 rgb
f
40.3843 214.401 mo
31.6272 214.401 li
31.6272 208.952 li
40.3843 208.952 li
40.3843 214.401 li
cp
.235294 .117647 .180392 rgb
f
40.3843 207.395 mo
31.6272 207.395 li
31.6272 206.39 li
40.3843 206.39 li
40.3843 207.395 li
cp
f
40.3843 205.838 mo
31.6272 205.838 li
31.6272 204.833 li
40.3843 204.833 li
40.3843 205.838 li
cp
f
40.3843 204.282 mo
31.6272 204.282 li
31.6272 203.276 li
40.3843 203.276 li
40.3843 204.282 li
cp
f
40.3843 202.725 mo
31.6272 202.725 li
31.6272 201.719 li
40.3843 201.719 li
40.3843 202.725 li
cp
f
39.2769 243.518 mo
31.718 243.518 li
30.7737 243.518 30.0055 244.287 30.0055 245.231 cv
30.0055 248.431 li
30.0055 249.375 30.7737 250.144 31.718 250.144 cv
39.2769 250.144 li
40.2212 250.144 40.9894 249.375 40.9894 248.431 cv
40.9894 245.231 li
40.9894 244.287 40.2212 243.518 39.2769 243.518 cv
cp
f
38.176 244.483 mo
32.8189 244.483 li
32.1497 244.483 31.6052 245.028 31.6052 245.697 cv
31.6052 247.965 li
31.6052 248.634 32.1497 249.179 32.8189 249.179 cv
38.176 249.179 li
38.8452 249.179 39.3897 248.634 39.3897 247.965 cv
39.3897 245.697 li
39.3897 245.028 38.8452 244.483 38.176 244.483 cv
cp
1 .168627 .164706 rgb
f
43.2105 245.311 mo
59.6135 245.311 li
60.0808 245.311 60.4611 244.93 60.4611 244.463 cv
60.4611 243.996 60.0808 243.616 59.6135 243.616 cv
43.2105 243.616 li
42.743 243.616 42.3628 243.996 42.3628 244.463 cv
42.3628 244.93 42.743 245.311 43.2105 245.311 cv
cp
.137255 .0431373 .0941176 rgb
f
59.6135 246.21 mo
43.2105 246.21 li
42.743 246.21 42.3628 246.591 42.3628 247.058 cv
42.3628 247.525 42.743 247.906 43.2105 247.906 cv
59.6135 247.906 li
60.0808 247.906 60.4611 247.525 60.4611 247.058 cv
60.4611 246.591 60.0808 246.21 59.6135 246.21 cv
cp
f
59.6135 248.805 mo
43.2105 248.805 li
42.743 248.805 42.3628 249.185 42.3628 249.653 cv
42.3628 250.12 42.743 250.5 43.2105 250.5 cv
59.6135 250.5 li
60.0808 250.5 60.4611 250.12 60.4611 249.653 cv
60.4611 249.185 60.0808 248.805 59.6135 248.805 cv
cp
f
59.6135 251.4 mo
31.5341 251.4 li
31.0668 251.4 30.6866 251.78 30.6866 252.247 cv
30.6866 252.715 31.0668 253.095 31.5341 253.095 cv
59.6135 253.095 li
60.0808 253.095 60.4611 252.715 60.4611 252.247 cv
60.4611 251.78 60.0808 251.4 59.6135 251.4 cv
cp
f
59.6135 253.995 mo
31.5341 253.995 li
31.0668 253.995 30.6866 254.375 30.6866 254.842 cv
30.6866 255.309 31.0668 255.69 31.5341 255.69 cv
59.6135 255.69 li
60.0808 255.69 60.4611 255.309 60.4611 254.842 cv
60.4611 254.375 60.0808 253.995 59.6135 253.995 cv
cp
f
59.6135 256.589 mo
31.5341 256.589 li
31.0668 256.589 30.6866 256.97 30.6866 257.437 cv
30.6866 257.904 31.0668 258.284 31.5341 258.284 cv
59.6135 258.284 li
60.0808 258.284 60.4611 257.904 60.4611 257.437 cv
60.4611 256.97 60.0808 256.589 59.6135 256.589 cv
cp
f
59.6135 259.184 mo
31.5341 259.184 li
31.0668 259.184 30.6866 259.564 30.6866 260.032 cv
30.6866 260.499 31.0668 260.879 31.5341 260.879 cv
59.6135 260.879 li
60.0808 260.879 60.4611 260.499 60.4611 260.032 cv
60.4611 259.564 60.0808 259.184 59.6135 259.184 cv
cp
f
59.6135 261.779 mo
31.5341 261.779 li
31.0668 261.779 30.6866 262.159 30.6866 262.626 cv
30.6866 263.094 31.0668 263.474 31.5341 263.474 cv
59.6135 263.474 li
60.0808 263.474 60.4611 263.094 60.4611 262.626 cv
60.4611 262.159 60.0808 261.779 59.6135 261.779 cv
cp
f
57.7745 265.42 mo
33.3732 265.42 li
31.8738 265.42 30.6541 266.64 30.6541 268.139 cv
30.6541 285.988 li
30.6541 287.488 31.8738 288.708 33.3732 288.708 cv
57.7745 288.708 li
59.2738 288.708 60.4935 287.488 60.4935 285.988 cv
60.4935 268.139 li
60.4935 266.64 59.2738 265.42 57.7745 265.42 cv
cp
.235294 .117647 .180392 rgb
f
37.4108 268.25 mo
32.9141 268.25 li
32.6337 268.25 32.4056 268.544 32.4056 268.904 cv
32.4056 270.364 li
32.4056 270.725 32.6337 271.018 32.9141 271.018 cv
37.4108 271.018 li
37.6912 271.018 37.9194 270.725 37.9194 270.364 cv
37.9194 268.904 li
37.9194 268.544 37.6912 268.25 37.4108 268.25 cv
cp
.0431373 0 .027451 rgb
f
37.4108 272.921 mo
32.9141 272.921 li
32.6337 272.921 32.4056 273.214 32.4056 273.575 cv
32.4056 275.034 li
32.4056 275.395 32.6337 275.688 32.9141 275.688 cv
37.4108 275.688 li
37.6912 275.688 37.9194 275.395 37.9194 275.034 cv
37.9194 273.575 li
37.9194 273.214 37.6912 272.921 37.4108 272.921 cv
cp
f
37.4108 277.591 mo
32.9141 277.591 li
32.6337 277.591 32.4056 277.885 32.4056 278.245 cv
32.4056 279.705 li
32.4056 280.066 32.6337 280.359 32.9141 280.359 cv
37.4108 280.359 li
37.6912 280.359 37.9194 280.066 37.9194 279.705 cv
37.9194 278.245 li
37.9194 277.885 37.6912 277.591 37.4108 277.591 cv
cp
f
37.4108 282.262 mo
32.9141 282.262 li
32.6337 282.262 32.4056 282.555 32.4056 282.916 cv
32.4056 284.376 li
32.4056 284.736 32.6337 285.03 32.9141 285.03 cv
37.4108 285.03 li
37.6912 285.03 37.9194 284.736 37.9194 284.376 cv
37.9194 282.916 li
37.9194 282.555 37.6912 282.262 37.4108 282.262 cv
cp
f
44.3517 268.25 mo
39.855 268.25 li
39.5746 268.25 39.3464 268.544 39.3464 268.904 cv
39.3464 270.364 li
39.3464 270.725 39.5746 271.018 39.855 271.018 cv
44.3517 271.018 li
44.6321 271.018 44.8603 270.725 44.8603 270.364 cv
44.8603 268.904 li
44.8603 268.544 44.6321 268.25 44.3517 268.25 cv
cp
f
44.3517 272.921 mo
39.855 272.921 li
39.5746 272.921 39.3464 273.214 39.3464 273.575 cv
39.3464 275.034 li
39.3464 275.395 39.5746 275.688 39.855 275.688 cv
44.3517 275.688 li
44.6321 275.688 44.8603 275.395 44.8603 275.034 cv
44.8603 273.575 li
44.8603 273.214 44.6321 272.921 44.3517 272.921 cv
cp
f
44.3517 277.591 mo
39.855 277.591 li
39.5746 277.591 39.3464 277.885 39.3464 278.245 cv
39.3464 279.705 li
39.3464 280.066 39.5746 280.359 39.855 280.359 cv
44.3517 280.359 li
44.6321 280.359 44.8603 280.066 44.8603 279.705 cv
44.8603 278.245 li
44.8603 277.885 44.6321 277.591 44.3517 277.591 cv
cp
f
44.3517 282.262 mo
39.855 282.262 li
39.5746 282.262 39.3464 282.555 39.3464 282.916 cv
39.3464 284.376 li
39.3464 284.736 39.5746 285.03 39.855 285.03 cv
44.3517 285.03 li
44.6321 285.03 44.8603 284.736 44.8603 284.376 cv
44.8603 282.916 li
44.8603 282.555 44.6321 282.262 44.3517 282.262 cv
cp
f
44.3517 268.25 mo
39.855 268.25 li
39.5746 268.25 39.3464 268.544 39.3464 268.904 cv
39.3464 270.364 li
39.3464 270.725 39.5746 271.018 39.855 271.018 cv
44.3517 271.018 li
44.6321 271.018 44.8603 270.725 44.8603 270.364 cv
44.8603 268.904 li
44.8603 268.544 44.6321 268.25 44.3517 268.25 cv
cp
f
44.3517 272.921 mo
39.855 272.921 li
39.5746 272.921 39.3464 273.214 39.3464 273.575 cv
39.3464 275.034 li
39.3464 275.395 39.5746 275.688 39.855 275.688 cv
44.3517 275.688 li
44.6321 275.688 44.8603 275.395 44.8603 275.034 cv
44.8603 273.575 li
44.8603 273.214 44.6321 272.921 44.3517 272.921 cv
cp
f
44.3517 277.591 mo
39.855 277.591 li
39.5746 277.591 39.3464 277.885 39.3464 278.245 cv
39.3464 279.705 li
39.3464 280.066 39.5746 280.359 39.855 280.359 cv
44.3517 280.359 li
44.6321 280.359 44.8603 280.066 44.8603 279.705 cv
44.8603 278.245 li
44.8603 277.885 44.6321 277.591 44.3517 277.591 cv
cp
f
44.3517 282.262 mo
39.855 282.262 li
39.5746 282.262 39.3464 282.555 39.3464 282.916 cv
39.3464 284.376 li
39.3464 284.736 39.5746 285.03 39.855 285.03 cv
44.3517 285.03 li
44.6321 285.03 44.8603 284.736 44.8603 284.376 cv
44.8603 282.916 li
44.8603 282.555 44.6321 282.262 44.3517 282.262 cv
cp
f
51.2926 268.25 mo
46.7959 268.25 li
46.5154 268.25 46.2874 268.544 46.2874 268.904 cv
46.2874 270.364 li
46.2874 270.725 46.5154 271.018 46.7959 271.018 cv
51.2926 271.018 li
51.573 271.018 51.8011 270.725 51.8011 270.364 cv
51.8011 268.904 li
51.8011 268.544 51.573 268.25 51.2926 268.25 cv
cp
f
51.2926 272.921 mo
46.7959 272.921 li
46.5154 272.921 46.2874 273.214 46.2874 273.575 cv
46.2874 275.034 li
46.2874 275.395 46.5154 275.688 46.7959 275.688 cv
51.2926 275.688 li
51.573 275.688 51.8011 275.395 51.8011 275.034 cv
51.8011 273.575 li
51.8011 273.214 51.573 272.921 51.2926 272.921 cv
cp
f
51.2926 277.591 mo
46.7959 277.591 li
46.5154 277.591 46.2874 277.885 46.2874 278.245 cv
46.2874 279.705 li
46.2874 280.066 46.5154 280.359 46.7959 280.359 cv
51.2926 280.359 li
51.573 280.359 51.8011 280.066 51.8011 279.705 cv
51.8011 278.245 li
51.8011 277.885 51.573 277.591 51.2926 277.591 cv
cp
f
51.2926 282.262 mo
46.7959 282.262 li
46.5154 282.262 46.2874 282.555 46.2874 282.916 cv
46.2874 284.376 li
46.2874 284.736 46.5154 285.03 46.7959 285.03 cv
51.2926 285.03 li
51.573 285.03 51.8011 284.736 51.8011 284.376 cv
51.8011 282.916 li
51.8011 282.555 51.573 282.262 51.2926 282.262 cv
cp
f
51.2926 268.25 mo
46.7959 268.25 li
46.5154 268.25 46.2874 268.544 46.2874 268.904 cv
46.2874 270.364 li
46.2874 270.725 46.5154 271.018 46.7959 271.018 cv
51.2926 271.018 li
51.573 271.018 51.8011 270.725 51.8011 270.364 cv
51.8011 268.904 li
51.8011 268.544 51.573 268.25 51.2926 268.25 cv
cp
f
51.2926 272.921 mo
46.7959 272.921 li
46.5154 272.921 46.2874 273.214 46.2874 273.575 cv
46.2874 275.034 li
46.2874 275.395 46.5154 275.688 46.7959 275.688 cv
51.2926 275.688 li
51.573 275.688 51.8011 275.395 51.8011 275.034 cv
51.8011 273.575 li
51.8011 273.214 51.573 272.921 51.2926 272.921 cv
cp
f
51.2926 277.591 mo
46.7959 277.591 li
46.5154 277.591 46.2874 277.885 46.2874 278.245 cv
46.2874 279.705 li
46.2874 280.066 46.5154 280.359 46.7959 280.359 cv
51.2926 280.359 li
51.573 280.359 51.8011 280.066 51.8011 279.705 cv
51.8011 278.245 li
51.8011 277.885 51.573 277.591 51.2926 277.591 cv
cp
f
51.2926 282.262 mo
46.7959 282.262 li
46.5154 282.262 46.2874 282.555 46.2874 282.916 cv
46.2874 284.376 li
46.2874 284.736 46.5154 285.03 46.7959 285.03 cv
51.2926 285.03 li
51.573 285.03 51.8011 284.736 51.8011 284.376 cv
51.8011 282.916 li
51.8011 282.555 51.573 282.262 51.2926 282.262 cv
cp
f
58.2335 268.25 mo
53.7368 268.25 li
53.4564 268.25 53.2283 268.544 53.2283 268.904 cv
53.2283 270.364 li
53.2283 270.725 53.4564 271.018 53.7368 271.018 cv
58.2335 271.018 li
58.514 271.018 58.7421 270.725 58.7421 270.364 cv
58.7421 268.904 li
58.7421 268.544 58.514 268.25 58.2335 268.25 cv
cp
f
58.2335 272.921 mo
53.7368 272.921 li
53.4564 272.921 53.2283 273.214 53.2283 273.575 cv
53.2283 275.034 li
53.2283 275.395 53.4564 275.688 53.7368 275.688 cv
58.2335 275.688 li
58.514 275.688 58.7421 275.395 58.7421 275.034 cv
58.7421 273.575 li
58.7421 273.214 58.514 272.921 58.2335 272.921 cv
cp
f
58.2335 277.591 mo
53.7368 277.591 li
53.4564 277.591 53.2283 277.885 53.2283 278.245 cv
53.2283 279.705 li
53.2283 280.066 53.4564 280.359 53.7368 280.359 cv
58.2335 280.359 li
58.514 280.359 58.7421 280.066 58.7421 279.705 cv
58.7421 278.245 li
58.7421 277.885 58.514 277.591 58.2335 277.591 cv
cp
f
58.2335 282.262 mo
53.7368 282.262 li
53.4564 282.262 53.2283 282.555 53.2283 282.916 cv
53.2283 284.376 li
53.2283 284.736 53.4564 285.03 53.7368 285.03 cv
58.2335 285.03 li
58.514 285.03 58.7421 284.736 58.7421 284.376 cv
58.7421 282.916 li
58.7421 282.555 58.514 282.262 58.2335 282.262 cv
cp
f
37.6289 231.475 mo
37.6289 229.272 li
37.1238 229.786 li
36.755 229.399 li
37.7108 228.439 li
38.2753 228.439 li
38.2753 231.475 li
37.6289 231.475 li
cp
.258824 .478431 .294118 rgb
f
38.6678 231.042 mo
39.0047 230.61 li
39.2141 230.828 39.5464 230.956 39.8422 230.956 cv
40.2109 230.956 40.4157 230.796 40.4157 230.569 cv
40.4157 230.328 40.2291 230.218 39.8058 230.218 cv
39.6783 230.218 39.4735 230.223 39.4279 230.228 cv
39.4279 229.645 li
39.4826 229.649 39.692 229.649 39.8058 229.649 cv
40.1425 229.649 40.3656 229.549 40.3656 229.326 cv
40.3656 229.085 40.1199 228.967 39.8012 228.967 cv
39.5098 228.967 39.246 229.076 39.0319 229.281 cv
38.7088 228.876 li
38.9546 228.598 39.337 228.393 39.8695 228.393 cv
40.5795 228.393 41.0164 228.712 41.0164 229.217 cv
41.0164 229.599 40.6889 229.85 40.3519 229.909 cv
40.6615 229.941 41.0621 230.182 41.0621 230.637 cv
41.0621 231.161 40.5932 231.529 39.8649 231.529 cv
39.3051 231.529 38.8909 231.315 38.6678 231.042 cv
cp
f
41.8007 231.475 mo
42.8885 229.008 li
41.3593 229.008 li
41.3593 228.439 li
43.6396 228.439 li
43.6396 228.889 li
42.5108 231.475 li
41.8007 231.475 li
cp
f
43.9459 231.156 mo
43.9459 230.956 44.1143 230.788 44.3147 230.788 cv
44.515 230.788 44.6834 230.956 44.6834 231.156 cv
44.6834 231.357 44.515 231.525 44.3147 231.525 cv
44.1143 231.525 43.9459 231.357 43.9459 231.156 cv
cp
f
46.9054 229.959 mo
46.9054 229.399 46.7416 228.967 46.309 228.967 cv
45.8721 228.967 45.7083 229.399 45.7083 229.959 cv
45.7083 230.519 45.8721 230.956 46.309 230.956 cv
46.7416 230.956 46.9054 230.519 46.9054 229.959 cv
cp
45.0528 229.959 mo
45.0528 229.176 45.4397 228.393 46.309 228.393 cv
47.1739 228.393 47.5655 229.176 47.5655 229.959 cv
47.5655 230.742 47.1739 231.529 46.309 231.529 cv
45.4397 231.529 45.0528 230.742 45.0528 229.959 cv
cp
f
49.7292 229.959 mo
49.7292 229.399 49.565 228.967 49.1327 228.967 cv
48.6957 228.967 48.5319 229.399 48.5319 229.959 cv
48.5319 230.519 48.6957 230.956 49.1327 230.956 cv
49.565 230.956 49.7292 230.519 49.7292 229.959 cv
cp
47.8764 229.959 mo
47.8764 229.176 48.2634 228.393 49.1327 228.393 cv
49.9976 228.393 50.3889 229.176 50.3889 229.959 cv
50.3889 230.742 49.9976 231.529 49.1327 231.529 cv
48.2634 231.529 47.8764 230.742 47.8764 229.959 cv
cp
f
52.5526 229.959 mo
52.5526 229.399 52.3888 228.967 51.9563 228.967 cv
51.5193 228.967 51.3555 229.399 51.3555 229.959 cv
51.3555 230.519 51.5193 230.956 51.9563 230.956 cv
52.3888 230.956 52.5526 230.519 52.5526 229.959 cv
cp
50.7002 229.959 mo
50.7002 229.176 51.0869 228.393 51.9563 228.393 cv
52.8214 228.393 53.2127 229.176 53.2127 229.959 cv
53.2127 230.742 52.8214 231.529 51.9563 231.529 cv
51.0869 231.529 50.7002 230.742 50.7002 229.959 cv
cp
f
37.6289 236.94 mo
37.6289 234.737 li
37.1238 235.251 li
36.755 234.865 li
37.7108 233.904 li
38.2753 233.904 li
38.2753 236.94 li
37.6289 236.94 li
cp
f
38.7907 236.94 mo
38.7907 236.435 li
40.0334 235.515 40.3975 235.201 40.3975 234.828 cv
40.3975 234.564 40.1562 234.432 39.9059 234.432 cv
39.5599 234.432 39.296 234.568 39.0913 234.783 cv
38.7225 234.355 li
39.0184 234.013 39.4689 233.859 39.8923 233.859 cv
40.5385 233.859 41.053 234.223 41.053 234.828 cv
41.053 235.347 40.6251 235.797 39.8377 236.371 cv
41.0758 236.371 li
41.0758 236.94 li
38.7907 236.94 li
cp
f
41.5323 236.539 mo
41.8919 236.089 li
42.0966 236.303 42.3789 236.421 42.6976 236.421 cv
43.0572 236.421 43.2619 236.216 43.2619 235.97 cv
43.2619 235.702 43.0618 235.52 42.7158 235.52 cv
42.4654 235.52 42.2607 235.593 42.0785 235.765 cv
41.6278 235.647 li
41.6278 233.904 li
43.7126 233.904 li
43.7126 234.473 li
42.2742 234.473 li
42.2742 235.215 li
42.4199 235.069 42.6657 234.96 42.9434 234.96 cv
43.4578 234.96 43.9174 235.329 43.9174 235.943 cv
43.9174 236.589 43.435 236.995 42.7021 236.995 cv
42.1742 236.995 41.7918 236.822 41.5323 236.539 cv
cp
f
44.2921 236.621 mo
44.2921 236.421 44.4605 236.253 44.6609 236.253 cv
44.8612 236.253 45.0296 236.421 45.0296 236.621 cv
45.0296 236.822 44.8612 236.99 44.6609 236.99 cv
44.4605 236.99 44.2921 236.822 44.2921 236.621 cv
cp
f
47.2513 235.424 mo
47.2513 234.865 47.0875 234.432 46.655 234.432 cv
46.218 234.432 46.0542 234.865 46.0542 235.424 cv
46.0542 235.984 46.218 236.421 46.655 236.421 cv
47.0875 236.421 47.2513 235.984 47.2513 235.424 cv
cp
45.3988 235.424 mo
45.3988 234.641 45.7857 233.859 46.655 233.859 cv
47.5199 233.859 47.9114 234.641 47.9114 235.424 cv
47.9114 236.207 47.5199 236.995 46.655 236.995 cv
45.7857 236.995 45.3988 236.207 45.3988 235.424 cv
cp
f
50.0205 235.046 mo
49.9931 234.755 49.8293 234.428 49.4014 234.428 cv
49.0554 234.428 48.8642 234.664 48.8642 234.873 cv
48.8642 235.192 49.1419 235.329 49.4242 235.329 cv
49.6518 235.329 49.8749 235.224 50.0205 235.046 cv
cp
48.3727 236.676 mo
48.6594 236.18 li
48.8232 236.335 48.9963 236.417 49.2648 236.417 cv
49.7655 236.417 50.025 235.998 50.025 235.561 cv
50.025 235.493 li
49.8793 235.697 49.5743 235.884 49.242 235.884 cv
48.6959 235.884 48.2043 235.543 48.2043 234.896 cv
48.2043 234.305 48.6776 233.854 49.3695 233.854 cv
50.2888 233.854 50.6758 234.564 50.6758 235.424 cv
50.6758 236.339 50.1614 236.99 49.2648 236.99 cv
48.8961 236.99 48.5866 236.867 48.3727 236.676 cv
cp
f
52.844 235.424 mo
52.844 234.865 52.6802 234.432 52.2476 234.432 cv
51.8107 234.432 51.6469 234.865 51.6469 235.424 cv
51.6469 235.984 51.8107 236.421 52.2476 236.421 cv
52.6802 236.421 52.844 235.984 52.844 235.424 cv
cp
50.9916 235.424 mo
50.9916 234.641 51.3781 233.859 52.2476 233.859 cv
53.1127 233.859 53.5041 234.641 53.5041 235.424 cv
53.5041 236.207 53.1127 236.995 52.2476 236.995 cv
51.3781 236.995 50.9916 236.207 50.9916 235.424 cv
cp
f
405.789 257.626 mo
405.789 257.626 395.626 274.378 366.78 274.756 cv
364.556 274.784 362.439 274.705 360.429 274.536 cv
362.856 250.281 li
347.059 253.668 li
336.399 266.4 li
330.098 262.047 327.45 257.626 327.45 257.626 cv
329.398 256.847 li
347.764 249.49 li
366.684 241.913 li
385.508 249.479 li
403.841 256.841 li
405.789 257.626 li
cp
0 0 0 rgb
f
359.61 252.923 mo
354.783 273.796 li
348.809 272.701 343.948 270.798 340.08 268.67 cv
342.785 264.684 349.097 255.294 349.87 253.527 cv
359.61 252.923 li
cp
.227451 .239216 .25098 rgb
f
362.856 250.281 mo
360.429 274.536 li
358.447 274.372 356.567 274.124 354.783 273.796 cv
359.61 252.923 li
349.87 253.527 li
349.097 255.294 342.785 264.684 340.08 268.67 cv
338.736 267.93 337.511 267.168 336.399 266.4 cv
347.059 253.668 li
362.856 250.281 li
cp
.176471 .188235 .2 rgb
f
347.059 249.036 mo
339.222 248.691 332.255 247.867 327.45 246.286 cv
307.265 239.652 306.136 226.547 306.136 226.547 cv
306.136 226.547 322.555 225.582 328.579 214.668 cv
347.059 249.036 li
cp
.0352941 .239216 .501961 rgb
f
428.187 226.547 mo
422.349 240.64 406.105 246.286 406.105 246.286 cv
406.105 246.286 398.133 247.189 387.061 247.997 cv
404.982 214.674 li
411.006 225.582 427.419 226.547 427.419 226.547 cv
428.187 226.547 li
cp
.0196078 .133333 .270588 rgb
f
366.786 249.075 mo
366.775 249.075 li
366.78 206.809 li
366.786 249.075 li
cp
.0352941 .223529 .470588 rgb
f
366.78 206.809 mo
366.775 249.075 li
360.095 249.278 353.298 249.312 347.059 249.036 cv
328.579 214.668 li
328.579 214.668 354.495 215.47 366.78 206.809 cv
cp
.0313726 .203922 .419608 rgb
f
404.982 214.674 mo
387.061 247.997 li
380.975 248.443 373.94 248.855 366.786 249.075 cv
366.78 206.809 li
378.948 215.385 404.49 214.685 404.976 214.668 cv
404.982 214.674 li
cp
.0235294 .156863 .321569 rgb
f
406.105 246.286 mo
405.919 252.869 li
365.657 241.284 327.45 252.92 327.45 252.92 cv
327.45 246.286 li
329.291 245.764 li
354.426 238.638 381.07 238.819 406.105 246.286 cv
cp
.0235294 .156863 .333333 rgb
f
366.775 249.075 mo
366.775 252.677 li
349.018 252.677 li
347.059 249.036 li
353.298 249.312 360.095 249.278 366.775 249.075 cv
cp
0 0 0 rgb
f
405.919 252.869 mo
405.789 257.623 li
364.951 249.346 327.45 257.623 327.45 257.623 cv
327.45 252.92 li
327.45 252.92 365.657 241.284 405.919 252.869 cv
cp
.0156863 .0980392 .211765 rgb
f
335.339 243.758 mo
334.512 243.942 li
334.56 244.156 li
333.849 244.764 333.509 245.923 333.777 247.132 cv
334.046 248.341 334.845 249.247 335.746 249.497 cv
335.793 249.711 li
336.62 249.527 li
337.836 249.257 338.536 247.747 338.182 246.154 cv
337.828 244.561 336.555 243.488 335.339 243.758 cv
cp
.839216 .494118 .290196 rgb
f
337.355 246.337 mo
337.709 247.93 337.01 249.441 335.793 249.711 cv
334.577 249.981 333.304 248.909 332.951 247.316 cv
332.597 245.723 333.296 244.212 334.512 243.942 cv
335.728 243.672 337.001 244.744 337.355 246.337 cv
cp
.952941 .784314 .298039 rgb
f
397.9 243.758 mo
398.727 243.942 li
398.679 244.156 li
399.39 244.764 399.73 245.923 399.462 247.132 cv
399.193 248.341 398.394 249.247 397.493 249.497 cv
397.445 249.711 li
396.619 249.527 li
395.402 249.257 394.703 247.747 395.057 246.154 cv
395.411 244.561 396.684 243.488 397.9 243.758 cv
cp
.839216 .494118 .290196 rgb
f
395.884 246.337 mo
395.53 247.93 396.229 249.441 397.445 249.711 cv
398.662 249.981 399.934 248.909 400.288 247.316 cv
400.642 245.723 399.943 244.212 398.727 243.942 cv
397.511 243.672 396.238 244.744 395.884 246.337 cv
cp
.952941 .784314 .298039 rgb
f
228.228 83.5779 mo
232.24 102.528 li
25.7592 146.242 li
21.7473 127.292 li
26.4375 126.299 li
24.6495 129.047 li
33.0292 127.273 li
34.817 124.525 li
43.7 122.644 li
41.9121 125.393 li
50.2858 123.62 li
52.0736 120.872 li
60.9566 118.991 li
59.1687 121.739 li
67.5423 119.966 li
69.3302 117.218 li
78.2132 115.338 li
76.4252 118.086 li
84.7989 116.313 li
86.5869 113.565 li
95.4698 111.684 li
93.6818 114.432 li
102.056 112.66 li
103.843 109.911 li
112.726 108.031 li
110.938 110.779 li
119.312 109.006 li
121.1 106.258 li
129.983 104.377 li
128.195 107.126 li
136.569 105.353 li
138.357 102.605 li
147.24 100.724 li
145.452 103.472 li
153.825 101.7 li
155.613 98.9512 li
164.496 97.0706 li
162.708 99.8189 li
171.082 98.0461 li
172.87 95.2978 li
181.753 93.4172 li
179.965 96.1655 li
188.338 94.3927 li
190.126 91.6444 li
199.009 89.7638 li
197.221 92.5121 li
205.601 90.738 li
207.389 87.9898 li
216.266 86.1104 li
214.478 88.8587 li
222.852 87.0859 li
224.64 84.3376 li
228.228 83.5779 li
cp
f
67.6105 126.275 mo
67.4955 125.732 67.0186 125.488 66.4755 125.603 cv
65.0112 125.913 li
65.3808 127.658 li
66.845 127.348 li
67.3881 127.233 67.7233 126.808 67.6105 126.275 cv
cp
64.7474 131.46 mo
63.3783 124.993 li
66.4029 124.352 li
67.8088 124.055 68.7762 124.843 69.0163 125.977 cv
69.2545 127.102 68.6821 128.226 67.2855 128.521 cv
65.6373 128.87 li
66.1238 131.168 li
64.7474 131.46 li
cp
0 0 0 rgb
f
75.1439 125.885 mo
74.8873 124.673 73.9188 123.926 72.7257 124.179 cv
71.5332 124.431 70.9605 125.505 71.2171 126.716 cv
71.4716 127.919 72.4323 128.678 73.6248 128.425 cv
74.8178 128.173 75.3984 127.087 75.1439 125.885 cv
cp
69.8014 127.016 mo
69.3888 125.067 70.5187 123.369 72.4671 122.957 cv
74.4258 122.542 76.1469 123.636 76.5596 125.585 cv
76.9722 127.534 75.8422 129.232 73.8834 129.647 cv
71.9351 130.059 70.214 128.965 69.8014 127.016 cv
cp
f
78.2101 128.609 mo
76.841 122.142 li
78.2173 121.851 li
79.3299 127.106 li
82.0641 126.527 li
82.3207 127.739 li
78.2101 128.609 li
cp
f
83.279 127.536 mo
81.9099 121.069 li
83.2862 120.778 li
84.6554 127.245 li
83.279 127.536 li
cp
f
84.9405 123.811 mo
84.5197 121.823 85.7354 120.148 87.6745 119.737 cv
89.0994 119.436 90.0877 120.037 90.7139 120.745 cv
89.6544 121.577 li
89.2723 121.111 88.6022 120.817 87.9331 120.959 cv
86.7597 121.207 86.0976 122.29 86.3562 123.511 cv
86.6148 124.733 87.6588 125.454 88.8322 125.206 cv
89.5013 125.064 89.9969 124.534 90.1552 123.943 cv
91.459 124.265 li
91.1643 125.168 90.5158 126.126 89.0908 126.427 cv
87.1518 126.838 85.3613 125.799 84.9405 123.811 cv
cp
f
92.5934 125.564 mo
91.2242 119.097 li
95.8004 118.129 li
96.057 119.34 li
92.8572 120.018 li
93.1466 121.385 li
96.2788 120.722 li
96.5353 121.934 li
93.4032 122.597 li
93.7132 124.061 li
96.913 123.384 li
97.1696 124.595 li
92.5934 125.564 li
cp
f
100.726 123.843 mo
99.3565 117.376 li
100.733 117.084 li
101.845 122.339 li
104.58 121.761 li
104.836 122.972 li
100.726 123.843 li
cp
f
105.795 122.769 mo
104.425 116.302 li
105.802 116.011 li
107.171 122.478 li
105.795 122.769 li
cp
f
112.91 121.263 mo
108.934 117.698 li
109.827 121.916 li
108.45 122.207 li
107.081 115.74 li
108.496 115.441 li
112.353 118.869 li
111.493 114.806 li
112.869 114.515 li
114.239 120.982 li
112.91 121.263 li
cp
f
115.516 120.711 mo
114.146 114.244 li
118.723 113.276 li
118.979 114.487 li
115.779 115.165 li
116.069 116.532 li
119.201 115.869 li
119.458 117.081 li
116.325 117.744 li
116.635 119.208 li
119.835 118.531 li
120.092 119.743 li
115.516 120.711 li
cp
f
127.54 114.792 mo
127.298 113.648 126.413 112.914 125.085 113.195 cv
123.912 113.443 li
124.768 117.487 li
125.941 117.238 li
127.221 116.967 127.772 115.888 127.54 114.792 cv
cp
123.648 118.99 mo
122.279 112.523 li
124.828 111.983 li
126.855 111.554 128.534 112.546 128.946 114.495 cv
129.359 116.444 128.224 118.021 126.198 118.45 cv
123.648 118.99 li
cp
f
134.955 113.222 mo
134.699 112.011 133.73 111.263 132.537 111.516 cv
131.344 111.768 130.772 112.842 131.028 114.054 cv
131.283 115.256 132.243 116.015 133.436 115.763 cv
134.629 115.51 135.21 114.425 134.955 113.222 cv
cp
129.613 114.354 mo
129.2 112.405 130.33 110.707 132.278 110.294 cv
134.237 109.88 135.958 110.974 136.371 112.923 cv
136.783 114.872 135.653 116.57 133.695 116.984 cv
131.746 117.397 130.025 116.302 129.613 114.354 cv
cp
f
144.963 114.477 mo
140.986 110.912 li
141.879 115.13 li
140.503 115.421 li
139.134 108.954 li
140.549 108.655 li
144.405 112.083 li
143.545 108.02 li
144.922 107.729 li
146.291 114.196 li
144.963 114.477 li
cp
f
151.916 109.632 mo
151.66 108.42 150.691 107.672 149.498 107.925 cv
148.306 108.178 147.733 109.251 147.99 110.463 cv
148.244 111.665 149.205 112.424 150.397 112.172 cv
151.59 111.919 152.171 110.834 151.916 109.632 cv
cp
146.574 110.763 mo
146.161 108.814 147.291 107.116 149.24 106.703 cv
151.199 106.289 152.92 107.383 153.332 109.332 cv
153.745 111.281 152.615 112.979 150.656 113.393 cv
148.708 113.806 146.987 112.712 146.574 110.763 cv
cp
f
156.475 112.04 mo
155.363 106.785 li
153.472 107.185 li
153.216 105.973 li
158.374 104.881 li
158.63 106.093 li
156.75 106.491 li
157.862 111.746 li
156.475 112.04 li
cp
f
162.111 107.473 mo
161.69 105.486 162.906 103.81 164.845 103.4 cv
166.27 103.098 167.258 103.699 167.884 104.407 cv
166.825 105.239 li
166.443 104.773 165.773 104.48 165.104 104.621 cv
163.93 104.87 163.268 105.952 163.527 107.174 cv
163.785 108.395 164.829 109.116 166.003 108.868 cv
166.672 108.726 167.167 108.196 167.326 107.605 cv
168.63 107.927 li
168.335 108.83 167.686 109.788 166.261 110.09 cv
164.322 110.5 162.532 109.461 162.111 107.473 cv
cp
f
172.627 104.042 mo
172.512 103.498 172.025 103.257 171.472 103.374 cv
170.028 103.68 li
170.397 105.425 li
171.842 105.119 li
172.395 105.002 172.742 104.585 172.627 104.042 cv
cp
173.419 108.453 mo
171.662 106.424 li
170.654 106.637 li
171.14 108.935 li
169.764 109.227 li
168.395 102.76 li
171.419 102.119 li
172.767 101.834 173.778 102.542 174.033 103.744 cv
174.275 104.888 173.687 105.651 173.024 105.963 cv
174.999 108.118 li
173.419 108.453 li
cp
f
180.344 103.613 mo
180.088 102.401 179.119 101.654 177.926 101.907 cv
176.734 102.159 176.161 103.233 176.417 104.444 cv
176.672 105.647 177.633 106.406 178.825 106.153 cv
180.018 105.901 180.599 104.815 180.344 103.613 cv
cp
175.002 104.744 mo
174.589 102.795 175.719 101.097 177.668 100.685 cv
179.626 100.27 181.347 101.364 181.76 103.313 cv
182.173 105.262 181.043 106.96 179.084 107.375 cv
177.135 107.787 175.414 106.693 175.002 104.744 cv
cp
f
182.781 105.519 mo
183.306 104.313 li
183.862 104.692 184.654 104.939 185.546 104.751 cv
186.302 104.59 186.597 104.163 186.519 103.795 cv
186.277 102.651 182.72 104.225 182.204 101.791 cv
181.977 100.715 182.719 99.6255 184.241 99.3033 cv
185.269 99.0857 186.187 99.2153 186.953 99.6714 cv
186.4 100.842 li
185.774 100.468 185.029 100.393 184.369 100.532 cv
183.778 100.657 183.504 100.989 183.586 101.377 cv
183.803 102.405 187.371 100.93 187.882 103.345 cv
188.132 104.528 187.478 105.598 185.733 105.967 cv
184.492 106.23 183.512 106.002 182.781 105.519 cv
cp
f
188.596 104.287 mo
189.121 103.082 li
189.678 103.461 190.47 103.708 191.361 103.519 cv
192.118 103.359 192.412 102.932 192.334 102.564 cv
192.092 101.42 188.535 102.994 188.02 100.56 cv
187.792 99.4835 188.534 98.3943 190.056 98.072 cv
191.084 97.8545 192.003 97.9842 192.768 98.4402 cv
192.215 99.6107 li
191.589 99.2366 190.844 99.1615 190.185 99.301 cv
189.593 99.4263 189.319 99.7581 189.401 100.146 cv
189.619 101.173 193.186 99.6988 193.698 102.113 cv
193.948 103.296 193.294 104.367 191.548 104.736 cv
190.307 104.999 189.327 104.771 188.596 104.287 cv
cp
f
21.7473 127.292 mo
26.4375 126.299 li
24.6495 129.047 li
22.2275 129.56 li
21.7473 127.292 li
cp
.619608 .509804 .192157 rgb
f
34.817 124.525 mo
43.7 122.644 li
41.9121 125.393 li
33.0292 127.273 li
34.817 124.525 li
cp
f
52.0736 120.872 mo
60.9566 118.991 li
59.1687 121.739 li
50.2858 123.62 li
52.0736 120.872 li
cp
f
69.3302 117.218 mo
78.2132 115.338 li
76.4252 118.086 li
67.5423 119.966 li
69.3302 117.218 li
cp
f
86.5869 113.565 mo
95.4698 111.684 li
93.6818 114.432 li
84.7989 116.313 li
86.5869 113.565 li
cp
f
103.843 109.911 mo
112.726 108.031 li
110.938 110.779 li
102.056 112.66 li
103.843 109.911 li
cp
f
121.1 106.258 mo
129.983 104.377 li
128.195 107.126 li
119.312 109.006 li
121.1 106.258 li
cp
f
138.357 102.605 mo
147.24 100.724 li
145.452 103.472 li
136.569 105.353 li
138.357 102.605 li
cp
f
155.613 98.9512 mo
164.496 97.0706 li
162.708 99.8189 li
153.825 101.7 li
155.613 98.9512 li
cp
f
172.87 95.2978 mo
181.753 93.4172 li
179.965 96.1655 li
171.082 98.0461 li
172.87 95.2978 li
cp
f
190.126 91.6444 mo
199.009 89.7638 li
197.221 92.5121 li
188.338 94.3927 li
190.126 91.6444 li
cp
f
207.389 87.9898 mo
216.266 86.1104 li
214.478 88.8587 li
205.601 90.738 li
207.389 87.9898 li
cp
f
228.228 83.5779 mo
228.708 85.8459 li
222.852 87.0859 li
224.64 84.3376 li
228.228 83.5779 li
cp
f
34.817 124.525 mo
33.0292 127.273 li
24.6495 129.047 li
26.4375 126.299 li
34.817 124.525 li
cp
0 0 0 rgb
f
52.0736 120.872 mo
50.2858 123.62 li
41.9121 125.393 li
43.7 122.644 li
52.0736 120.872 li
cp
f
69.3302 117.218 mo
67.5423 119.966 li
59.1687 121.739 li
60.9566 118.991 li
69.3302 117.218 li
cp
f
86.5869 113.565 mo
84.7989 116.313 li
76.4252 118.086 li
78.2132 115.338 li
86.5869 113.565 li
cp
f
103.843 109.911 mo
102.056 112.66 li
93.6818 114.432 li
95.4698 111.684 li
103.843 109.911 li
cp
f
121.1 106.258 mo
119.312 109.006 li
110.938 110.779 li
112.726 108.031 li
121.1 106.258 li
cp
f
138.357 102.605 mo
136.569 105.353 li
128.195 107.126 li
129.983 104.377 li
138.357 102.605 li
cp
f
155.613 98.9512 mo
153.825 101.7 li
145.452 103.472 li
147.24 100.724 li
155.613 98.9512 li
cp
f
172.87 95.2978 mo
171.082 98.0461 li
162.708 99.8189 li
164.496 97.0706 li
172.87 95.2978 li
cp
f
190.126 91.6444 mo
188.338 94.3927 li
179.965 96.1655 li
181.753 93.4172 li
190.126 91.6444 li
cp
f
207.389 87.9898 mo
205.601 90.738 li
197.221 92.5121 li
199.009 89.7638 li
207.389 87.9898 li
cp
f
224.64 84.3376 mo
222.852 87.0859 li
214.478 88.8587 li
216.266 86.1104 li
224.64 84.3376 li
cp
f
25.2782 143.97 mo
29.9684 142.977 li
28.1805 145.725 li
25.7584 146.238 li
25.2782 143.97 li
cp
.619608 .509804 .192157 rgb
f
38.348 141.203 mo
47.2309 139.323 li
45.443 142.071 li
36.5601 143.951 li
38.348 141.203 li
cp
f
55.6045 137.55 mo
64.4875 135.669 li
62.6996 138.417 li
53.8167 140.298 li
55.6045 137.55 li
cp
f
72.8612 133.896 mo
81.7441 132.016 li
79.9562 134.764 li
71.0733 136.645 li
72.8612 133.896 li
cp
f
90.1178 130.243 mo
99.0007 128.362 li
97.2128 131.111 li
88.3299 132.991 li
90.1178 130.243 li
cp
f
107.374 126.59 mo
116.257 124.709 li
114.469 127.457 li
105.586 129.338 li
107.374 126.59 li
cp
f
124.631 122.936 mo
133.514 121.056 li
131.726 123.804 li
122.843 125.684 li
124.631 122.936 li
cp
f
141.888 119.283 mo
150.77 117.402 li
148.983 120.151 li
140.1 122.031 li
141.888 119.283 li
cp
f
159.144 115.629 mo
168.027 113.749 li
166.239 116.497 li
157.356 118.378 li
159.144 115.629 li
cp
f
176.401 111.976 mo
185.284 110.095 li
183.496 112.844 li
174.613 114.724 li
176.401 111.976 li
cp
f
193.657 108.323 mo
202.54 106.442 li
200.752 109.19 li
191.869 111.071 li
193.657 108.323 li
cp
f
210.92 104.668 mo
219.797 102.789 li
218.009 105.537 li
209.132 107.416 li
210.92 104.668 li
cp
f
231.759 100.256 mo
232.239 102.524 li
226.383 103.764 li
228.171 101.016 li
231.759 100.256 li
cp
f
38.348 141.203 mo
36.5601 143.951 li
28.1805 145.725 li
29.9684 142.977 li
38.348 141.203 li
cp
0 0 0 rgb
f
55.6045 137.55 mo
53.8167 140.298 li
45.443 142.071 li
47.2309 139.323 li
55.6045 137.55 li
cp
f
72.8612 133.896 mo
71.0733 136.645 li
62.6996 138.417 li
64.4875 135.669 li
72.8612 133.896 li
cp
f
90.1178 130.243 mo
88.3299 132.991 li
79.9562 134.764 li
81.7441 132.016 li
90.1178 130.243 li
cp
f
107.374 126.59 mo
105.586 129.338 li
97.2128 131.111 li
99.0007 128.362 li
107.374 126.59 li
cp
f
124.631 122.936 mo
122.843 125.684 li
114.469 127.457 li
116.257 124.709 li
124.631 122.936 li
cp
f
141.888 119.283 mo
140.1 122.031 li
131.726 123.804 li
133.514 121.056 li
141.888 119.283 li
cp
f
159.144 115.629 mo
157.356 118.378 li
148.983 120.151 li
150.77 117.402 li
159.144 115.629 li
cp
f
176.401 111.976 mo
174.613 114.724 li
166.239 116.497 li
168.027 113.749 li
176.401 111.976 li
cp
f
193.657 108.323 mo
191.869 111.071 li
183.496 112.844 li
185.284 110.095 li
193.657 108.323 li
cp
f
210.92 104.668 mo
209.132 107.416 li
200.752 109.19 li
202.54 106.442 li
210.92 104.668 li
cp
f
228.171 101.016 mo
226.383 103.764 li
218.009 105.537 li
219.797 102.789 li
228.171 101.016 li
cp
f
232.344 126.374 mo
228.498 145.358 li
21.6433 103.446 li
25.4899 84.4616 li
30.1886 85.4136 li
27.456 87.2254 li
35.8507 88.9264 li
38.5834 87.1145 li
47.4824 88.9177 li
44.7497 90.7295 li
53.1385 92.4292 li
55.8711 90.6174 li
64.7701 92.4204 li
62.0375 94.2323 li
70.4263 95.932 li
73.1589 94.1201 li
82.0579 95.9233 li
79.3252 97.7351 li
87.7141 99.4348 li
90.4467 97.623 li
99.3457 99.4261 li
96.6131 101.238 li
105.002 102.938 li
107.735 101.126 li
116.633 102.929 li
113.901 104.741 li
122.29 106.44 li
125.022 104.629 li
133.921 106.432 li
131.189 108.244 li
139.577 109.943 li
142.31 108.131 li
151.209 109.935 li
148.476 111.746 li
156.865 113.446 li
159.598 111.634 li
168.497 113.437 li
165.764 115.249 li
174.153 116.949 li
176.886 115.137 li
185.785 116.94 li
183.052 118.752 li
191.441 120.452 li
194.173 118.64 li
203.072 120.443 li
200.34 122.255 li
208.735 123.956 li
211.467 122.144 li
220.36 123.946 li
217.628 125.758 li
226.016 127.457 li
228.749 125.645 li
232.344 126.374 li
cp
.952941 .784314 .298039 rgb
f
67.9829 101.748 mo
68.0931 101.204 67.7521 100.791 67.2081 100.681 cv
65.7411 100.384 li
65.3868 102.132 li
66.8538 102.429 li
67.3978 102.54 67.8746 102.282 67.9829 101.748 cv
cp
63.2955 105.369 mo
64.6083 98.8902 li
67.6383 99.5042 li
69.0467 99.7895 69.6215 100.897 69.3912 102.033 cv
69.1629 103.16 68.1912 103.964 66.7921 103.681 cv
65.1409 103.346 li
64.6744 105.648 li
63.2955 105.369 li
cp
0 0 0 rgb
f
75.0509 104.383 mo
75.2969 103.169 74.705 102.099 73.5098 101.857 cv
72.3152 101.615 71.363 102.372 71.1171 103.586 cv
70.873 104.791 71.4531 105.869 72.6478 106.111 cv
73.843 106.353 74.8069 105.588 75.0509 104.383 cv
cp
69.6988 103.299 mo
70.0944 101.347 71.8059 100.237 73.7578 100.633 cv
75.7201 101.03 76.8648 102.718 76.4692 104.671 cv
76.0736 106.623 74.3621 107.732 72.3998 107.335 cv
70.4479 106.939 69.3032 105.251 69.6988 103.299 cv
cp
f
76.7825 108.102 mo
78.0952 101.623 li
79.4741 101.902 li
78.4073 107.167 li
81.1466 107.722 li
80.9006 108.936 li
76.7825 108.102 li
cp
f
81.8606 109.131 mo
83.1733 102.652 li
84.5522 102.931 li
83.2395 109.41 li
81.8606 109.131 li
cp
f
84.8653 106.372 mo
85.2688 104.381 87.05 103.326 88.9927 103.72 cv
90.4202 104.009 91.0883 104.953 91.3816 105.852 cv
90.0787 106.195 li
89.9132 105.615 89.4149 105.079 88.7446 104.944 cv
87.5691 104.705 86.5316 105.435 86.2836 106.659 cv
86.0356 107.883 86.7071 108.96 87.8827 109.198 cv
88.553 109.334 89.2185 109.044 89.5984 108.565 cv
90.6671 109.378 li
90.038 110.09 89.0622 110.711 87.6347 110.422 cv
85.6921 110.028 84.4619 108.363 84.8653 106.372 cv
cp
f
91.1918 111.021 mo
92.5045 104.543 li
97.089 105.471 li
96.843 106.685 li
93.6374 106.036 li
93.3599 107.406 li
96.4978 108.041 li
96.2517 109.255 li
93.1139 108.62 li
92.8167 110.087 li
96.0223 110.736 li
95.7763 111.95 li
91.1918 111.021 li
cp
f
99.3388 112.672 mo
100.651 106.193 li
102.03 106.473 li
100.964 111.737 li
103.703 112.292 li
103.457 113.506 li
99.3388 112.672 li
cp
f
104.417 113.701 mo
105.73 107.222 li
107.109 107.502 li
105.796 113.98 li
104.417 113.701 li
cp
f
111.545 115.145 mo
109.312 110.294 li
108.456 114.519 li
107.077 114.24 li
108.39 107.761 li
109.808 108.048 li
111.985 112.726 li
112.809 108.657 li
114.189 108.936 li
112.876 115.415 li
111.545 115.145 li
cp
f
114.155 115.674 mo
115.468 109.195 li
120.053 110.124 li
119.807 111.338 li
116.601 110.689 li
116.324 112.058 li
119.461 112.694 li
119.215 113.908 li
116.077 113.272 li
115.78 114.739 li
118.986 115.389 li
118.74 116.603 li
114.155 115.674 li
cp
f
127.542 115.019 mo
127.774 113.873 127.254 112.847 125.924 112.578 cv
124.748 112.34 li
123.927 116.39 li
125.103 116.628 li
126.385 116.888 127.32 116.117 127.542 115.019 cv
cp
122.302 117.325 mo
123.615 110.846 li
126.17 111.364 li
128.2 111.775 129.346 113.352 128.951 115.304 cv
128.555 117.257 126.887 118.254 124.857 117.842 cv
122.302 117.325 li
cp
f
134.97 116.524 mo
135.216 115.31 134.624 114.24 133.429 113.997 cv
132.234 113.755 131.282 114.513 131.036 115.727 cv
130.792 116.932 131.372 118.01 132.567 118.252 cv
133.762 118.494 134.726 117.729 134.97 116.524 cv
cp
129.618 115.44 mo
130.014 113.487 131.725 112.378 133.677 112.774 cv
135.639 113.171 136.784 114.859 136.389 116.812 cv
135.993 118.764 134.281 119.873 132.319 119.476 cv
130.367 119.08 129.222 117.392 129.618 115.44 cv
cp
f
143.656 121.651 mo
141.423 116.8 li
140.567 121.025 li
139.188 120.746 li
140.501 114.267 li
141.918 114.555 li
144.095 119.233 li
144.92 115.163 li
146.299 115.442 li
144.987 121.921 li
143.656 121.651 li
cp
f
151.962 119.967 mo
152.208 118.753 151.616 117.683 150.421 117.44 cv
149.227 117.198 148.274 117.956 148.029 119.17 cv
147.784 120.374 148.365 121.453 149.559 121.695 cv
150.754 121.937 151.718 121.172 151.962 119.967 cv
cp
146.61 118.883 mo
147.006 116.93 148.717 115.821 150.669 116.216 cv
152.632 116.614 153.776 118.302 153.381 120.254 cv
152.985 122.207 151.274 123.316 149.311 122.918 cv
147.359 122.523 146.215 120.835 146.61 118.883 cv
cp
f
155.189 123.988 mo
156.256 118.724 li
154.362 118.34 li
154.608 117.126 li
159.775 118.173 li
159.529 119.387 li
157.645 119.005 li
156.579 124.27 li
155.189 123.988 li
cp
f
162.175 122.036 mo
162.579 120.045 164.36 118.99 166.303 119.384 cv
167.73 119.673 168.398 120.617 168.692 121.516 cv
167.389 121.859 li
167.223 121.28 166.725 120.744 166.055 120.608 cv
164.879 120.37 163.842 121.1 163.594 122.324 cv
163.346 123.548 164.017 124.624 165.193 124.862 cv
165.863 124.998 166.529 124.708 166.908 124.229 cv
167.977 125.042 li
167.348 125.754 166.372 126.375 164.945 126.086 cv
163.002 125.692 161.772 124.028 162.175 122.036 cv
cp
f
173.189 123.065 mo
173.299 122.521 172.949 122.106 172.395 121.994 cv
170.947 121.7 li
170.593 123.449 li
172.04 123.742 li
172.594 123.854 173.079 123.609 173.189 123.065 cv
cp
172.163 127.428 mo
171.358 124.868 li
170.347 124.663 li
169.881 126.965 li
168.502 126.686 li
169.815 120.207 li
172.845 120.821 li
174.195 121.095 174.842 122.146 174.598 123.35 cv
174.365 124.496 173.522 124.962 172.79 124.986 cv
173.747 127.748 li
172.163 127.428 li
cp
f
180.442 125.737 mo
180.687 124.523 180.096 123.453 178.9 123.211 cv
177.706 122.969 176.754 123.726 176.508 124.94 cv
176.264 126.145 176.844 127.223 178.038 127.465 cv
179.234 127.707 180.197 126.942 180.442 125.737 cv
cp
175.089 124.653 mo
175.485 122.701 177.196 121.591 179.148 121.987 cv
181.111 122.384 182.255 124.072 181.86 126.025 cv
181.464 127.977 179.753 129.086 177.79 128.689 cv
175.839 128.293 174.694 126.605 175.089 124.653 cv
cp
f
181.921 128.454 mo
182.881 127.557 li
183.241 128.125 183.87 128.667 184.763 128.848 cv
185.521 129.001 185.961 128.726 186.036 128.357 cv
186.268 127.211 182.378 127.242 182.872 124.804 cv
183.091 123.726 184.205 123.021 185.73 123.33 cv
186.759 123.539 187.551 124.023 188.072 124.745 cv
187.1 125.6 li
186.674 125.008 186.02 124.643 185.359 124.509 cv
184.767 124.389 184.383 124.585 184.304 124.973 cv
184.096 126.003 187.956 126.067 187.466 128.485 cv
187.226 129.671 186.2 130.393 184.451 130.039 cv
183.208 129.787 182.399 129.188 181.921 128.454 cv
cp
f
187.747 129.634 mo
188.707 128.737 li
189.067 129.305 189.696 129.847 190.589 130.028 cv
191.347 130.182 191.787 129.907 191.862 129.538 cv
192.094 128.392 188.205 128.423 188.699 125.985 cv
188.917 124.906 190.031 124.202 191.556 124.511 cv
192.585 124.719 193.377 125.203 193.898 125.926 cv
192.926 126.78 li
192.5 126.189 191.846 125.823 191.185 125.69 cv
190.593 125.57 190.209 125.765 190.131 126.154 cv
189.922 127.183 193.782 127.247 193.292 129.666 cv
193.052 130.851 192.026 131.573 190.277 131.219 cv
189.034 130.967 188.225 130.369 187.747 129.634 cv
cp
f
25.4899 84.4616 mo
30.1886 85.4136 li
27.456 87.2254 li
25.0296 86.7338 li
25.4899 84.4616 li
cp
.619608 .509804 .192157 rgb
f
38.5834 87.1145 mo
47.4824 88.9177 li
44.7497 90.7295 li
35.8507 88.9264 li
38.5834 87.1145 li
cp
f
55.8711 90.6174 mo
64.7701 92.4204 li
62.0375 94.2323 li
53.1385 92.4292 li
55.8711 90.6174 li
cp
f
73.1589 94.1201 mo
82.0579 95.9233 li
79.3252 97.7351 li
70.4263 95.932 li
73.1589 94.1201 li
cp
f
90.4467 97.623 mo
99.3457 99.4261 li
96.6131 101.238 li
87.7141 99.4348 li
90.4467 97.623 li
cp
f
107.735 101.126 mo
116.633 102.929 li
113.901 104.741 li
105.002 102.938 li
107.735 101.126 li
cp
f
125.022 104.629 mo
133.921 106.432 li
131.189 108.244 li
122.29 106.44 li
125.022 104.629 li
cp
f
142.31 108.131 mo
151.209 109.935 li
148.476 111.746 li
139.577 109.943 li
142.31 108.131 li
cp
f
159.598 111.634 mo
168.497 113.437 li
165.764 115.249 li
156.865 113.446 li
159.598 111.634 li
cp
f
176.886 115.137 mo
185.785 116.94 li
183.052 118.752 li
174.153 116.949 li
176.886 115.137 li
cp
f
194.173 118.64 mo
203.072 120.443 li
200.34 122.255 li
191.441 120.452 li
194.173 118.64 li
cp
f
211.467 122.144 mo
220.36 123.946 li
217.628 125.758 li
208.735 123.956 li
211.467 122.144 li
cp
f
232.344 126.374 mo
231.884 128.646 li
226.016 127.457 li
228.749 125.645 li
232.344 126.374 li
cp
f
38.5834 87.1145 mo
35.8507 88.9264 li
27.456 87.2254 li
30.1886 85.4136 li
38.5834 87.1145 li
cp
0 0 0 rgb
f
55.8711 90.6174 mo
53.1385 92.4292 li
44.7497 90.7295 li
47.4824 88.9177 li
55.8711 90.6174 li
cp
f
73.1589 94.1201 mo
70.4263 95.932 li
62.0375 94.2323 li
64.7701 92.4204 li
73.1589 94.1201 li
cp
f
90.4467 97.623 mo
87.7141 99.4348 li
79.3252 97.7351 li
82.0579 95.9233 li
90.4467 97.623 li
cp
f
107.735 101.126 mo
105.002 102.938 li
96.6131 101.238 li
99.3457 99.4261 li
107.735 101.126 li
cp
f
125.022 104.629 mo
122.29 106.44 li
113.901 104.741 li
116.633 102.929 li
125.022 104.629 li
cp
f
142.31 108.131 mo
139.577 109.943 li
131.189 108.244 li
133.921 106.432 li
142.31 108.131 li
cp
f
159.598 111.634 mo
156.865 113.446 li
148.476 111.746 li
151.209 109.935 li
159.598 111.634 li
cp
f
176.886 115.137 mo
174.153 116.949 li
165.764 115.249 li
168.497 113.437 li
176.886 115.137 li
cp
f
194.173 118.64 mo
191.441 120.452 li
183.052 118.752 li
185.785 116.94 li
194.173 118.64 li
cp
f
211.467 122.144 mo
208.735 123.956 li
200.34 122.255 li
203.072 120.443 li
211.467 122.144 li
cp
f
228.749 125.645 mo
226.016 127.457 li
217.628 125.758 li
220.36 123.946 li
228.749 125.645 li
cp
f
22.1045 101.17 mo
26.8032 102.122 li
24.0706 103.934 li
21.6441 103.442 li
22.1045 101.17 li
cp
.619608 .509804 .192157 rgb
f
35.198 103.823 mo
44.0969 105.626 li
41.3644 107.438 li
32.4653 105.635 li
35.198 103.823 li
cp
f
52.4857 107.326 mo
61.3847 109.129 li
58.6521 110.941 li
49.7531 109.138 li
52.4857 107.326 li
cp
f
69.7735 110.829 mo
78.6725 112.632 li
75.9398 114.443 li
67.0409 112.64 li
69.7735 110.829 li
cp
f
87.0613 114.331 mo
95.9603 116.134 li
93.2277 117.946 li
84.3287 116.143 li
87.0613 114.331 li
cp
f
104.349 117.834 mo
113.248 119.637 li
110.515 121.449 li
101.617 119.646 li
104.349 117.834 li
cp
f
121.637 121.337 mo
130.536 123.14 li
127.803 124.952 li
118.904 123.149 li
121.637 121.337 li
cp
f
138.925 124.84 mo
147.824 126.643 li
145.091 128.455 li
136.192 126.652 li
138.925 124.84 li
cp
f
156.212 128.343 mo
165.111 130.146 li
162.379 131.958 li
153.48 130.154 li
156.212 128.343 li
cp
f
173.5 131.845 mo
182.399 133.648 li
179.667 135.46 li
170.768 133.657 li
173.5 131.845 li
cp
f
190.788 135.348 mo
199.687 137.151 li
196.954 138.963 li
188.055 137.16 li
190.788 135.348 li
cp
f
208.082 138.852 mo
216.975 140.654 li
214.242 142.466 li
205.349 140.664 li
208.082 138.852 li
cp
f
228.959 143.082 mo
228.498 145.355 li
222.631 144.166 li
225.364 142.354 li
228.959 143.082 li
cp
f
35.198 103.823 mo
32.4653 105.635 li
24.0706 103.934 li
26.8032 102.122 li
35.198 103.823 li
cp
0 0 0 rgb
f
52.4857 107.326 mo
49.7531 109.138 li
41.3644 107.438 li
44.0969 105.626 li
52.4857 107.326 li
cp
f
69.7735 110.829 mo
67.0409 112.64 li
58.6521 110.941 li
61.3847 109.129 li
69.7735 110.829 li
cp
f
87.0613 114.331 mo
84.3287 116.143 li
75.9398 114.443 li
78.6725 112.632 li
87.0613 114.331 li
cp
f
104.349 117.834 mo
101.617 119.646 li
93.2277 117.946 li
95.9603 116.134 li
104.349 117.834 li
cp
f
121.637 121.337 mo
118.904 123.149 li
110.515 121.449 li
113.248 119.637 li
121.637 121.337 li
cp
f
138.925 124.84 mo
136.192 126.652 li
127.803 124.952 li
130.536 123.14 li
138.925 124.84 li
cp
f
156.212 128.343 mo
153.48 130.154 li
145.091 128.455 li
147.824 126.643 li
156.212 128.343 li
cp
f
173.5 131.845 mo
170.768 133.657 li
162.379 131.958 li
165.111 130.146 li
173.5 131.845 li
cp
f
190.788 135.348 mo
188.055 137.16 li
179.667 135.46 li
182.399 133.648 li
190.788 135.348 li
cp
f
208.082 138.852 mo
205.349 140.664 li
196.954 138.963 li
199.687 137.151 li
208.082 138.852 li
cp
f
225.364 142.354 mo
222.631 144.166 li
214.242 142.466 li
216.975 140.654 li
225.364 142.354 li
cp
f
176.789 350.9 mo
180.464 410.609 li
218.228 430.104 250.277 410.609 250.277 410.609 cv
253.951 350.9 li
176.789 350.9 li
cp
.145098 .282353 .384314 rgb
f
256.394 350.9 mo
174.347 350.9 li
174.347 347.226 li
256.394 347.226 li
256.394 350.9 li
cp
f
244.146 327.629 mo
186.595 327.629 li
174.347 347.226 li
256.394 347.226 li
244.146 327.629 li
cp
.121569 .235294 .321569 rgb
f
175.003 308.241 mo
177.595 320.838 li
180.293 330.911 li
195.188 327.846 li
193.69 317.526 li
191.098 304.929 li
175.003 308.241 li
cp
f
195.723 333.989 mo
182.327 336.745 li
176.402 307.953 li
189.798 305.197 li
195.723 333.989 li
cp
.145098 .282353 .384314 rgb
f
189.671 316.477 mo
180.973 318.267 li
178.484 306.17 li
187.182 304.38 li
189.671 316.477 li
cp
.121569 .235294 .321569 rgb
f
194.016 322.148 mo
179.12 325.213 li
178.256 321.014 li
193.152 317.949 li
194.016 322.148 li
cp
.0509804 .137255 .192157 rgb
f
255.738 308.241 mo
253.146 320.838 li
250.448 330.911 li
235.552 327.846 li
237.051 317.526 li
239.642 304.929 li
255.738 308.241 li
cp
.121569 .235294 .321569 rgb
f
235.018 333.989 mo
248.414 336.745 li
254.338 307.953 li
240.942 305.197 li
235.018 333.989 li
cp
.145098 .282353 .384314 rgb
f
241.07 316.477 mo
249.767 318.267 li
252.256 306.17 li
243.559 304.38 li
241.07 316.477 li
cp
.121569 .235294 .321569 rgb
f
236.725 322.148 mo
251.62 325.213 li
252.484 321.014 li
237.589 317.949 li
236.725 322.148 li
cp
.0509804 .137255 .192157 rgb
f
192.15 376.621 mo
181.362 376.621 li
181.362 370.873 li
192.15 370.873 li
192.15 376.621 li
cp
.121569 .235294 .321569 rgb
f
203.595 376.621 mo
192.808 376.621 li
192.808 370.873 li
203.595 370.873 li
203.595 376.621 li
cp
f
203.595 376.621 mo
192.808 376.621 li
192.808 370.873 li
203.595 370.873 li
203.595 376.621 li
cp
f
215.041 376.621 mo
204.254 376.621 li
204.254 370.873 li
215.041 370.873 li
215.041 376.621 li
cp
f
215.041 376.621 mo
204.254 376.621 li
204.254 370.873 li
215.041 370.873 li
215.041 376.621 li
cp
f
226.487 376.621 mo
215.699 376.621 li
215.699 370.873 li
226.487 370.873 li
226.487 376.621 li
cp
f
226.487 376.621 mo
215.699 376.621 li
215.699 370.873 li
226.487 370.873 li
226.487 376.621 li
cp
f
237.933 376.621 mo
227.145 376.621 li
227.145 370.873 li
237.933 370.873 li
237.933 376.621 li
cp
f
237.933 376.621 mo
227.145 376.621 li
227.145 370.873 li
237.933 370.873 li
237.933 376.621 li
cp
f
249.378 376.621 mo
238.591 376.621 li
238.591 370.873 li
249.378 370.873 li
249.378 376.621 li
cp
f
191.653 387.118 mo
180.866 387.118 li
180.866 381.37 li
191.653 381.37 li
191.653 387.118 li
cp
f
203.099 387.118 mo
192.311 387.118 li
192.311 381.37 li
203.099 381.37 li
203.099 387.118 li
cp
f
203.099 387.118 mo
192.311 387.118 li
192.311 381.37 li
203.099 381.37 li
203.099 387.118 li
cp
f
214.545 387.118 mo
203.757 387.118 li
203.757 381.37 li
214.545 381.37 li
214.545 387.118 li
cp
f
214.545 387.118 mo
203.757 387.118 li
203.757 381.37 li
214.545 381.37 li
214.545 387.118 li
cp
f
225.991 387.118 mo
215.203 387.118 li
215.203 381.37 li
225.991 381.37 li
225.991 387.118 li
cp
f
225.991 387.118 mo
215.203 387.118 li
215.203 381.37 li
225.991 381.37 li
225.991 387.118 li
cp
f
237.436 387.118 mo
226.649 387.118 li
226.649 381.37 li
237.436 381.37 li
237.436 387.118 li
cp
f
237.436 387.118 mo
226.649 387.118 li
226.649 381.37 li
237.436 381.37 li
237.436 387.118 li
cp
f
248.882 387.118 mo
238.094 387.118 li
238.094 381.37 li
248.882 381.37 li
248.882 387.118 li
cp
f
193.477 366.124 mo
182.69 366.124 li
182.69 360.376 li
193.477 360.376 li
193.477 366.124 li
cp
f
204.923 366.124 mo
194.135 366.124 li
194.135 360.376 li
204.923 360.376 li
204.923 366.124 li
cp
f
204.923 366.124 mo
194.135 366.124 li
194.135 360.376 li
204.923 360.376 li
204.923 366.124 li
cp
f
216.369 366.124 mo
205.581 366.124 li
205.581 360.376 li
216.369 360.376 li
216.369 366.124 li
cp
f
216.369 366.124 mo
205.581 366.124 li
205.581 360.376 li
216.369 360.376 li
216.369 366.124 li
cp
f
227.815 366.124 mo
217.027 366.124 li
217.027 360.376 li
227.815 360.376 li
227.815 366.124 li
cp
f
227.815 366.124 mo
217.027 366.124 li
217.027 360.376 li
227.815 360.376 li
227.815 366.124 li
cp
f
239.26 366.124 mo
228.473 366.124 li
228.473 360.376 li
239.26 360.376 li
239.26 366.124 li
cp
f
239.26 366.124 mo
228.473 366.124 li
228.473 360.376 li
239.26 360.376 li
239.26 366.124 li
cp
f
250.706 366.124 mo
239.918 366.124 li
239.918 360.376 li
250.706 360.376 li
250.706 366.124 li
cp
f
192.981 376.621 mo
182.193 376.621 li
182.193 370.873 li
192.981 370.873 li
192.981 376.621 li
cp
f
204.427 376.621 mo
193.639 376.621 li
193.639 370.873 li
204.427 370.873 li
204.427 376.621 li
cp
f
204.427 376.621 mo
193.639 376.621 li
193.639 370.873 li
204.427 370.873 li
204.427 376.621 li
cp
f
215.872 376.621 mo
205.085 376.621 li
205.085 370.873 li
215.872 370.873 li
215.872 376.621 li
cp
f
215.872 376.621 mo
205.085 376.621 li
205.085 370.873 li
215.872 370.873 li
215.872 376.621 li
cp
f
227.318 376.621 mo
216.53 376.621 li
216.53 370.873 li
227.318 370.873 li
227.318 376.621 li
cp
f
227.318 376.621 mo
216.53 376.621 li
216.53 370.873 li
227.318 370.873 li
227.318 376.621 li
cp
f
238.764 376.621 mo
227.976 376.621 li
227.976 370.873 li
238.764 370.873 li
238.764 376.621 li
cp
f
238.764 376.621 mo
227.976 376.621 li
227.976 370.873 li
238.764 370.873 li
238.764 376.621 li
cp
f
250.21 376.621 mo
239.422 376.621 li
239.422 370.873 li
250.21 370.873 li
250.21 376.621 li
cp
f
192.485 387.118 mo
181.697 387.118 li
181.697 381.37 li
192.485 381.37 li
192.485 387.118 li
cp
f
203.93 387.118 mo
193.143 387.118 li
193.143 381.37 li
203.93 381.37 li
203.93 387.118 li
cp
f
203.93 387.118 mo
193.143 387.118 li
193.143 381.37 li
203.93 381.37 li
203.93 387.118 li
cp
f
215.376 387.118 mo
204.588 387.118 li
204.588 381.37 li
215.376 381.37 li
215.376 387.118 li
cp
f
215.376 387.118 mo
204.588 387.118 li
204.588 381.37 li
215.376 381.37 li
215.376 387.118 li
cp
f
226.822 387.118 mo
216.034 387.118 li
216.034 381.37 li
226.822 381.37 li
226.822 387.118 li
cp
f
226.822 387.118 mo
216.034 387.118 li
216.034 381.37 li
226.822 381.37 li
226.822 387.118 li
cp
f
238.268 387.118 mo
227.48 387.118 li
227.48 381.37 li
238.268 381.37 li
238.268 387.118 li
cp
f
238.268 387.118 mo
227.48 387.118 li
227.48 381.37 li
238.268 381.37 li
238.268 387.118 li
cp
f
249.713 387.118 mo
238.926 387.118 li
238.926 381.37 li
249.713 381.37 li
249.713 387.118 li
cp
f
191.988 397.615 mo
181.2 397.615 li
181.2 391.867 li
191.988 391.867 li
191.988 397.615 li
cp
f
203.434 397.615 mo
192.646 397.615 li
192.646 391.867 li
203.434 391.867 li
203.434 397.615 li
cp
f
203.434 397.615 mo
192.646 397.615 li
192.646 391.867 li
203.434 391.867 li
203.434 397.615 li
cp
f
214.88 397.615 mo
204.092 397.615 li
204.092 391.867 li
214.88 391.867 li
214.88 397.615 li
cp
f
214.88 397.615 mo
204.092 397.615 li
204.092 391.867 li
214.88 391.867 li
214.88 397.615 li
cp
f
226.325 397.615 mo
215.538 397.615 li
215.538 391.867 li
226.325 391.867 li
226.325 397.615 li
cp
f
226.325 397.615 mo
215.538 397.615 li
215.538 391.867 li
226.325 391.867 li
226.325 397.615 li
cp
f
237.771 397.615 mo
226.983 397.615 li
226.983 391.867 li
237.771 391.867 li
237.771 397.615 li
cp
f
237.771 397.615 mo
226.983 397.615 li
226.983 391.867 li
237.771 391.867 li
237.771 397.615 li
cp
f
249.217 397.615 mo
238.429 397.615 li
238.429 391.867 li
249.217 391.867 li
249.217 397.615 li
cp
f
233.361 354.053 mo
200.693 354.053 li
200.693 338.193 li
233.361 338.193 li
233.361 354.053 li
cp
.0509804 .137255 .192157 rgb
f
207.609 345.743 mo
207.609 345.332 207.301 345.083 206.889 345.083 cv
205.78 345.083 li
205.78 346.404 li
206.889 346.404 li
207.301 346.404 207.609 346.147 207.609 345.743 cv
cp
204.737 349.063 mo
204.737 344.164 li
207.029 344.164 li
208.094 344.164 208.674 344.884 208.674 345.743 cv
208.674 346.595 208.086 347.322 207.029 347.322 cv
205.78 347.322 li
205.78 349.063 li
204.737 349.063 li
cp
1 1 1 rgb
f
213.135 346.617 mo
213.135 345.699 212.547 345.009 211.644 345.009 cv
210.741 345.009 210.16 345.699 210.16 346.617 cv
210.16 347.528 210.741 348.226 211.644 348.226 cv
212.547 348.226 213.135 347.528 213.135 346.617 cv
cp
209.088 346.617 mo
209.088 345.141 210.168 344.083 211.644 344.083 cv
213.127 344.083 214.207 345.141 214.207 346.617 cv
214.207 348.094 213.127 349.151 211.644 349.151 cv
210.168 349.151 209.088 348.094 209.088 346.617 cv
cp
f
214.945 349.063 mo
214.945 344.164 li
215.988 344.164 li
215.988 348.145 li
218.059 348.145 li
218.059 349.063 li
214.945 349.063 li
cp
f
218.788 349.063 mo
218.788 344.164 li
219.831 344.164 li
219.831 349.063 li
218.788 349.063 li
cp
f
220.566 346.617 mo
220.566 345.112 221.705 344.083 223.173 344.083 cv
224.253 344.083 224.878 344.671 225.223 345.28 cv
224.327 345.721 li
224.121 345.325 223.68 345.009 223.173 345.009 cv
222.285 345.009 221.639 345.692 221.639 346.617 cv
221.639 347.543 222.285 348.226 223.173 348.226 cv
223.68 348.226 224.121 347.917 224.327 347.514 cv
225.223 347.947 li
224.87 348.557 224.253 349.151 223.173 349.151 cv
221.705 349.151 220.566 348.123 220.566 346.617 cv
cp
f
225.85 349.063 mo
225.85 344.164 li
229.316 344.164 li
229.316 345.083 li
226.893 345.083 li
226.893 346.118 li
229.265 346.118 li
229.265 347.036 li
226.893 347.036 li
226.893 348.145 li
229.316 348.145 li
229.316 349.063 li
225.85 349.063 li
cp
f
249.162 294.47 mo
249.055 293.396 248.742 292.04 247.85 291.683 cv
246.418 291.11 230.545 290.12 229.87 290.078 cv
229.773 290.072 li
229.718 290.153 li
228.603 291.815 226.873 294.614 227.356 295.156 cv
228.608 296.561 233.01 296.561 240.367 296.561 cv
242.627 296.561 245.094 296.469 247.695 296.24 cv
248.128 296.202 248.52 295.996 248.797 295.661 cv
249.075 295.326 249.204 294.903 249.162 294.47 cv
cp
.121569 .235294 .321569 rgb
f
173.576 235.33 mo
171.954 238.105 li
177.418 238.105 li
176.906 235.33 li
173.576 235.33 li
cp
f
249.78 239.554 mo
249.537 239.318 li
248.969 238.767 248.084 238.732 247.478 239.235 cv
246.306 240.206 246.068 240.332 246.023 240.348 cv
245.868 240.402 li
247.325 245.153 li
249.949 241.574 li
250.402 240.956 250.329 240.088 249.78 239.554 cv
cp
.109804 .211765 .290196 rgb
f
215.688 237.379 mo
215.688 237.406 li
215.688 238.209 215.04 238.858 214.237 238.858 cv
203.426 238.858 li
202.624 238.858 201.975 238.209 201.975 237.406 cv
201.975 237.379 li
215.688 237.379 li
cp
.145098 .282353 .384314 rgb
f
200.295 253.47 mo
200.509 254.11 202.515 263.714 203.881 264.354 cv
205.246 264.994 218.921 264.354 218.921 264.354 cv
219.797 266.37 li
219.797 266.37 205.759 268.025 202.984 266.147 cv
200.21 264.269 199.698 255.348 196.369 253.812 cv
193.039 252.275 200.295 253.47 200.295 253.47 cv
cp
f
211.862 253.854 mo
212.076 254.11 215.063 260.684 211.179 262.092 cv
207.295 263.501 208.277 264.141 209.301 264.141 cv
210.326 264.141 217.539 262.988 214.722 253.854 cv
211.862 253.854 li
cp
.121569 .235294 .321569 rgb
f
182.598 252.929 mo
182.191 254.11 li
180.228 254.11 li
180.634 252.929 li
182.598 252.929 li
cp
.145098 .282353 .384314 rgb
f
186.651 252.929 mo
186.244 254.11 li
184.281 254.11 li
184.687 252.929 li
186.651 252.929 li
cp
f
186.651 252.929 mo
186.244 254.11 li
184.281 254.11 li
184.687 252.929 li
186.651 252.929 li
cp
f
190.707 252.929 mo
190.301 254.11 li
188.337 254.11 li
188.744 252.929 li
190.707 252.929 li
cp
f
190.707 252.929 mo
190.301 254.11 li
188.337 254.11 li
188.744 252.929 li
190.707 252.929 li
cp
f
194.76 252.929 mo
194.354 254.11 li
192.391 254.11 li
192.797 252.929 li
194.76 252.929 li
cp
f
236.86 236.554 mo
236.86 238.574 li
245.755 238.574 li
244.599 234.989 li
244.599 234.989 238.795 235.729 236.86 236.554 cv
cp
.121569 .235294 .321569 rgb
f
251.702 292.354 mo
251.702 292.354 251.36 293.607 247.263 293.607 cv
244.012 293.607 232.252 292.822 228.172 292.644 cv
228.414 292.146 li
229.292 290.36 229.794 288.4 229.787 286.409 cv
229.787 285.627 229.702 284.876 229.463 284.33 cv
228.664 282.51 226.891 281.246 227.356 279.491 cv
227.82 277.736 226.502 275.366 225.164 274.618 cv
223.825 273.871 225.392 271.183 224.453 268.281 cv
223.777 266.198 221.298 266.181 219.796 266.369 cv
218.922 264.354 li
218.922 264.354 223.019 258.891 218.01 254.11 cv
175.441 254.11 li
174.239 251.888 li
207.295 251.888 li
207.295 250.409 li
173.436 250.409 li
171.026 245.956 li
170.817 245.571 170.67 245.151 170.599 244.72 cv
247.959 244.72 li
250.677 252.291 li
249.083 255.248 li
249.083 255.248 242.366 255.818 242.708 260.598 cv
243.049 265.379 251.927 281.997 251.702 292.354 cv
cp
.145098 .282353 .384314 rgb
f
218.193 245.745 mo
173.804 245.745 li
173.804 244.72 li
218.193 244.72 li
218.193 245.745 li
cp
.109804 .211765 .290196 rgb
f
233.694 249.672 mo
173.804 249.672 li
173.804 249.074 li
233.694 249.074 li
233.694 249.672 li
cp
.145098 .282353 .384314 rgb
f
244.134 247.986 mo
242.977 247.986 241.982 248.525 241.523 249.302 cv
235.238 249.302 li
235.238 251.222 li
241.523 251.222 li
241.982 251.999 242.977 252.538 244.134 252.538 cv
245.727 252.538 247.018 251.519 247.018 250.262 cv
247.018 249.005 245.727 247.986 244.134 247.986 cv
cp
.121569 .235294 .321569 rgb
f
208.832 250.611 mo
208.832 252.538 li
209.998 253.854 li
228.231 253.854 li
228.231 250.525 li
208.832 250.611 li
cp
f
247.959 244.72 mo
170.599 244.72 li
170.571 244.56 170.551 244.399 170.544 244.239 cv
170.286 238.994 li
170.242 238.115 170.943 237.379 171.823 237.379 cv
201.975 237.379 li
201.975 237.406 li
201.975 238.208 202.625 238.858 203.426 238.858 cv
214.237 238.858 li
215.039 238.858 215.688 238.208 215.688 237.406 cv
215.688 237.379 li
245.327 237.379 li
247.959 244.72 li
cp
f
207.295 250.409 mo
207.295 251.888 li
174.239 251.888 li
173.436 250.409 li
207.295 250.409 li
cp
f
224.666 261.789 mo
226.413 265.629 230.207 276.479 231.991 289.236 cv
232.132 290.24 232.99 290.988 234.004 290.988 cv
245.614 290.988 li
246.891 290.988 247.852 289.826 247.613 288.572 cv
246.44 282.421 243.107 266.386 239.563 262.592 cv
239.563 262.592 238.138 260.51 238.495 258.845 cv
238.628 258.221 238.124 257.65 237.495 257.755 cv
225.772 259.703 li
224.806 259.864 224.26 260.898 224.666 261.789 cv
cp
f
233.289 247.281 mo
231.325 247.281 li
228.636 239.513 li
230.6 239.513 li
233.289 247.281 li
cp
.0509804 .137255 .192157 rgb
f
236.02 247.281 mo
234.057 247.281 li
231.368 239.513 li
233.331 239.513 li
236.02 247.281 li
cp
f
238.752 247.281 mo
236.789 247.281 li
234.1 239.513 li
236.063 239.513 li
238.752 247.281 li
cp
f
241.484 247.281 mo
239.52 247.281 li
236.831 239.513 li
238.795 239.513 li
241.484 247.281 li
cp
f
244.215 247.281 mo
242.252 247.281 li
239.563 239.513 li
241.526 239.513 li
244.215 247.281 li
cp
f
244.215 247.281 mo
242.252 247.281 li
239.563 239.513 li
241.526 239.513 li
244.215 247.281 li
cp
f
178.357 244.464 mo
176.393 244.464 li
174.686 239.513 li
176.649 239.513 li
178.357 244.464 li
cp
.0627451 .168627 .239216 rgb
f
181.088 244.464 mo
179.125 244.464 li
177.418 239.513 li
179.381 239.513 li
181.088 244.464 li
cp
f
183.82 244.464 mo
181.857 244.464 li
180.149 239.513 li
182.113 239.513 li
183.82 244.464 li
cp
f
186.552 244.464 mo
184.588 244.464 li
182.881 239.513 li
184.844 239.513 li
186.552 244.464 li
cp
f
189.283 244.464 mo
187.32 244.464 li
185.613 239.513 li
187.576 239.513 li
189.283 244.464 li
cp
f
192.015 244.464 mo
190.052 244.464 li
188.344 239.513 li
190.308 239.513 li
192.015 244.464 li
cp
f
230.557 247.281 mo
228.594 247.281 li
225.905 239.513 li
227.868 239.513 li
230.557 247.281 li
cp
f
233.289 247.281 mo
231.325 247.281 li
228.636 239.513 li
230.6 239.513 li
233.289 247.281 li
cp
f
236.02 247.281 mo
234.057 247.281 li
231.368 239.513 li
233.331 239.513 li
236.02 247.281 li
cp
f
238.752 247.281 mo
236.789 247.281 li
234.1 239.513 li
236.063 239.513 li
238.752 247.281 li
cp
f
241.484 247.281 mo
239.52 247.281 li
236.831 239.513 li
238.795 239.513 li
241.484 247.281 li
cp
f
244.215 247.281 mo
242.252 247.281 li
239.563 239.513 li
241.526 239.513 li
244.215 247.281 li
cp
f
246.947 247.281 mo
244.984 247.281 li
242.295 239.513 li
244.258 239.513 li
246.947 247.281 li
cp
f
gsave
218.978 228.101 mo
192.423 212.524 li
234.623 202.909 li
261.178 218.485 li
218.978 228.101 li
clp
234.623 202.909 mo
192.423 212.524 li
218.978 228.101 li
261.178 218.485 li
234.623 202.909 li
cp
.839216 .494118 .290196 rgb
f
grestore
gsave
218.978 222.724 mo
192.423 207.148 li
234.623 197.533 li
261.178 213.109 li
218.978 222.724 li
clp
234.623 197.533 mo
192.423 207.148 li
218.978 222.724 li
261.178 213.109 li
234.623 197.533 li
cp
.839216 .494118 .290196 rgb
f
grestore
192.423 207.148 mo
192.423 212.524 li
218.978 228.101 li
218.978 222.724 li
192.423 207.148 li
cp
.839216 .529412 .352941 rgb
f
261.178 213.109 mo
261.178 218.485 li
218.978 228.101 li
218.978 222.724 li
261.178 213.109 li
cp
.670588 .227451 .0509804 rgb
f
229.695 172.564 mo
231.268 182.617 li
231.236 182.625 li
230.796 182.686 230.355 182.74 229.922 182.786 cv
229.831 182.801 229.74 182.809 229.65 182.817 cv
229.319 182.855 228.989 182.878 228.665 182.909 cv
228.471 182.924 228.283 182.94 228.096 182.947 cv
227.701 182.971 227.299 182.993 226.904 183.001 cv
226.496 183.017 226.082 183.024 225.667 183.024 cv
221.413 183.024 217.159 182.333 213.093 180.943 cv
215.987 171.297 li
220.41 172.733 225.111 173.155 229.695 172.564 cv
cp
1 1 1 rgb
f
232.842 192.693 mo
234.629 204.152 li
234.26 204.229 233.891 204.298 233.515 204.36 cv
233.146 204.421 232.777 204.482 232.402 204.536 cv
232.058 204.59 231.709 204.636 231.366 204.682 cv
231.048 204.721 230.737 204.751 230.427 204.782 cv
230.07 204.82 229.714 204.851 229.358 204.882 cv
228.128 204.982 226.898 205.028 225.667 205.028 cv
219.302 205.028 212.944 203.73 207.025 201.142 cv
210.328 190.151 li
215.19 192.302 220.429 193.377 225.674 193.377 cv
225.998 193.377 226.321 193.369 226.652 193.362 cv
227.558 193.339 228.471 193.285 229.378 193.193 cv
229.637 193.17 229.902 193.147 230.161 193.108 cv
230.44 193.077 230.718 193.047 230.996 193.001 cv
231.139 192.985 li
231.411 192.947 231.683 192.901 231.955 192.855 cv
232.253 192.809 232.551 192.755 232.842 192.693 cv
cp
f
223.67 214.811 mo
241.361 217.624 li
261.178 213.109 li
244.309 205.028 li
223.67 214.811 li
cp
.8 .270588 .0627451 rgb
f
227.986 161.597 mo
229.695 172.564 li
225.111 173.155 220.41 172.733 215.987 171.297 cv
219.335 160.161 li
219.335 160.153 li
219.399 159.953 li
219.406 159.938 li
219.872 159.247 222.501 158.717 225.667 158.717 cv
227.409 158.717 228.989 158.878 230.135 159.139 cv
227.986 161.597 li
cp
.901961 .568627 .380392 rgb
f
231.268 182.617 mo
232.842 192.693 li
232.544 192.747 232.246 192.801 231.955 192.855 cv
231.683 192.901 231.411 192.939 231.139 192.985 cv
230.996 193.001 li
230.718 193.039 230.44 193.077 230.161 193.108 cv
229.902 193.139 229.637 193.17 229.378 193.193 cv
228.471 193.285 227.558 193.339 226.652 193.362 cv
226.321 193.369 225.998 193.377 225.674 193.377 cv
220.429 193.377 215.19 192.302 210.328 190.151 cv
213.093 180.943 li
217.159 182.333 221.413 183.024 225.667 183.024 cv
226.082 183.024 226.496 183.017 226.904 183.001 cv
227.299 182.993 227.701 182.971 228.096 182.947 cv
228.283 182.94 228.471 182.924 228.665 182.909 cv
228.989 182.878 229.319 182.855 229.65 182.817 cv
229.74 182.809 229.831 182.801 229.922 182.786 cv
230.355 182.74 230.796 182.686 231.236 182.625 cv
231.268 182.617 li
cp
f
236.028 213.092 mo
227.804 215.48 215.935 216.502 204.785 208.591 cv
207.025 201.142 li
212.944 203.73 219.302 205.028 225.667 205.028 cv
226.898 205.028 228.128 204.982 229.358 204.882 cv
229.714 204.851 230.07 204.82 230.427 204.782 cv
230.737 204.751 231.048 204.721 231.366 204.682 cv
231.709 204.636 232.058 204.59 232.402 204.536 cv
232.777 204.482 233.146 204.421 233.515 204.36 cv
233.891 204.298 234.26 204.229 234.629 204.152 cv
236.028 213.092 li
cp
f
235.348 171.297 mo
233.502 171.896 231.612 172.318 229.695 172.564 cv
227.986 161.597 li
230.135 159.139 li
231.068 159.346 231.722 159.631 231.929 159.938 cv
231.935 159.953 li
232 160.153 li
232 160.161 li
235.348 171.297 li
cp
.901961 .447059 .188235 rgb
f
238.242 180.943 mo
237.452 181.212 236.656 181.457 235.859 181.673 cv
235.633 181.734 235.406 181.788 235.179 181.841 cv
235.05 181.88 234.92 181.911 234.784 181.941 cv
234.493 182.01 234.202 182.08 233.91 182.141 cv
233.729 182.179 233.548 182.218 233.36 182.256 cv
233.179 182.295 232.997 182.333 232.816 182.364 cv
232.298 182.456 231.786 182.54 231.268 182.617 cv
229.695 172.564 li
231.612 172.318 233.502 171.896 235.348 171.297 cv
238.242 180.943 li
cp
.878431 .878431 .878431 rgb
f
241.007 190.151 mo
240.256 190.482 239.492 190.789 238.721 191.065 cv
238.482 191.157 238.242 191.242 238.003 191.326 cv
237.731 191.419 237.459 191.511 237.187 191.595 cv
236.908 191.687 236.63 191.772 236.351 191.849 cv
236.105 191.925 235.859 191.995 235.607 192.056 cv
235.477 192.094 235.354 192.133 235.225 192.164 cv
235.031 192.21 234.836 192.263 234.636 192.309 cv
234.389 192.371 234.137 192.425 233.891 192.478 cv
233.541 192.555 233.192 192.624 232.842 192.693 cv
231.268 182.617 li
231.786 182.54 232.298 182.456 232.816 182.364 cv
232.997 182.333 233.179 182.295 233.36 182.256 cv
233.548 182.218 233.729 182.179 233.91 182.141 cv
234.202 182.08 234.493 182.018 234.784 181.941 cv
234.92 181.911 235.05 181.88 235.179 181.841 cv
235.406 181.788 235.633 181.734 235.859 181.673 cv
236.656 181.457 237.452 181.212 238.242 180.943 cv
241.007 190.151 li
cp
.901961 .447059 .188235 rgb
f
244.309 201.142 mo
243.94 201.303 243.571 201.457 243.196 201.61 cv
242.82 201.764 242.445 201.91 242.069 202.048 cv
241.868 202.125 241.668 202.201 241.467 202.271 cv
241.227 202.363 240.988 202.447 240.742 202.524 cv
240.418 202.639 240.081 202.747 239.751 202.854 cv
239.447 202.946 239.136 203.046 238.831 203.131 cv
238.579 203.208 238.326 203.277 238.074 203.346 cv
237.815 203.423 237.549 203.492 237.284 203.553 cv
236.934 203.645 236.578 203.73 236.222 203.814 cv
236.008 203.868 235.795 203.914 235.581 203.96 cv
235.264 204.029 234.946 204.091 234.629 204.152 cv
232.842 192.693 li
233.192 192.632 233.541 192.563 233.891 192.478 cv
234.137 192.425 234.389 192.371 234.636 192.309 cv
234.836 192.263 235.031 192.21 235.225 192.164 cv
235.354 192.133 235.477 192.094 235.607 192.056 cv
235.859 191.995 236.105 191.925 236.351 191.849 cv
236.63 191.772 236.908 191.687 237.187 191.595 cv
237.459 191.511 237.731 191.419 238.003 191.326 cv
238.242 191.25 238.482 191.165 238.721 191.065 cv
239.492 190.789 240.256 190.482 241.007 190.151 cv
244.309 201.142 li
cp
.878431 .878431 .878431 rgb
f
246.55 208.591 mo
246.55 208.591 242.373 211.249 236.028 213.092 cv
234.629 204.152 li
234.946 204.098 235.264 204.037 235.581 203.96 cv
235.795 203.914 236.008 203.868 236.222 203.814 cv
236.578 203.73 236.934 203.645 237.284 203.553 cv
237.549 203.492 237.815 203.423 238.074 203.346 cv
238.326 203.277 238.579 203.208 238.831 203.131 cv
239.136 203.046 239.447 202.946 239.751 202.854 cv
240.081 202.747 240.418 202.639 240.742 202.524 cv
240.988 202.447 241.227 202.363 241.467 202.271 cv
241.668 202.201 241.868 202.125 242.069 202.048 cv
242.445 201.91 242.82 201.764 243.196 201.61 cv
243.571 201.457 243.94 201.303 244.309 201.142 cv
246.55 208.591 li
cp
.901961 .447059 .188235 rgb
f
232 160.153 mo
232 160.161 li
231.981 160.959 229.151 161.597 225.667 161.597 cv
222.184 161.597 219.354 160.959 219.335 160.161 cv
219.335 160.153 li
219.399 159.953 li
219.406 159.938 li
219.872 159.247 222.501 158.717 225.667 158.717 cv
228.834 158.717 231.463 159.247 231.929 159.938 cv
231.935 159.953 li
232 160.153 li
cp
.670588 .227451 .0509804 rgb
f
282.889 246.037 mo
282.889 251.733 li
276.712 251.733 li
276.712 246.037 li
282.889 246.037 li
cp
.0980392 .192157 .258824 rgb
f
282.889 256.014 mo
282.889 288.645 li
276.712 288.645 li
276.712 256.014 li
282.889 256.014 li
cp
f
288.103 302.022 mo
281.92 302.022 li
279.048 302.022 276.712 299.686 276.712 296.809 cv
276.712 292.925 li
282.889 292.925 li
282.889 296.809 li
282.889 299.686 285.226 302.022 288.103 302.022 cv
cp
f
298.079 246.037 mo
298.079 296.809 li
298.079 299.686 295.743 302.022 292.871 302.022 cv
288.103 302.022 li
285.226 302.022 282.889 299.686 282.889 296.809 cv
282.889 246.037 li
298.079 246.037 li
cp
.145098 .282353 .384314 rgb
f
282.889 232.363 mo
282.889 246.567 li
276.712 246.567 li
276.712 231.467 li
276.712 228.596 279.048 226.259 281.92 226.259 cv
282.068 226.259 li
282.889 232.363 li
cp
.780392 .133333 .129412 rgb
f
298.079 231.467 mo
298.079 246.567 li
282.889 246.567 li
282.889 232.363 li
283.642 237.958 li
290.662 237.958 li
292.235 226.259 li
292.871 226.259 li
295.743 226.259 298.079 228.596 298.079 231.467 cv
cp
1 .168627 .164706 rgb
f
282.889 251.733 mo
282.889 256.014 li
276.712 256.014 li
276.712 251.733 li
282.889 251.733 li
cp
.627451 .678431 .658824 rgb
f
298.079 251.733 mo
298.079 256.014 li
282.889 256.014 li
282.889 251.733 li
298.079 251.733 li
cp
.729412 .788235 .764706 rgb
f
282.889 288.645 mo
282.889 292.925 li
276.712 292.925 li
276.712 288.645 li
282.889 288.645 li
cp
.627451 .678431 .658824 rgb
f
298.079 288.645 mo
298.079 292.925 li
282.889 292.925 li
282.889 288.645 li
298.079 288.645 li
cp
.729412 .788235 .764706 rgb
f
288.103 226.259 mo
282.068 226.259 li
282.889 232.363 li
283.642 237.958 li
290.662 237.958 li
292.235 226.259 li
288.103 226.259 li
cp
.6 .101961 .0980392 rgb
f
289.403 231.732 mo
289.403 232.976 288.395 233.984 287.152 233.984 cv
285.908 233.984 284.9 232.976 284.9 231.732 cv
284.9 230.489 285.908 229.481 287.152 229.481 cv
288.395 229.481 289.403 230.489 289.403 231.732 cv
cp
.419608 .0705882 .0666667 rgb
f
288.589 231.732 mo
288.589 232.526 287.945 233.17 287.152 233.17 cv
286.358 233.17 285.714 232.526 285.714 231.732 cv
285.714 230.939 286.358 230.295 287.152 230.295 cv
287.945 230.295 288.589 230.939 288.589 231.732 cv
cp
.25098 .0431373 .0392157 rgb
f
378.759 287.69 mo
371.561 286.733 364.298 286.733 357.1 287.69 cv
357.068 287.343 357.036 286.996 357.005 286.649 cv
364.266 285.684 371.593 285.684 378.854 286.649 cv
378.823 286.996 378.791 287.343 378.759 287.69 cv
cp
.952941 .784314 .298039 rgb
f
330.488 297.177 mo
327.14 296.446 li
327.14 290.926 li
330.488 290.115 li
330.488 297.177 li
cp
f
405.371 297.177 mo
408.719 296.446 li
408.719 290.926 li
405.371 290.115 li
405.371 297.177 li
cp
f
373.544 293.9 mo
370.415 290.889 365.444 290.889 362.315 293.9 cv
361.965 293.541 361.614 293.181 361.264 292.822 cv
364.978 289.246 370.881 289.246 374.596 292.822 cv
374.245 293.181 373.894 293.541 373.544 293.9 cv
cp
f
355.835 285.179 mo
354.559 291.995 349.633 310.15 331.421 310.114 cv
331.182 309.804 330.977 309.53 330.815 309.304 cv
329.476 307.507 325.268 296.357 331.259 289.133 cv
337.25 281.909 354.517 284.82 354.517 284.82 cv
354.975 284.933 355.419 285.052 355.835 285.179 cv
cp
.0980392 .192157 .258824 rgb
f
363.369 295.258 mo
363.115 297.006 359.972 308.634 348.815 313.744 cv
338.8 318.332 333.564 312.856 331.421 310.114 cv
349.633 310.15 354.559 291.995 355.835 285.179 cv
365.652 288.09 363.573 293.848 363.369 295.258 cv
cp
.0509804 .137255 .192157 rgb
f
380.024 285.179 mo
381.3 291.995 386.226 310.15 404.438 310.114 cv
404.678 309.804 404.882 309.53 405.044 309.304 cv
406.383 307.507 410.591 296.357 404.6 289.133 cv
398.609 281.909 381.342 284.82 381.342 284.82 cv
380.884 284.933 380.44 285.052 380.024 285.179 cv
cp
.0980392 .192157 .258824 rgb
f
372.49 295.258 mo
372.744 297.006 375.887 308.634 387.044 313.744 cv
397.059 318.332 402.295 312.856 404.438 310.114 cv
386.226 310.15 381.3 291.995 380.024 285.179 cv
370.207 288.09 372.286 293.848 372.49 295.258 cv
cp
.0509804 .137255 .192157 rgb
f
370.143 158.331 mo
346.051 158.331 li
358.1 136.749 li
346.457 115.896 li
369.737 115.896 li
381.481 94.8605 li
393.224 115.896 li
417.316 115.896 li
405.267 137.478 li
416.91 158.331 li
393.629 158.331 li
381.886 179.367 li
370.143 158.331 li
cp
423.352 112.328 mo
395.24 112.328 li
381.463 87.6429 li
367.686 112.328 li
340.456 112.328 li
354.068 136.72 li
340.015 161.899 li
368.127 161.899 li
381.904 186.584 li
395.68 161.899 li
422.911 161.899 li
409.299 137.507 li
423.352 112.328 li
cp
.862745 .654902 .34902 rgb
f
405.267 137.478 mo
416.91 158.331 li
393.629 158.331 li
381.886 179.367 li
370.143 158.331 li
346.051 158.331 li
358.1 136.749 li
346.457 115.896 li
369.737 115.896 li
381.481 94.8605 li
393.224 115.896 li
417.316 115.896 li
405.267 137.478 li
cp
.952941 .784314 .298039 rgb
f
405.267 137.478 mo
416.91 158.331 li
393.629 158.331 li
381.886 179.367 li
370.143 158.331 li
346.051 158.331 li
358.1 136.749 li
346.457 115.896 li
369.737 115.896 li
381.481 94.8605 li
393.224 115.896 li
417.316 115.896 li
405.267 137.478 li
cp
f
381.683 162.681 mo
367.565 162.681 356.116 151.231 356.116 137.114 cv
356.116 122.996 367.565 111.547 381.683 111.547 cv
395.806 111.547 407.25 122.996 407.25 137.114 cv
407.25 151.231 395.806 162.681 381.683 162.681 cv
cp
381.683 109.93 mo
366.671 109.93 354.499 122.103 354.499 137.114 cv
354.499 152.125 366.671 164.297 381.683 164.297 cv
396.694 164.297 408.866 152.125 408.866 137.114 cv
408.866 122.103 396.694 109.93 381.683 109.93 cv
cp
.839216 .494118 .290196 rgb
f
407.25 137.114 mo
407.25 151.231 395.806 162.681 381.683 162.681 cv
367.565 162.681 356.116 151.231 356.116 137.114 cv
356.116 122.996 367.565 111.547 381.683 111.547 cv
395.806 111.547 407.25 122.996 407.25 137.114 cv
cp
.862745 .654902 .34902 rgb
f
407.25 137.114 mo
407.25 151.231 395.806 162.681 381.683 162.681 cv
367.565 162.681 356.116 151.231 356.116 137.114 cv
356.116 122.996 367.565 111.547 381.683 111.547 cv
395.806 111.547 407.25 122.996 407.25 137.114 cv
cp
f
358.858 139.924 mo
359.765 138.651 li
360.319 139.228 361.179 139.712 362.263 139.712 cv
363.182 139.712 363.63 139.287 363.63 138.84 cv
363.63 137.449 359.106 138.404 359.106 135.446 cv
359.106 134.139 360.237 133.055 362.086 133.055 cv
363.335 133.055 364.372 133.432 365.149 134.151 cv
364.219 135.376 li
363.582 134.787 362.734 134.516 361.933 134.516 cv
361.214 134.516 360.814 134.834 360.814 135.305 cv
360.814 136.554 365.326 135.717 365.326 138.651 cv
365.326 140.089 364.301 141.172 362.18 141.172 cv
360.672 141.172 359.588 140.666 358.858 139.924 cv
cp
.788235 .396078 .305882 rgb
f
371.838 141.031 mo
371.838 137.732 li
368.127 137.732 li
368.127 141.031 li
366.454 141.031 li
366.454 133.172 li
368.127 133.172 li
368.127 136.26 li
371.838 136.26 li
371.838 133.172 li
373.523 133.172 li
373.523 141.031 li
371.838 141.031 li
cp
f
375.063 141.031 mo
375.063 133.172 li
380.624 133.172 li
380.624 134.646 li
376.736 134.646 li
376.736 136.307 li
380.542 136.307 li
380.542 137.779 li
376.736 137.779 li
376.736 139.559 li
380.624 139.559 li
380.624 141.031 li
375.063 141.031 li
cp
f
386.536 135.705 mo
386.536 135.046 386.029 134.646 385.358 134.646 cv
383.602 134.646 li
383.602 136.766 li
385.358 136.766 li
386.029 136.766 386.536 136.366 386.536 135.705 cv
cp
386.371 141.031 mo
384.828 138.239 li
383.602 138.239 li
383.602 141.031 li
381.93 141.031 li
381.93 133.172 li
385.605 133.172 li
387.243 133.172 388.245 134.245 388.245 135.705 cv
388.245 137.096 387.372 137.838 386.524 138.039 cv
388.291 141.031 li
386.371 141.031 li
cp
f
389.502 141.031 mo
389.502 133.172 li
391.175 133.172 li
391.175 141.031 li
389.502 141.031 li
cp
f
392.728 141.031 mo
392.728 133.172 li
398.289 133.172 li
398.289 134.646 li
394.402 134.646 li
394.402 136.307 li
398.207 136.307 li
398.207 137.779 li
394.402 137.779 li
394.402 141.031 li
392.728 141.031 li
cp
f
399.453 141.031 mo
399.453 133.172 li
405.014 133.172 li
405.014 134.646 li
401.126 134.646 li
401.126 136.307 li
404.932 136.307 li
404.932 137.779 li
401.126 137.779 li
401.126 141.031 li
399.453 141.031 li
cp
f
371.58 121.657 mo
371.03 120.317 371.501 119.056 372.807 118.647 cv
373.62 118.395 374.235 118.641 374.671 119.047 cv
374.516 119.165 374.363 119.285 374.212 119.406 cv
373.893 119.113 373.453 118.97 372.956 119.125 cv
372.077 119.4 371.788 120.35 372.193 121.423 cv
372.597 122.493 373.357 123.046 374.104 122.813 cv
374.5 122.69 374.767 122.418 374.888 122.173 cv
374.792 121.82 374.695 121.466 374.599 121.112 cv
374.199 121.221 373.802 121.339 373.406 121.467 cv
373.356 121.31 373.305 121.154 373.255 120.997 cv
373.85 120.805 374.45 120.634 375.054 120.484 cv
375.2 121.067 375.345 121.651 375.49 122.235 cv
375.24 122.74 374.836 123.117 374.255 123.298 cv
373.19 123.63 372.13 123.004 371.58 121.657 cv
cp
f
378.298 118.985 mo
378.236 118.453 377.848 118.112 377.27 118.2 cv
376.951 118.249 376.632 118.304 376.314 118.363 cv
376.426 118.964 376.539 119.564 376.651 120.165 cv
376.949 120.109 377.248 120.058 377.548 120.012 cv
378.084 119.93 378.36 119.517 378.298 118.985 cv
cp
378.687 122.253 mo
378.306 121.668 377.902 121.09 377.477 120.523 cv
377.231 120.562 376.986 120.604 376.742 120.65 cv
376.857 121.266 376.973 121.883 377.088 122.5 cv
376.898 122.535 376.709 122.573 376.52 122.613 cv
376.196 121.079 375.873 119.546 375.549 118.012 cv
376.121 117.891 376.695 117.788 377.271 117.701 cv
378.185 117.564 378.886 118.049 378.962 118.904 cv
379.039 119.74 378.558 120.197 378.064 120.351 cv
378.512 120.951 378.935 121.563 379.332 122.183 cv
379.117 122.204 378.902 122.227 378.687 122.253 cv
cp
f
381.455 117.989 mo
381.181 118.833 380.931 119.681 380.706 120.531 cv
381.223 120.511 381.741 120.507 382.259 120.517 cv
382.015 119.671 381.747 118.828 381.455 117.989 cv
cp
382.66 122.087 mo
382.57 121.728 382.475 121.37 382.376 121.013 cv
381.783 120.999 381.19 121.004 380.597 121.03 cv
380.505 121.389 380.417 121.748 380.334 122.108 cv
380.127 122.119 379.921 122.133 379.715 122.15 cv
380.069 120.549 380.513 118.955 381.047 117.375 cv
381.318 117.369 381.589 117.367 381.859 117.368 cv
382.422 118.938 382.895 120.523 383.279 122.117 cv
383.072 122.104 382.866 122.094 382.66 122.087 cv
cp
f
386.38 122.502 mo
385.944 121.232 385.413 119.971 384.789 118.73 cv
384.664 119.891 384.54 121.052 384.415 122.213 cv
384.224 122.193 384.033 122.174 383.841 122.158 cv
383.972 120.596 384.104 119.035 384.235 117.473 cv
384.463 117.492 384.69 117.514 384.917 117.538 cv
385.566 118.758 386.125 120 386.592 121.251 cv
386.802 120.126 387.012 119.001 387.222 117.876 cv
387.447 117.918 387.672 117.963 387.896 118.01 cv
387.573 119.544 387.249 121.078 386.926 122.611 cv
386.744 122.573 386.562 122.537 386.38 122.502 cv
cp
f
391.26 121.423 mo
391.635 120.431 391.419 119.487 390.404 119.169 cv
390.138 119.088 389.872 119.01 389.605 118.935 cv
389.274 120.126 388.943 121.317 388.612 122.508 cv
388.846 122.573 389.078 122.641 389.31 122.712 cv
390.174 122.981 390.887 122.416 391.26 121.423 cv
cp
387.917 122.841 mo
388.302 121.322 388.686 119.802 389.071 118.283 cv
389.566 118.408 390.059 118.547 390.549 118.698 cv
391.994 119.15 392.382 120.418 391.874 121.657 cv
391.36 122.915 390.35 123.561 389.163 123.191 cv
388.75 123.063 388.334 122.947 387.917 122.841 cv
cp
f
367.869 151.87 mo
368.4 150.561 369.453 149.892 370.537 150.256 cv
371.231 150.488 371.51 151.015 371.632 151.559 cv
371.454 151.583 371.276 151.606 371.097 151.628 cv
371.015 151.204 370.783 150.866 370.378 150.731 cv
369.629 150.479 368.865 151.06 368.466 152.1 cv
368.068 153.139 368.307 154.11 369.151 154.393 cv
369.624 154.552 370.057 154.376 370.365 154.05 cv
370.515 154.172 370.666 154.293 370.818 154.413 cv
370.388 154.83 369.802 155.138 368.991 154.868 cv
367.733 154.444 367.343 153.167 367.869 151.87 cv
cp
f
374.983 153.904 mo
375.172 152.834 374.89 151.93 374.102 151.759 cv
373.322 151.587 372.687 152.292 372.413 153.343 cv
372.142 154.379 372.4 155.339 373.278 155.532 cv
374.164 155.724 374.796 154.958 374.983 153.904 cv
cp
371.799 153.181 mo
372.168 151.869 373.079 151.02 374.209 151.27 cv
375.34 151.514 375.816 152.666 375.605 154.012 cv
375.394 155.353 374.484 156.305 373.171 156.021 cv
371.859 155.731 371.431 154.487 371.799 153.181 cv
cp
f
376.382 154.965 mo
376.53 153.916 376.677 152.866 376.824 151.817 cv
377.015 151.843 377.205 151.868 377.396 151.892 cv
377.266 152.946 377.135 154.001 377.005 155.055 cv
376.913 155.773 377.26 156.197 377.946 156.264 cv
378.64 156.33 379.06 155.979 379.107 155.256 cv
379.179 154.197 379.252 153.137 379.324 152.077 cv
379.513 152.09 379.702 152.101 379.891 152.111 cv
379.836 153.169 379.781 154.228 379.726 155.286 cv
379.678 156.319 379.003 156.866 377.898 156.762 cv
376.802 156.655 376.233 155.989 376.382 154.965 cv
cp
f
383.691 156.812 mo
382.887 155.683 382.148 154.529 381.474 153.356 cv
381.466 154.524 381.458 155.692 381.45 156.86 cv
381.232 156.858 381.015 156.855 380.798 156.85 cv
380.834 155.283 380.871 153.716 380.907 152.149 cv
381.099 152.154 381.291 152.157 381.482 152.158 cv
382.127 153.307 382.834 154.438 383.605 155.546 cv
383.549 154.403 383.494 153.26 383.438 152.117 cv
383.63 152.108 383.822 152.097 384.013 152.085 cv
384.115 153.649 384.216 155.213 384.318 156.777 cv
384.109 156.79 383.9 156.802 383.691 156.812 cv
cp
f
386.376 156.59 mo
386.213 155.196 386.05 153.803 385.887 152.41 cv
385.505 152.455 385.122 152.493 384.739 152.525 cv
384.725 152.361 384.711 152.197 384.697 152.034 cv
385.644 151.954 386.589 151.835 387.528 151.679 cv
387.555 151.841 387.582 152.003 387.61 152.166 cv
387.227 152.229 386.844 152.287 386.459 152.338 cv
386.645 153.729 386.831 155.119 387.016 156.51 cv
386.803 156.538 386.59 156.565 386.376 156.59 cv
cp
f
390.705 152.454 mo
390.572 151.934 390.187 151.641 389.696 151.754 cv
389.421 151.817 389.147 151.876 388.871 151.932 cv
388.993 152.531 389.115 153.129 389.237 153.728 cv
389.527 153.669 389.815 153.606 390.104 153.541 cv
390.625 153.421 390.838 152.972 390.705 152.454 cv
cp
391.503 155.648 mo
391.009 155.125 390.531 154.594 390.069 154.055 cv
389.825 154.109 389.581 154.162 389.336 154.212 cv
389.461 154.826 389.586 155.441 389.711 156.056 cv
389.497 156.099 389.283 156.141 389.069 156.181 cv
388.781 154.64 388.493 153.1 388.205 151.559 cv
388.688 151.469 389.17 151.369 389.649 151.258 cv
390.399 151.085 391.072 151.461 391.302 152.29 cv
391.524 153.099 391.126 153.631 390.643 153.834 cv
391.151 154.386 391.676 154.928 392.218 155.46 cv
391.98 155.525 391.741 155.587 391.503 155.648 cv
cp
f
394.232 154.855 mo
394.024 154.226 393.817 153.597 393.61 152.967 cv
392.816 152.277 392.055 151.562 391.329 150.827 cv
391.536 150.769 391.743 150.708 391.949 150.646 cv
392.523 151.228 393.118 151.798 393.734 152.354 cv
393.885 151.538 394.013 150.724 394.117 149.912 cv
394.318 149.837 394.518 149.76 394.717 149.681 cv
394.583 150.707 394.41 151.737 394.198 152.769 cv
394.415 153.395 394.632 154.02 394.85 154.646 cv
394.644 154.718 394.438 154.787 394.232 154.855 cv
cp
f
385.9 89.2203 mo
385.9 91.4654 384.078 93.2875 381.833 93.2875 cv
380.123 93.2875 378.659 92.2354 378.066 90.7367 cv
378.771 91.3185 379.67 91.6712 380.658 91.6712 cv
382.903 91.6712 384.725 89.8492 384.725 87.604 cv
384.725 87.0691 384.619 86.5519 384.425 86.0876 cv
385.324 86.834 385.9 87.9625 385.9 89.2203 cv
cp
.839216 .494118 .290196 rgb
f
384.725 87.604 mo
384.725 89.8492 382.903 91.6712 380.658 91.6712 cv
379.67 91.6712 378.771 91.3185 378.066 90.7367 cv
377.872 90.2723 377.766 89.7551 377.766 89.2203 cv
377.766 86.9751 379.588 85.153 381.833 85.153 cv
382.821 85.153 383.72 85.4998 384.425 86.0876 cv
384.619 86.5519 384.725 87.0691 384.725 87.604 cv
cp
.862745 .654902 .34902 rgb
f
380.896 87.7039 mo
380.896 88.2415 380.461 88.6773 379.923 88.6773 cv
379.385 88.6773 378.95 88.2415 378.95 87.7039 cv
378.95 87.1662 379.385 86.7305 379.923 86.7305 cv
380.461 86.7305 380.896 87.1662 380.896 87.7039 cv
cp
.952941 .784314 .298039 rgb
f
427.419 111.887 mo
427.419 114.133 425.597 115.955 423.352 115.955 cv
421.641 115.955 420.178 114.903 419.584 113.404 cv
420.29 113.986 421.189 114.338 422.176 114.338 cv
424.421 114.338 426.243 112.516 426.243 110.271 cv
426.243 109.736 426.138 109.219 425.944 108.755 cv
426.843 109.501 427.419 110.63 427.419 111.887 cv
cp
.839216 .494118 .290196 rgb
f
426.243 110.271 mo
426.243 112.516 424.421 114.338 422.176 114.338 cv
421.189 114.338 420.29 113.986 419.584 113.404 cv
419.39 112.94 419.285 112.422 419.285 111.887 cv
419.285 109.642 421.106 107.82 423.352 107.82 cv
424.339 107.82 425.238 108.167 425.944 108.755 cv
426.138 109.219 426.243 109.736 426.243 110.271 cv
cp
.862745 .654902 .34902 rgb
f
422.415 110.371 mo
422.415 110.909 421.979 111.345 421.441 111.345 cv
420.904 111.345 420.468 110.909 420.468 110.371 cv
420.468 109.833 420.904 109.398 421.441 109.398 cv
421.979 109.398 422.415 109.833 422.415 110.371 cv
cp
.952941 .784314 .298039 rgb
f
426.482 161.846 mo
426.482 164.091 424.66 165.913 422.415 165.913 cv
420.705 165.913 419.241 164.861 418.648 163.362 cv
419.353 163.944 420.252 164.297 421.24 164.297 cv
423.485 164.297 425.307 162.475 425.307 160.23 cv
425.307 159.695 425.201 159.178 425.007 158.713 cv
425.906 159.46 426.482 160.588 426.482 161.846 cv
cp
.839216 .494118 .290196 rgb
f
425.307 160.23 mo
425.307 162.475 423.485 164.297 421.24 164.297 cv
420.252 164.297 419.353 163.944 418.648 163.362 cv
418.454 162.898 418.348 162.381 418.348 161.846 cv
418.348 159.601 420.17 157.779 422.415 157.779 cv
423.402 157.779 424.302 158.126 425.007 158.713 cv
425.201 159.178 425.307 159.695 425.307 160.23 cv
cp
.862745 .654902 .34902 rgb
f
421.478 160.33 mo
421.478 160.867 421.042 161.303 420.505 161.303 cv
419.967 161.303 419.531 160.867 419.531 160.33 cv
419.531 159.792 419.967 159.356 420.505 159.356 cv
421.042 159.356 421.478 159.792 421.478 160.33 cv
cp
.952941 .784314 .298039 rgb
f
344.082 162.313 mo
344.082 164.558 342.26 166.381 340.015 166.381 cv
338.305 166.381 336.841 165.328 336.247 163.83 cv
336.953 164.412 337.852 164.764 338.839 164.764 cv
341.085 164.764 342.907 162.942 342.907 160.697 cv
342.907 160.162 342.801 159.645 342.607 159.181 cv
343.506 159.927 344.082 161.056 344.082 162.313 cv
cp
.839216 .494118 .290196 rgb
f
342.907 160.697 mo
342.907 162.942 341.085 164.764 338.839 164.764 cv
337.852 164.764 336.953 164.412 336.247 163.83 cv
336.053 163.365 335.948 162.848 335.948 162.313 cv
335.948 160.068 337.77 158.246 340.015 158.246 cv
341.002 158.246 341.902 158.593 342.607 159.181 cv
342.801 159.645 342.907 160.162 342.907 160.697 cv
cp
.862745 .654902 .34902 rgb
f
339.078 160.797 mo
339.078 161.335 338.642 161.77 338.105 161.77 cv
337.567 161.77 337.131 161.335 337.131 160.797 cv
337.131 160.259 337.567 159.824 338.105 159.824 cv
338.642 159.824 339.078 160.259 339.078 160.797 cv
cp
.952941 .784314 .298039 rgb
f
344.376 112.355 mo
344.376 114.6 342.554 116.422 340.309 116.422 cv
338.598 116.422 337.135 115.37 336.541 113.871 cv
337.247 114.453 338.146 114.806 339.133 114.806 cv
341.378 114.806 343.201 112.984 343.201 110.738 cv
343.201 110.204 343.095 109.686 342.901 109.222 cv
343.8 109.969 344.376 111.097 344.376 112.355 cv
cp
.839216 .494118 .290196 rgb
f
343.201 110.738 mo
343.201 112.984 341.378 114.806 339.133 114.806 cv
338.146 114.806 337.247 114.453 336.541 113.871 cv
336.347 113.407 336.242 112.89 336.242 112.355 cv
336.242 110.11 338.064 108.288 340.309 108.288 cv
341.296 108.288 342.195 108.634 342.901 109.222 cv
343.095 109.686 343.201 110.204 343.201 110.738 cv
cp
.862745 .654902 .34902 rgb
f
339.372 110.838 mo
339.372 111.376 338.936 111.812 338.399 111.812 cv
337.861 111.812 337.425 111.376 337.425 110.838 cv
337.425 110.301 337.861 109.865 338.399 109.865 cv
338.936 109.865 339.372 110.301 339.372 110.838 cv
cp
.952941 .784314 .298039 rgb
f
385.751 185.068 mo
385.751 187.313 383.928 189.135 381.683 189.135 cv
379.973 189.135 378.509 188.083 377.916 186.584 cv
378.621 187.166 379.52 187.519 380.508 187.519 cv
382.753 187.519 384.575 185.697 384.575 183.452 cv
384.575 182.917 384.469 182.4 384.275 181.935 cv
385.175 182.682 385.751 183.81 385.751 185.068 cv
cp
.839216 .494118 .290196 rgb
f
384.575 183.452 mo
384.575 185.697 382.753 187.519 380.508 187.519 cv
379.52 187.519 378.621 187.166 377.916 186.584 cv
377.722 186.12 377.616 185.603 377.616 185.068 cv
377.616 182.823 379.438 181.001 381.683 181.001 cv
382.671 181.001 383.57 181.348 384.275 181.935 cv
384.469 182.4 384.575 182.917 384.575 183.452 cv
cp
.862745 .654902 .34902 rgb
f
380.747 183.552 mo
380.747 184.089 380.311 184.525 379.773 184.525 cv
379.235 184.525 378.8 184.089 378.8 183.552 cv
378.8 183.014 379.235 182.578 379.773 182.578 cv
380.311 182.578 380.747 183.014 380.747 183.552 cv
cp
.952941 .784314 .298039 rgb
f
382.469 127.955 mo
381.55 128.873 li
380.632 127.955 li
381.55 127.036 li
382.469 127.955 li
cp
.788235 .396078 .305882 rgb
f
380.578 127.955 mo
379.66 128.873 li
378.742 127.955 li
379.66 127.036 li
380.578 127.955 li
cp
f
382.415 127.955 mo
381.497 128.873 li
380.578 127.955 li
381.497 127.036 li
382.415 127.955 li
cp
f
384.252 127.955 mo
383.333 128.873 li
382.415 127.955 li
383.333 127.036 li
384.252 127.955 li
cp
f
379.323 128.139 mo
376.302 128.467 li
376.302 127.442 li
379.323 127.77 li
379.323 128.139 li
cp
f
383.67 127.77 mo
386.692 127.442 li
386.692 128.467 li
383.67 128.139 li
383.67 127.77 li
cp
f
382.469 146.273 mo
381.55 147.191 li
380.632 146.273 li
381.55 145.354 li
382.469 146.273 li
cp
f
380.578 146.273 mo
379.66 147.191 li
378.742 146.273 li
379.66 145.354 li
380.578 146.273 li
cp
f
382.415 146.273 mo
381.497 147.191 li
380.578 146.273 li
381.497 145.354 li
382.415 146.273 li
cp
f
384.252 146.273 mo
383.333 147.191 li
382.415 146.273 li
383.333 145.354 li
384.252 146.273 li
cp
f
379.323 146.457 mo
376.302 146.785 li
376.302 145.76 li
379.323 146.088 li
379.323 146.457 li
cp
f
383.67 146.088 mo
386.692 145.76 li
386.692 146.785 li
383.67 146.457 li
383.67 146.088 li
cp
f
137.023 50.1642 mo
136.463 51.3408 135.678 51.8451 134.053 52.0132 cv
132.428 52.1812 126.797 52.2093 126.209 49.772 cv
125.781 47.9979 127.47 45.962 127.75 45.962 cv
137.695 45.962 li
137.695 45.962 137.583 48.9876 137.023 50.1642 cv
cp
126.769 45.5698 mo
124.752 45.8499 123.688 49.4358 125.313 51.4529 cv
126.938 53.4699 134.109 53.2458 135.846 53.1898 cv
137.583 53.1337 138.368 50.4257 138.368 50.4257 cv
142.327 49.7534 li
145.315 45.0095 li
145.315 45.0095 128.786 45.2896 126.769 45.5698 cv
cp
.0509804 .137255 .192157 rgb
f
130.075 44.6173 mo
129.739 45.0095 126.713 49.0996 129.683 51.4529 cv
130.327 51.1728 li
130.327 51.1728 128.03 48.1191 131.56 45.5418 cv
130.075 44.6173 li
cp
f
115.433 39.668 mo
115.732 38.7716 118.869 33.3927 118.869 33.3927 cv
128.581 30.5538 li
173.106 30.5538 li
173.106 44.2811 li
173.106 45.3642 172.228 46.2421 171.145 46.2421 cv
121.26 46.2421 li
115.433 39.668 li
.121569 .235294 .321569 rgb
f
115.438 39.6673 mo
121.263 46.239 li
171.145 46.2376 li
172.223 46.2376 173.101 45.36 173.101 44.281 cv
173.101 30.5581 li
128.581 30.5581 li
118.87 33.3973 li
118.842 33.4489 115.737 38.7739 115.438 39.6673 cv
171.145 46.2463 mo
121.26 46.2463 li
115.428 39.6691 li
115.723 38.7823 118.834 33.4445 118.865 33.3906 cv
128.581 30.5493 li
173.11 30.5493 li
173.11 44.281 li
173.11 45.3648 172.228 46.2463 171.145 46.2463 cv
f
290.693 36.381 mo
171.911 36.381 li
171.911 30.5538 li
290.693 30.5538 li
290.693 36.381 li
f
287.519 44.2998 mo
171.911 44.2998 li
171.911 36.381 li
287.519 36.381 li
287.704 36.381 287.854 36.5309 287.854 36.7159 cv
287.854 43.9648 li
287.854 44.1499 287.704 44.2998 287.519 44.2998 cv
f
171.915 44.2954 mo
284.866 44.2954 li
286.511 44.2954 287.849 42.9569 287.849 41.3114 cv
287.849 39.3692 li
287.849 37.7238 286.511 36.3852 284.866 36.3852 cv
171.915 36.3852 li
171.915 44.2954 li
284.866 44.3042 mo
171.906 44.3042 li
171.906 36.3765 li
284.866 36.3765 li
286.516 36.3765 287.858 37.719 287.858 39.3692 cv
287.858 41.3114 li
287.858 42.9616 286.516 44.3042 284.866 44.3042 cv
f
120.821 43.8695 mo
102.228 45.8148 104.424 51.9288 100.345 54.4926 cv
96.0064 57.2179 90.0357 50.7902 90.0357 50.7902 cv
90.0357 50.7902 48.6188 56.0705 35.0821 57.711 cv
35.9068 47.8678 37.9598 41.5476 38.9639 38.9389 cv
39.2775 38.114 40.0665 37.5583 40.954 37.5315 cv
94.3658 35.7833 li
94.3658 35.7833 97.6558 39.5215 104.227 39.2168 cv
110.798 38.921 118.866 33.3897 118.866 33.3897 cv
120.821 43.8695 li
.74902 .32549 .156863 rgb
f
121.26 46.2451 mo
106.916 46.0927 103.035 57.971 100.345 58.6433 cv
97.0372 59.4681 87.4899 55.5057 85.8493 54.7616 cv
84.4418 54.1162 48.1079 64.9455 37.5832 68.1011 cv
36.1579 68.5314 34.7145 67.4467 34.7235 65.9585 cv
34.7325 62.9823 34.8669 60.2301 35.0821 57.711 cv
48.6188 56.0705 90.0357 50.7902 90.0357 50.7902 cv
90.0357 50.7902 96.0064 57.2179 100.345 54.4927 cv
104.424 51.9288 102.228 45.8148 120.821 43.8695 cv
121.26 46.2451 li
cp
.670588 .227451 .0509804 rgb
f
120.788 35.7932 mo
120.116 35.7931 119.893 34.6964 120.642 34.4626 cv
123.968 33.4249 127.3 31.8706 130.794 31.7492 cv
132.002 31.7072 133.213 31.6932 134.425 31.6932 cv
136.849 31.6932 139.278 31.7492 141.695 31.7492 cv
151.767 31.7492 161.838 31.7492 171.911 31.7492 cv
171.911 33.0939 li
160.959 33.0939 150.008 33.0939 139.057 33.0939 cv
137.161 33.0939 135.23 33.0081 133.313 33.0081 cv
132.354 33.0081 131.398 33.0295 130.452 33.0939 cv
127.396 33.3017 124.128 34.7832 120.999 35.7593 cv
120.925 35.7825 120.854 35.7932 120.788 35.7932 cv
.52549 .584314 .631373 rgb
f
289.236 33.0939 mo
281.896 33.0939 274.556 33.0939 267.217 33.0939 cv
236.762 33.0939 206.307 33.0939 175.852 33.0939 cv
174.539 33.0939 173.224 33.0939 171.911 33.0939 cv
171.911 31.7492 li
191.176 31.7492 210.442 31.7492 229.707 31.7492 cv
249.55 31.7492 269.393 31.7492 289.236 31.7492 cv
290.103 31.7492 290.101 33.0939 289.236 33.0939 cv
f
169.333 39.2572 mo
151.068 39.2572 li
151.068 35.1109 li
169.333 35.1109 li
169.333 39.2572 li
cp
.0509804 .137255 .192157 rgb
f
279.487 39.0702 mo
275.145 39.0702 270.802 39.0702 266.459 39.0702 cv
235.491 39.0702 204.523 39.0702 173.554 39.0702 cv
172.687 39.0702 172.689 37.7255 173.554 37.7255 cv
177.897 37.7255 182.239 37.7255 186.582 37.7255 cv
217.55 37.7255 248.519 37.7255 279.487 37.7255 cv
280.354 37.7255 280.352 39.0702 279.487 39.0702 cv
.52549 .584314 .631373 rgb
f
201.414 47.5869 mo
249.684 47.5869 li
249.888 47.5869 250.053 47.4219 250.053 47.2184 cv
250.053 36.6741 li
250.053 36.5122 249.922 36.381 249.76 36.381 cv
201.339 36.381 li
201.177 36.381 201.046 36.5122 201.046 36.6741 cv
201.046 47.2184 li
201.046 47.4219 201.211 47.5869 201.414 47.5869 cv
cp
.74902 .32549 .156863 rgb
f
203.661 36.3852 mo
202.222 36.3852 201.05 37.5565 201.05 38.9958 cv
201.05 44.2998 li
201.05 46.1098 202.523 47.5823 204.333 47.5823 cv
246.766 47.5823 li
248.576 47.5823 250.049 46.1098 250.049 44.2998 cv
250.049 38.9958 li
250.049 37.5565 248.878 36.3852 247.438 36.3852 cv
203.661 36.3852 li
cp
246.766 47.5911 mo
204.333 47.5911 li
202.518 47.5911 201.041 46.1146 201.041 44.2998 cv
201.041 38.9958 li
201.041 37.5513 202.216 36.3765 203.661 36.3765 cv
247.438 36.3765 li
248.883 36.3765 250.058 37.5513 250.058 38.9958 cv
250.058 44.2998 li
250.058 46.1146 248.581 47.5911 246.766 47.5911 cv
cp
f
205.827 47.5869 mo
205.005 47.5869 li
205.005 36.381 li
205.827 36.381 li
205.827 47.5869 li
cp
.588235 .254902 .12549 rgb
f
207.676 47.5869 mo
206.854 47.5869 li
206.854 36.381 li
207.676 36.381 li
207.676 47.5869 li
cp
f
207.676 47.5869 mo
206.854 47.5869 li
206.854 36.381 li
207.676 36.381 li
207.676 47.5869 li
cp
f
209.525 47.5869 mo
208.703 47.5869 li
208.703 36.381 li
209.525 36.381 li
209.525 47.5869 li
cp
f
209.525 47.5869 mo
208.703 47.5869 li
208.703 36.381 li
209.525 36.381 li
209.525 47.5869 li
cp
f
211.374 47.5869 mo
210.552 47.5869 li
210.552 36.381 li
211.374 36.381 li
211.374 47.5869 li
cp
f
211.374 47.5869 mo
210.552 47.5869 li
210.552 36.381 li
211.374 36.381 li
211.374 47.5869 li
cp
f
213.223 47.5869 mo
212.401 47.5869 li
212.401 36.381 li
213.223 36.381 li
213.223 47.5869 li
cp
f
213.223 47.5869 mo
212.401 47.5869 li
212.401 36.381 li
213.223 36.381 li
213.223 47.5869 li
cp
f
215.072 47.5869 mo
214.25 47.5869 li
214.25 36.381 li
215.072 36.381 li
215.072 47.5869 li
cp
f
215.072 47.5869 mo
214.25 47.5869 li
214.25 36.381 li
215.072 36.381 li
215.072 47.5869 li
cp
f
216.921 47.5869 mo
216.099 47.5869 li
216.099 36.381 li
216.921 36.381 li
216.921 47.5869 li
cp
f
216.921 47.5869 mo
216.099 47.5869 li
216.099 36.381 li
216.921 36.381 li
216.921 47.5869 li
cp
f
218.77 47.5869 mo
217.948 47.5869 li
217.948 36.381 li
218.77 36.381 li
218.77 47.5869 li
cp
f
218.77 47.5869 mo
217.948 47.5869 li
217.948 36.381 li
218.77 36.381 li
218.77 47.5869 li
cp
f
220.619 47.5869 mo
219.797 47.5869 li
219.797 36.381 li
220.619 36.381 li
220.619 47.5869 li
cp
f
220.619 47.5869 mo
219.797 47.5869 li
219.797 36.381 li
220.619 36.381 li
220.619 47.5869 li
cp
f
222.468 47.5869 mo
221.646 47.5869 li
221.646 36.381 li
222.468 36.381 li
222.468 47.5869 li
cp
f
222.468 47.5869 mo
221.646 47.5869 li
221.646 36.381 li
222.468 36.381 li
222.468 47.5869 li
cp
f
224.317 47.5869 mo
223.495 47.5869 li
223.495 36.381 li
224.317 36.381 li
224.317 47.5869 li
cp
f
224.317 47.5869 mo
223.495 47.5869 li
223.495 36.381 li
224.317 36.381 li
224.317 47.5869 li
cp
f
226.166 47.5869 mo
225.344 47.5869 li
225.344 36.381 li
226.166 36.381 li
226.166 47.5869 li
cp
f
226.166 47.5869 mo
225.344 47.5869 li
225.344 36.381 li
226.166 36.381 li
226.166 47.5869 li
cp
f
228.015 47.5869 mo
227.193 47.5869 li
227.193 36.381 li
228.015 36.381 li
228.015 47.5869 li
cp
f
228.015 47.5869 mo
227.193 47.5869 li
227.193 36.381 li
228.015 36.381 li
228.015 47.5869 li
cp
f
229.864 47.5869 mo
229.042 47.5869 li
229.042 36.381 li
229.864 36.381 li
229.864 47.5869 li
cp
f
229.864 47.5869 mo
229.042 47.5869 li
229.042 36.381 li
229.864 36.381 li
229.864 47.5869 li
cp
f
231.713 47.5869 mo
230.891 47.5869 li
230.891 36.381 li
231.713 36.381 li
231.713 47.5869 li
cp
f
231.713 47.5869 mo
230.891 47.5869 li
230.891 36.381 li
231.713 36.381 li
231.713 47.5869 li
cp
f
233.562 47.5869 mo
232.74 47.5869 li
232.74 36.381 li
233.562 36.381 li
233.562 47.5869 li
cp
f
233.562 47.5869 mo
232.74 47.5869 li
232.74 36.381 li
233.562 36.381 li
233.562 47.5869 li
cp
f
235.411 47.5869 mo
234.589 47.5869 li
234.589 36.381 li
235.411 36.381 li
235.411 47.5869 li
cp
f
235.411 47.5869 mo
234.589 47.5869 li
234.589 36.381 li
235.411 36.381 li
235.411 47.5869 li
cp
f
237.26 47.5869 mo
236.438 47.5869 li
236.438 36.381 li
237.26 36.381 li
237.26 47.5869 li
cp
f
237.26 47.5869 mo
236.438 47.5869 li
236.438 36.381 li
237.26 36.381 li
237.26 47.5869 li
cp
f
239.109 47.5869 mo
238.287 47.5869 li
238.287 36.381 li
239.109 36.381 li
239.109 47.5869 li
cp
f
239.109 47.5869 mo
238.287 47.5869 li
238.287 36.381 li
239.109 36.381 li
239.109 47.5869 li
cp
f
239.109 47.5869 mo
238.287 47.5869 li
238.287 36.381 li
239.109 36.381 li
239.109 47.5869 li
cp
f
240.957 47.5869 mo
240.136 47.5869 li
240.136 36.381 li
240.957 36.381 li
240.957 47.5869 li
cp
f
240.957 47.5869 mo
240.136 47.5869 li
240.136 36.381 li
240.957 36.381 li
240.957 47.5869 li
cp
f
242.806 47.5869 mo
241.985 47.5869 li
241.985 36.381 li
242.806 36.381 li
242.806 47.5869 li
cp
f
242.806 47.5869 mo
241.985 47.5869 li
241.985 36.381 li
242.806 36.381 li
242.806 47.5869 li
cp
f
242.806 47.5869 mo
241.985 47.5869 li
241.985 36.381 li
242.806 36.381 li
242.806 47.5869 li
cp
f
244.655 47.5869 mo
243.834 47.5869 li
243.834 36.381 li
244.655 36.381 li
244.655 47.5869 li
cp
f
244.655 47.5869 mo
243.834 47.5869 li
243.834 36.381 li
244.655 36.381 li
244.655 47.5869 li
cp
f
246.504 47.5869 mo
245.683 47.5869 li
245.683 36.381 li
246.504 36.381 li
246.504 47.5869 li
cp
f
39.5638 46.35 mo
40.4155 41.3814 li
40.6322 40.1134 41.7231 39.1651 43.0094 39.1269 cv
93.4848 37.6179 li
93.4848 40.9797 li
39.5638 46.35 li
.862745 .635294 .545098 rgb
f
320.402 167.39 mo
310.67 175.674 301.386 165.404 287.944 185.944 cv
282.2 177.183 277.227 174.026 272.638 172.641 cv
275.425 172.394 278.012 171.809 279.983 170.685 cv
287.759 166.312 299.23 99.3793 299.23 99.3638 cv
299.23 99.3484 298.629 97.3929 296.566 94.4058 cv
300.985 96.2227 307.175 96.8232 315.228 93.3434 cv
325.375 106.062 li
325.375 106.062 313.981 113.853 319.401 124.631 cv
325.498 136.749 338.293 152.131 320.402 167.39 cv
cp
.788235 .396078 .305882 rgb
f
299.23 99.3638 mo
299.23 99.3793 287.759 166.312 279.983 170.685 cv
278.012 171.809 275.425 172.394 272.638 172.641 cv
266.495 170.793 261.06 172.132 255.486 167.39 cv
237.578 152.131 250.389 136.749 256.471 124.631 cv
261.891 113.853 250.512 106.062 250.512 106.062 cv
260.644 93.3434 li
279.352 101.427 287.944 87.5385 287.944 87.5385 cv
287.944 87.5385 290.73 92.0346 296.566 94.4058 cv
298.629 97.3929 299.23 99.3484 299.23 99.3638 cv
cp
.839216 .494118 .290196 rgb
f
279.044 171.132 mo
279.028 171.132 li
274.64 168.545 270.652 168.021 267.126 167.559 cv
263.616 167.097 260.859 166.743 258.057 164.357 cv
245.108 153.317 250.959 142.846 257.149 131.745 cv
258.18 129.912 259.166 128.126 260.028 126.417 cv
264.416 117.672 260.336 110.019 256.009 105.554 cv
261.937 98.1012 li
265.325 99.2561 268.62 99.8412 271.776 99.8412 cv
275.641 99.8412 278.89 98.9943 281.584 97.7778 cv
284.264 96.5615 286.388 94.9909 287.944 93.5589 cv
290.361 95.7916 294.087 98.3168 299.23 99.3484 cv
299.23 99.3638 li
299.83 100.565 324.159 150.915 279.044 171.132 cv
cp
.952941 .784314 .298039 rgb
f
317.815 164.357 mo
315.028 166.743 312.256 167.097 308.761 167.559 cv
302.956 168.314 295.919 169.238 287.944 179.154 cv
284.833 175.273 281.846 172.779 279.044 171.132 cv
324.159 150.915 299.83 100.565 299.23 99.3638 cv
300.724 99.6718 302.356 99.8412 304.111 99.8412 cv
307.268 99.8412 310.563 99.2561 313.95 98.1012 cv
319.878 105.554 li
315.536 110.019 311.456 117.672 315.859 126.417 cv
316.721 128.126 317.707 129.912 318.739 131.745 cv
324.928 142.846 330.779 153.317 317.815 164.357 cv
cp
.862745 .654902 .34902 rgb
f
269.962 110.591 mo
269.807 109.881 269.122 109.58 268.336 109.766 cv
267.631 109.933 266.928 110.11 266.226 110.295 cv
266.425 111.047 266.624 111.798 266.823 112.55 cv
267.505 112.369 268.189 112.198 268.874 112.035 cv
269.636 111.854 270.113 111.287 269.962 110.591 cv
cp
266.211 117.588 mo
265.407 114.821 264.603 112.054 263.799 109.287 cv
265.269 108.86 266.747 108.473 268.233 108.125 cv
270.315 107.642 271.694 108.688 271.974 110.174 cv
272.252 111.656 271.417 113.107 269.502 113.551 cv
268.745 113.729 267.99 113.917 267.237 114.116 cv
267.499 115.106 267.761 116.096 268.023 117.086 cv
267.417 117.246 266.813 117.413 266.211 117.588 cv
cp
.796078 .439216 .309804 rgb
f
280.611 110.507 mo
280.476 108.895 279.224 107.773 277.463 107.99 cv
275.703 108.21 274.775 109.603 275.038 111.199 cv
275.299 112.787 276.538 113.826 278.162 113.623 cv
279.788 113.422 280.746 112.111 280.611 110.507 cv
cp
273.038 111.542 mo
272.542 108.99 274.319 106.735 277.261 106.369 cv
280.219 106.003 282.486 107.755 282.628 110.352 cv
282.772 112.957 280.968 114.919 278.363 115.243 cv
275.772 115.564 273.536 114.104 273.038 111.542 cv
cp
f
284.222 114.585 mo
284.085 111.706 283.947 108.828 283.81 105.95 cv
284.499 105.917 285.189 105.892 285.878 105.876 cv
285.934 108.217 285.99 110.558 286.046 112.899 cv
287.304 112.869 288.563 112.868 289.821 112.898 cv
289.808 113.438 289.795 113.978 289.783 114.518 cv
287.929 114.474 286.075 114.496 284.222 114.585 cv
cp
f
291.085 114.559 mo
291.202 111.68 291.318 108.801 291.434 105.922 cv
292.123 105.95 292.812 105.986 293.5 106.03 cv
293.315 108.906 293.13 111.781 292.945 114.657 cv
292.325 114.617 291.705 114.585 291.085 114.559 cv
cp
f
294.606 110.451 mo
294.794 107.804 297.203 106.155 300.125 106.569 cv
302.262 106.877 303.307 108.136 303.761 109.315 cv
303.141 109.46 302.526 109.613 301.915 109.773 cv
301.643 109.016 300.879 108.327 299.895 108.187 cv
298.165 107.941 296.783 109.017 296.621 110.64 cv
296.457 112.267 297.501 113.58 299.097 113.807 cv
300.011 113.936 300.89 113.529 301.387 112.891 cv
301.891 113.235 302.389 113.583 302.881 113.936 cv
302.037 114.874 300.771 115.696 298.868 115.423 cv
296.294 115.055 294.417 113.104 294.606 110.451 cv
cp
f
303.616 116.09 mo
304.196 113.267 304.776 110.445 305.356 107.622 cv
307.614 108.086 309.857 108.641 312.08 109.287 cv
311.929 109.806 311.779 110.324 311.628 110.843 cv
310.102 110.4 308.567 110 307.024 109.645 cv
306.888 110.238 306.751 110.831 306.614 111.425 cv
308.091 111.765 309.562 112.147 311.023 112.57 cv
310.873 113.089 310.723 113.607 310.573 114.126 cv
309.14 113.711 307.698 113.337 306.25 113.003 cv
306.103 113.639 305.957 114.275 305.81 114.91 cv
307.254 115.244 308.692 115.618 310.12 116.033 cv
309.97 116.551 309.819 117.07 309.668 117.588 cv
307.667 117.007 305.648 116.507 303.616 116.09 cv
cp
f
262.066 157.134 mo
262.158 156.783 261.942 156.5 261.585 156.404 cv
261.262 156.317 260.94 156.228 260.618 156.138 cv
260.513 156.512 260.408 156.885 260.303 157.259 cv
260.629 157.35 260.955 157.44 261.282 157.528 cv
261.645 157.625 261.976 157.479 262.066 157.134 cv
cp
258.733 159.242 mo
259.134 157.862 259.535 156.483 259.935 155.103 cv
260.594 155.295 261.254 155.479 261.915 155.657 cv
262.836 155.904 263.186 156.641 263.003 157.376 cv
262.821 158.102 262.139 158.593 261.195 158.34 cv
260.824 158.241 260.455 158.14 260.085 158.036 cv
259.947 158.527 259.81 159.019 259.672 159.51 cv
259.359 159.422 259.046 159.333 258.733 159.242 cv
cp
f
266.108 158.109 mo
266.186 157.755 265.954 157.48 265.586 157.396 cv
265.265 157.324 264.945 157.25 264.625 157.174 cv
264.535 157.551 264.446 157.929 264.357 158.306 cv
264.68 158.383 265.004 158.458 265.329 158.532 cv
265.702 158.616 266.031 158.462 266.108 158.109 cv
cp
265.388 160.941 mo
265.206 160.378 265.028 159.815 264.855 159.252 cv
264.627 159.199 264.398 159.146 264.17 159.092 cv
264.053 159.588 263.935 160.085 263.818 160.582 cv
263.502 160.507 263.186 160.43 262.871 160.353 cv
263.215 158.958 263.559 157.563 263.903 156.169 cv
264.567 156.332 265.232 156.489 265.899 156.639 cv
266.788 156.839 267.215 157.527 267.052 158.312 cv
266.897 159.058 266.325 159.356 265.826 159.357 cv
266.038 159.964 266.256 160.57 266.479 161.175 cv
266.115 161.099 265.752 161.021 265.388 160.941 cv
cp
f
271.014 159.84 mo
271.146 159.043 270.724 158.359 269.926 158.215 cv
269.129 158.07 268.5 158.564 268.344 159.357 cv
268.19 160.143 268.6 160.85 269.422 160.999 cv
270.247 161.148 270.884 160.631 271.014 159.84 cv
cp
267.385 159.165 mo
267.65 157.894 268.781 157.18 270.071 157.414 cv
271.369 157.649 272.175 158.712 271.978 159.997 cv
271.781 161.28 270.642 162.048 269.277 161.801 cv
267.92 161.556 267.12 160.436 267.385 159.165 cv
cp
f
273.357 162.378 mo
273.52 161.222 273.682 160.066 273.845 158.91 cv
273.42 158.85 272.995 158.788 272.571 158.723 cv
272.612 158.457 272.653 158.191 272.694 157.924 cv
273.842 158.101 274.992 158.257 276.144 158.394 cv
276.113 158.661 276.081 158.928 276.049 159.196 cv
275.626 159.146 275.203 159.093 274.781 159.037 cv
274.629 160.195 274.477 161.352 274.325 162.51 cv
274.002 162.467 273.679 162.423 273.357 162.378 cv
cp
f
280.554 160.981 mo
280.655 159.659 281.729 158.835 283.028 158.898 cv
283.985 158.944 284.521 159.476 284.815 160.023 cv
284.543 160.144 284.27 160.264 283.996 160.382 cv
283.825 160.027 283.442 159.732 282.988 159.711 cv
282.196 159.672 281.579 160.234 281.526 161.046 cv
281.473 161.859 282.031 162.497 282.849 162.537 cv
283.317 162.56 283.734 162.306 283.935 161.957 cv
284.203 162.095 284.473 162.232 284.743 162.367 cv
284.404 162.894 283.812 163.4 282.809 163.351 cv
281.443 163.284 280.453 162.3 280.554 160.981 cv
cp
f
286.339 163.386 mo
286.357 162.219 286.375 161.052 286.392 159.885 cv
285.964 159.878 285.536 159.869 285.109 159.857 cv
285.116 159.588 285.124 159.319 285.131 159.05 cv
286.289 159.082 287.447 159.094 288.606 159.087 cv
288.607 159.356 288.609 159.625 288.611 159.894 cv
288.186 159.897 287.76 159.897 287.335 159.895 cv
287.327 161.062 287.321 162.229 287.314 163.397 cv
286.989 163.395 286.664 163.391 286.339 163.386 cv
cp
f
292.328 160.564 mo
292.691 160.374 292.973 160.173 292.957 159.856 cv
292.946 159.631 292.768 159.504 292.552 159.513 cv
292.295 159.525 292.1 159.727 292.111 159.991 cv
292.118 160.165 292.206 160.363 292.328 160.564 cv
cp
292.944 162.49 mo
292.731 162.287 292.534 162.087 292.421 161.965 cv
292.267 161.797 292.104 161.609 291.948 161.414 cv
291.721 161.585 291.574 161.79 291.584 162.088 cv
291.598 162.507 291.932 162.754 292.306 162.739 cv
292.536 162.73 292.757 162.634 292.944 162.49 cv
cp
293.785 163.235 mo
293.686 163.156 293.564 163.054 293.428 162.931 cv
293.103 163.194 292.695 163.369 292.21 163.39 cv
291.377 163.423 290.698 163.027 290.678 162.192 cv
290.661 161.539 291.1 161.187 291.597 160.923 cv
291.413 160.613 291.284 160.294 291.274 160.004 cv
291.256 159.423 291.762 158.954 292.485 158.921 cv
293.097 158.893 293.644 159.197 293.678 159.773 cv
293.716 160.43 293.189 160.739 292.653 161.009 cv
292.794 161.177 292.943 161.333 293.063 161.456 cv
293.197 161.604 293.332 161.74 293.46 161.875 cv
293.634 161.588 293.757 161.276 293.822 161.019 cv
294.054 161.107 294.287 161.195 294.521 161.281 cv
294.383 161.633 294.197 162.015 293.96 162.358 cv
294.246 162.62 294.547 162.886 294.887 163.168 cv
294.52 163.192 294.153 163.215 293.785 163.235 cv
cp
f
296.77 162.416 mo
296.924 162.169 297.076 161.922 297.227 161.675 cv
297.571 161.963 298.089 162.181 298.709 162.116 cv
299.234 162.061 299.464 161.801 299.436 161.557 cv
299.354 160.809 296.837 161.584 296.7 159.957 cv
296.64 159.242 297.215 158.6 298.234 158.495 cv
298.922 158.424 299.516 158.564 299.994 158.903 cv
299.849 159.147 299.702 159.39 299.554 159.632 cv
299.163 159.352 298.676 159.255 298.231 159.301 cv
297.832 159.341 297.625 159.536 297.65 159.794 cv
297.717 160.484 300.193 159.754 300.389 161.341 cv
300.485 162.122 299.968 162.79 298.745 162.918 cv
297.875 163.007 297.224 162.786 296.77 162.416 cv
cp
f
301.195 162.556 mo
301.013 161.131 300.831 159.706 300.65 158.281 cv
301.671 158.151 302.691 158.005 303.708 157.843 cv
303.751 158.109 303.793 158.374 303.835 158.64 cv
303.118 158.754 302.4 158.861 301.681 158.959 cv
301.722 159.26 301.763 159.561 301.804 159.862 cv
302.514 159.765 303.224 159.66 303.933 159.547 cv
303.975 159.813 304.017 160.079 304.059 160.345 cv
303.345 160.458 302.63 160.564 301.914 160.662 cv
301.958 160.984 302.002 161.307 302.046 161.629 cv
302.785 161.528 303.522 161.418 304.259 161.301 cv
304.301 161.567 304.343 161.833 304.385 162.099 cv
303.324 162.268 302.261 162.42 301.195 162.556 cv
cp
f
276.535 162.694 mo
276.695 161.267 276.854 159.839 277.015 158.411 cv
278.038 158.526 279.063 158.625 280.09 158.708 cv
280.069 158.976 280.047 159.245 280.025 159.513 cv
279.301 159.454 278.578 159.388 277.856 159.314 cv
277.825 159.616 277.794 159.918 277.763 160.22 cv
278.476 160.293 279.19 160.359 279.905 160.417 cv
279.883 160.686 279.862 160.954 279.84 161.222 cv
279.119 161.164 278.399 161.097 277.68 161.023 cv
277.647 161.347 277.614 161.671 277.581 161.994 cv
278.322 162.07 279.064 162.139 279.808 162.199 cv
279.786 162.467 279.764 162.735 279.742 163.004 cv
278.671 162.917 277.602 162.814 276.535 162.694 cv
cp
f
307.211 158.637 mo
307.142 158.281 306.821 158.12 306.451 158.189 cv
306.128 158.249 305.805 158.307 305.482 158.364 cv
305.549 158.747 305.616 159.129 305.684 159.511 cv
306.01 159.453 306.337 159.394 306.664 159.333 cv
307.039 159.263 307.28 158.991 307.211 158.637 cv
cp
307.67 161.522 mo
307.28 161.078 306.895 160.631 306.514 160.182 cv
306.284 160.224 306.054 160.265 305.824 160.306 cv
305.912 160.808 306.001 161.311 306.089 161.813 cv
305.771 161.87 305.452 161.924 305.133 161.977 cv
304.897 160.56 304.661 159.143 304.425 157.726 cv
305.097 157.614 305.768 157.496 306.438 157.37 cv
307.332 157.203 307.996 157.664 308.157 158.45 cv
308.309 159.198 307.903 159.696 307.446 159.895 cv
307.88 160.368 308.319 160.839 308.764 161.307 cv
308.4 161.381 308.035 161.452 307.67 161.522 cv
cp
f
310.705 160.893 mo
309.817 159.619 308.953 158.335 308.112 157.041 cv
308.459 156.97 308.806 156.897 309.152 156.822 cv
309.782 157.816 310.424 158.805 311.078 159.789 cv
311.237 158.619 311.383 157.45 311.515 156.281 cv
311.861 156.198 312.205 156.113 312.55 156.025 cv
312.356 157.556 312.137 159.088 311.894 160.621 cv
311.498 160.714 311.102 160.805 310.705 160.893 cv
cp
f
314.018 160.098 mo
313.66 158.707 313.303 157.316 312.945 155.925 cv
313.948 155.667 314.948 155.393 315.944 155.103 cv
316.019 155.362 316.094 155.62 316.169 155.879 cv
315.467 156.083 314.763 156.279 314.057 156.468 cv
314.136 156.761 314.214 157.055 314.293 157.348 cv
314.99 157.162 315.685 156.968 316.379 156.767 cv
316.454 157.025 316.529 157.284 316.604 157.543 cv
315.904 157.745 315.203 157.941 314.501 158.128 cv
314.585 158.443 314.669 158.757 314.753 159.071 cv
315.477 158.877 316.2 158.676 316.921 158.466 cv
316.996 158.725 317.071 158.983 317.147 159.242 cv
316.107 159.544 315.064 159.829 314.018 160.098 cv
cp
f
286.4 164.618 mo
286.924 164.588 287.432 164.526 287.94 164.434 cv
288.448 164.526 288.956 164.588 289.48 164.618 cv
288.972 164.68 288.463 164.695 287.94 164.695 cv
287.416 164.695 286.908 164.68 286.4 164.618 cv
cp
.905882 .635294 .266667 rgb
f
287.944 121.39 mo
295.987 121.39 302.59 127.581 303.233 135.457 cv
303.208 135.895 303.156 136.319 303.079 136.744 cv
301.856 129.485 295.55 123.964 287.944 123.964 cv
280.337 123.964 274.031 129.485 272.808 136.744 cv
272.731 136.319 272.68 135.895 272.654 135.457 cv
273.297 127.581 279.9 121.39 287.944 121.39 cv
cp
1 .462745 0 rgb
f
303.079 136.744 mo
303.156 137.169 303.208 137.593 303.233 138.031 cv
302.59 145.908 295.987 152.098 287.944 152.098 cv
279.9 152.098 273.297 145.908 272.654 138.031 cv
272.68 137.593 272.731 137.169 272.808 136.744 cv
274.031 144.003 280.337 149.524 287.944 149.524 cv
295.55 149.524 301.856 144.003 303.079 136.744 cv
cp
1 .937255 .631373 rgb
f
287.944 123.964 mo
295.55 123.964 301.856 129.485 303.079 136.744 cv
301.856 144.003 295.55 149.524 287.944 149.524 cv
280.337 149.524 274.031 144.003 272.808 136.744 cv
274.031 129.485 280.337 123.964 287.944 123.964 cv
cp
1 .627451 0 rgb
f
287.941 142.868 mo
294.665 145.717 li
294.034 138.442 li
298.821 132.927 li
291.707 131.279 li
287.941 125.023 li
284.176 131.279 li
277.062 132.927 li
281.849 138.442 li
281.217 145.717 li
287.941 142.868 li
cp
.843137 .462745 .266667 rgb
f
294.665 145.717 mo
287.944 136.261 li
287.941 142.868 li
294.665 145.717 li
cp
1 .937255 .631373 rgb
f
298.821 132.927 mo
287.944 136.261 li
294.034 138.442 li
298.821 132.927 li
cp
f
287.941 125.023 mo
291.707 131.279 li
287.944 136.261 li
287.941 125.023 li
cp
f
277.062 132.927 mo
284.176 131.279 li
287.944 136.261 li
277.062 132.927 li
cp
f
281.217 145.717 mo
281.849 138.442 li
287.944 136.261 li
281.217 145.717 li
cp
f
289.483 128.034 mo
288.96 128.065 288.452 128.126 287.944 128.219 cv
287.436 128.126 286.927 128.065 286.404 128.034 cv
286.912 127.972 287.42 127.957 287.944 127.957 cv
288.467 127.957 288.975 127.972 289.483 128.034 cv
cp
.905882 .635294 .266667 rgb
f
287.944 136.261 mo
281.217 145.717 li
287.941 142.868 li
287.944 136.261 li
cp
.952941 .784314 .298039 rgb
f
294.034 138.442 mo
287.944 136.261 li
294.665 145.717 li
294.034 138.442 li
cp
f
298.821 132.927 mo
291.707 131.279 li
287.944 136.261 li
298.821 132.927 li
cp
f
284.176 131.279 mo
287.941 125.023 li
287.944 136.261 li
284.176 131.279 li
cp
f
281.849 138.442 mo
287.944 136.261 li
277.062 132.927 li
281.849 138.442 li
cp
f
421.556 418.37 mo
352.566 418.37 li
352.192 418.37 351.888 418.066 351.888 417.692 cv
351.888 331.017 li
351.888 330.643 352.192 330.339 352.566 330.339 cv
421.556 330.339 li
421.93 330.339 422.234 330.643 422.234 331.017 cv
422.234 417.692 li
422.234 418.066 421.93 418.37 421.556 418.37 cv
.0352941 .239216 .501961 rgb
f
357.193 330.732 mo
354.485 330.732 352.281 332.936 352.281 335.644 cv
352.281 413.065 li
352.281 415.773 354.485 417.977 357.193 417.977 cv
416.929 417.977 li
419.637 417.977 421.841 415.773 421.841 413.065 cv
421.841 335.644 li
421.841 332.936 419.637 330.732 416.929 330.732 cv
357.193 330.732 li
cp
416.929 418.763 mo
357.193 418.763 li
354.051 418.763 351.495 416.207 351.495 413.065 cv
351.495 335.644 li
351.495 332.502 354.051 329.946 357.193 329.946 cv
416.929 329.946 li
420.071 329.946 422.627 332.502 422.627 335.644 cv
422.627 413.065 li
422.627 416.207 420.071 418.763 416.929 418.763 cv
cp
0 .443137 .737255 rgb
f
416.339 411.296 mo
357.783 411.296 li
357.783 337.413 li
416.339 337.413 li
416.339 411.296 li
.988235 1 .94902 rgb
f
387.061 327.588 mo
385.924 327.588 384.998 328.514 384.998 329.651 cv
384.998 330.789 385.924 331.714 387.061 331.714 cv
388.199 331.714 389.124 330.789 389.124 329.651 cv
389.124 328.514 388.199 327.588 387.061 327.588 cv
cp
387.061 333.286 mo
385.057 333.286 383.426 331.656 383.426 329.651 cv
383.426 327.647 385.057 326.016 387.061 326.016 cv
389.065 326.016 390.696 327.647 390.696 329.651 cv
390.696 331.656 389.065 333.286 387.061 333.286 cv
cp
1 .627451 0 rgb
f
405.304 338.891 mo
405.304 339.739 li
405.304 341.398 403.952 342.75 402.286 342.75 cv
372.489 342.75 li
370.823 342.75 369.478 341.398 369.478 339.739 cv
369.478 338.891 li
369.478 340.549 370.823 341.901 372.489 341.901 cv
402.286 341.901 li
403.952 341.901 405.304 340.549 405.304 338.891 cv
cp
f
405.304 337.444 mo
405.304 338.891 li
405.304 340.549 403.952 341.901 402.286 341.901 cv
372.489 341.901 li
370.823 341.901 369.478 340.549 369.478 338.891 cv
369.478 337.444 li
369.478 335.786 370.823 334.434 372.489 334.434 cv
402.286 334.434 li
403.952 334.434 405.304 335.786 405.304 337.444 cv
cp
.952941 .784314 .298039 rgb
f
399.33 332.438 mo
399.33 333.286 li
399.33 334.426 398.411 335.354 397.271 335.354 cv
376.851 335.354 li
375.711 335.354 374.792 334.426 374.792 333.286 cv
374.792 332.438 li
374.792 333.569 375.711 334.497 376.851 334.497 cv
397.271 334.497 li
398.411 334.497 399.33 333.569 399.33 332.438 cv
cp
1 .505882 0 rgb
f
399.33 331.714 mo
399.33 332.438 li
399.33 333.569 398.411 334.497 397.271 334.497 cv
376.851 334.497 li
375.711 334.497 374.792 333.569 374.792 332.438 cv
374.792 331.714 li
374.792 330.575 375.711 329.647 376.851 329.647 cv
397.271 329.647 li
398.411 329.647 399.33 330.575 399.33 331.714 cv
cp
1 .627451 0 rgb
f
412.802 351.757 mo
361.713 351.757 li
361.713 349.203 li
412.802 349.203 li
412.802 351.757 li
cp
.831373 .909804 .945098 rgb
f
412.802 400.39 mo
397.544 400.39 li
397.544 397.836 li
412.802 397.836 li
412.802 400.39 li
cp
f
412.802 357.161 mo
361.713 357.161 li
361.713 354.606 li
412.802 354.606 li
412.802 357.161 li
cp
f
412.802 362.565 mo
361.713 362.565 li
361.713 360.01 li
412.802 360.01 li
412.802 362.565 li
cp
f
412.802 367.968 mo
361.713 367.968 li
361.713 365.414 li
412.802 365.414 li
412.802 367.968 li
cp
f
412.802 373.372 mo
361.713 373.372 li
361.713 370.818 li
412.802 370.818 li
412.802 373.372 li
cp
f
412.802 378.776 mo
361.713 378.776 li
361.713 376.221 li
412.802 376.221 li
412.802 378.776 li
cp
f
412.802 384.179 mo
361.713 384.179 li
361.713 381.625 li
412.802 381.625 li
412.802 384.179 li
cp
f
412.802 389.583 mo
361.713 389.583 li
361.713 387.029 li
412.802 387.029 li
412.802 389.583 li
cp
f
412.802 394.987 mo
361.713 394.987 li
361.713 392.432 li
412.802 392.432 li
412.802 394.987 li
cp
f
379.274 415.373 mo
378.913 414.893 378.198 414.541 377.43 414.396 cv
376.413 414.203 375.549 413.663 374.997 412.875 cv
374.615 412.33 374.478 411.808 374.493 411.296 cv
374.885 411.296 li
374.871 411.74 374.991 412.182 375.319 412.649 cv
375.812 413.352 376.588 413.835 377.503 414.009 cv
378.27 414.154 378.869 414.458 379.289 414.914 cv
379.709 414.458 380.308 414.154 381.075 414.009 cv
381.99 413.835 382.766 413.352 383.259 412.649 cv
383.587 412.182 383.707 411.74 383.693 411.296 cv
384.085 411.296 li
384.1 411.808 383.963 412.33 383.581 412.875 cv
383.029 413.663 382.165 414.203 381.148 414.396 cv
380.38 414.541 379.636 414.893 379.274 415.373 cv
.603922 .466667 .207843 rgb
f
384.085 411.296 mo
383.693 411.296 li
383.672 410.61 383.331 409.921 382.939 409.131 cv
382.151 407.539 382.971 406.019 383.27 405.552 cv
382.582 404.881 li
382.115 405.251 381.65 405.386 381.221 405.386 cv
380.331 405.386 379.591 404.806 379.289 404.529 cv
378.987 404.805 378.247 405.386 377.357 405.386 cv
376.928 405.386 376.463 405.251 375.997 404.881 cv
375.308 405.552 li
375.607 406.019 376.427 407.539 375.638 409.131 cv
375.247 409.921 374.906 410.61 374.885 411.296 cv
374.493 411.296 li
374.516 410.51 374.894 409.747 375.286 408.956 cv
376.108 407.296 374.907 405.66 374.895 405.644 cv
374.791 405.505 li
375.981 404.346 li
376.118 404.469 li
376.52 404.829 376.932 404.961 377.32 404.961 cv
378.365 404.961 379.238 404.002 379.284 403.951 cv
379.329 404.001 380.211 404.959 381.259 404.959 cv
381.648 404.959 382.06 404.827 382.46 404.469 cv
382.597 404.346 li
383.787 405.505 li
383.684 405.643 li
383.672 405.66 382.472 407.302 383.292 408.956 cv
383.684 409.747 384.062 410.51 384.085 411.296 cv
.996078 .780392 .392157 rgb
f
376.979 407.876 mo
376.683 407.876 li
376.683 406.901 li
377.204 406.901 li
377.432 406.901 377.555 407.053 377.555 407.236 cv
377.555 407.417 377.432 407.569 377.204 407.569 cv
376.979 407.569 li
376.979 407.876 li
376.979 407.158 mo
376.979 407.312 li
377.166 407.312 li
377.255 407.236 li
377.166 407.158 li
376.979 407.158 li
f
378.134 407.894 mo
377.832 407.894 377.6 407.689 377.6 407.389 cv
377.6 407.089 377.832 406.885 378.134 406.885 cv
378.435 406.885 378.668 407.089 378.668 407.389 cv
378.668 407.689 378.435 407.894 378.134 407.894 cv
378.134 407.145 mo
377.992 407.145 377.9 407.253 377.9 407.389 cv
377.9 407.525 377.992 407.634 378.134 407.634 cv
378.275 407.634 378.368 407.525 378.368 407.389 cv
378.368 407.253 378.275 407.145 378.134 407.145 cv
f
379.439 407.876 mo
378.774 407.876 li
378.774 406.901 li
379.069 406.901 li
379.069 407.619 li
379.439 407.619 li
379.439 407.876 li
f
379.854 407.876 mo
379.558 407.876 li
379.558 406.901 li
379.854 406.901 li
379.854 407.876 li
f
380.496 407.894 mo
380.19 407.894 379.96 407.689 379.96 407.389 cv
379.96 407.088 380.19 406.885 380.496 406.885 cv
380.752 406.885 380.881 407.034 380.939 407.168 cv
380.685 407.287 li
380.496 407.145 li
380.354 407.145 380.259 407.253 380.259 407.389 cv
380.259 407.525 380.354 407.634 380.496 407.634 cv
380.685 407.492 li
380.939 407.609 li
380.882 407.739 380.752 407.894 380.496 407.894 cv
f
381.772 407.876 mo
381.032 407.876 li
381.032 406.901 li
381.772 406.901 li
381.772 407.158 li
381.328 407.158 li
381.328 407.255 li
381.762 407.255 li
381.762 407.512 li
381.328 407.512 li
381.328 407.619 li
381.772 407.619 li
381.772 407.876 li
f
377.848 411.795 mo
377.616 411.795 377.437 411.704 377.33 411.603 cv
377.55 411.358 li
377.608 411.411 377.711 411.464 377.809 411.464 cv
377.919 411.464 378.02 411.418 378.081 411.296 cv
378.479 411.296 li
378.379 411.632 378.118 411.795 377.848 411.795 cv
.603922 .466667 .207843 rgb
f
378.479 411.296 mo
378.081 411.296 li
378.112 411.234 378.132 411.153 378.139 411.049 cv
378.032 411.149 377.889 411.205 377.789 411.205 cv
377.525 411.205 377.31 411.061 377.31 410.735 cv
377.31 410.409 377.577 410.217 377.882 410.217 cv
378.192 410.217 378.521 410.428 378.521 410.98 cv
378.521 411.098 378.506 411.204 378.479 411.296 cv
377.892 410.524 mo
377.791 410.524 377.691 410.574 377.691 410.735 cv
377.691 410.869 377.774 410.917 377.882 410.917 cv
377.961 410.917 378.045 410.882 378.125 410.787 cv
378.085 410.573 377.975 410.524 377.892 410.524 cv
.996078 .780392 .392157 rgb
f
379.992 411.766 mo
378.835 411.766 li
378.835 411.435 li
379.24 411.435 li
379.24 411.296 li
379.66 411.296 li
379.66 411.435 li
379.992 411.435 li
379.992 411.766 li
.603922 .466667 .207843 rgb
f
379.66 411.296 mo
379.24 411.296 li
379.24 410.649 li
378.898 410.649 li
378.898 410.395 li
379.118 410.361 379.225 410.323 379.352 410.246 cv
379.66 410.246 li
379.66 411.296 li
.996078 .780392 .392157 rgb
f
381.458 411.766 mo
380.301 411.766 li
380.301 411.435 li
380.706 411.435 li
380.706 411.296 li
381.126 411.296 li
381.126 411.435 li
381.458 411.435 li
381.458 411.766 li
.603922 .466667 .207843 rgb
f
381.126 411.296 mo
380.706 411.296 li
380.706 410.649 li
380.364 410.649 li
380.364 410.395 li
380.584 410.361 380.691 410.323 380.818 410.246 cv
381.126 410.246 li
381.126 411.296 li
.996078 .780392 .392157 rgb
f
379.289 413.026 mo
377.532 413.026 376.09 412.261 375.975 411.296 cv
376.192 411.296 li
376.312 412.142 377.655 412.811 379.289 412.811 cv
380.923 412.811 382.266 412.142 382.386 411.296 cv
382.603 411.296 li
382.488 412.261 381.046 413.026 379.289 413.026 cv
.603922 .466667 .207843 rgb
f
382.603 411.296 mo
382.386 411.296 li
382.392 411.255 382.395 411.214 382.395 411.172 cv
382.395 410.268 381.002 409.533 379.289 409.533 cv
377.576 409.533 376.183 410.268 376.183 411.172 cv
376.183 411.214 376.186 411.255 376.192 411.296 cv
375.975 411.296 li
375.97 411.255 375.968 411.214 375.968 411.172 cv
375.968 410.149 377.458 409.318 379.289 409.318 cv
381.12 409.318 382.61 410.149 382.61 411.172 cv
382.61 411.214 382.608 411.255 382.603 411.296 cv
.996078 .780392 .392157 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 19.2.1
%%For: (MSI) ()
%%Title: (0102.OlehDovhan.Police.O1.eps)
%%CreationDate: 9/26/2020 10:19 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj]W)oD&@UIQmWM6<dVA&1h1oJ[XV^5_3saoVNriOHQY)g?h*!^%VJb%U4+H`,o]"q.@78@5=-*,AAcE`j<#IB!5(22D4UG
%Io\<t`&6<Y0c_&oi_TLNn%WII\#MrI-QQs,=mji=7e`S3/Gku5Til0>4"H`9:Too6o.Ju@0D!JmeXA]Xq3kC!L1bP]eletUo1R>O
%h<S\>XN#e1)12.$#G-MOn2#^GZgBf(Nr<i37K[KPqWuUA?L8Aum*FIBO&RJKWF^RTV@NWpn?;MI;SrIAn?7S=5L![o\S[g[HgJ5S
%[b%W>)plu)L;9EApbGe?0>(VnbK#eQZ/B,95(cQ\AG045l*.(%(^+8s2"?A$7[sH$s""c[5=Fi;KV.prOYM,G#7!]a6g"``Q8'ud
%=r.^2^((]0`s.CU4n7j?Rb.5OHr=EaXc3$&qQ"uDk"&7]lXk!d3Z2C?<`Z\([L@7*CEcS&\t4%=dhNCJCVp*Xoma&R[X>:<\&Hk[
%g>1fS^G*X(KbS2%I+54mmFR>4(\hZ"R*0,SY?CC25^3!JWTLI.TTIEI$B,Y%IHbra"ZL3[S=#S#UWMt2p$00G:EPoO&Y89tr5M>"
%%3+MoY$&P9(E&^m@?k%40L[c,3IgN;d?SF2m:%<mKP[1<N#f^>h/?@JX,WAjU;;N;@N>#VZX'\d/"5`@L]:b(A0'd8/,tLc!qG*L
%hiQkGqH76&fc++<mhkrYBN,>`3mL%sJ'IjE$J7&?k,%i2r.TP(:%VV@(^;sHeV"1-%;bh.^L$I!S?miO&&-h82g_[o`^TLf^ZKR%
%k..+0j-RC&2U#q_Z[_rhI[SO+Z$i*%BmXE)"+Cc"Z<jpr5GCH:ZgDE#\*tsG<W8KMH.]VL?c!",FJJB^Y;KNV_]1=(M[),CiO(K.
%MkIoBl?E$C"$VE5,,3tCS#T1b/M1?<CPC`cg)kp>I$LS0h.i^g#mU"Th&jo82,78Uf'@ED^bskLruZ_iMoXFu[sSp/;a>iCeH<"%
%"hMQh<&t$rpobirOm=!QL@TptX&Uh-?L+UpcK*`nc;j#&frP@Z-[[$.Ujg@u_C&:,/8ip[A&#kEl0hUp`&e+t`h+./hL_YgH@dg=
%;_O:g)jMm(ciKVT.*h>n%i5(\ofUc64T8JJDq:qZHI0513IksF/_Bp\T:N-W8h(jJg#/$<'`BN>P5sKr9>A(TS@4>j"0@1"ENe*h
%_nFa)\'P]2*+*tCT5dD2*f!HnB;!XONO?,M;O7uTIsLs('<KS6g*b([kKF;2p3(BK'c8%ZF0Sn<>Jb1U*:_QoB'u:;XT;c]!<_'+
%o3U#R6+.&T\TZ_cj-6aI[7]1l0FU+N]FB`Dp_&'uIj3S8jW'X!Zh'UH@q`5h)+FDieTq;_8%$dY)M$E.l5U09+Rg/eR[>V?H?n%8
%6&e:F.rs&Lo1o]SrY]VeI\n7HkM;8^gHPLJB\Gto1-QW+r+OaPf@8*eBZd??'Vlo#?.%56<jgqOO/D/nM)+3lV'%CB]pOhEE>+Jj
%?Mb`?a@=i)boQf58@AY\h[)UFBK@'FqL6!@IJ;2aZAO$21uT^>-EHNXHF5T(?R"?pgrsNaBQDD3NaHPuhg2Lddn%k'r`p,fBHDAu
%@,6hiYf#raAs?mJ7^,euRm@aM@2+Y9P5`QOTqMmBpcR?R'HK,ZmBXLK?.9RGY)u3$2=>A(%32$-7'l!]GX;a86IbOkGLa\U=Wa1O
%rQb-FF3-Je8P?<oIa]^4YqgV*b=2FTZT@dG`f?FcB/a-Bgf)PES9fAY)kPkSgB53ep8V9_9T!bT@dQp=]=[e(;M:(-Y2.U8S%<cA
%f5Bm-9jPBF'k1kp91s'I*MjCQ$LZ`=j#WXe@#C^^Y49i("i'BmV+!Dk![O8NQPR'd)'Te+g&bo56M!EOa1)"no6UfP*b_[P@nH&?
%9rLMg;S7%\=7>+ub7k)YaEL(==8UtT*4-i`Api3GVmPJEk$=*;11XD:1;nd:=pFu/_IrXf'eaQeVNcL&ZUH2"SN/5MVX<0R9P#X[
%]XoAae#HEsCp1-G/)qZ/'GQ8"GIA"19MhRP`qj7KG=>$VDq2KWVsI`d;T0TTBgc<YH<4(*ZGKSPAC%Fr"f$p4inp:3<q.iCNPQBZ
%7(g!VY?O].(_tgfF^_pP[@U"<Nifd_X0o+C$1RW6CBGBuI>e<W1h![^dJmNaks;<.A1IG#:X`$cYIfa#CjNciVs6/1K;fc-)3Al"
%`dRGS>bJ8O"(V5A6.5$^9!oTCQmX\O3GqaQAufe8V1I7$G-C1[2pDuI[o+A<"S84AL")FP9n^C>Gho-o\2I4rJOnfp6^ikA^;G4e
%E=d.RLs?88A@uUnFL*2YK/kqanie*_ge`1O7*4<ISF64?9-9RIQRB:j'[nl!ko'&a4@;l+.lBIWSt7)QZ"/084?Z&,-\h.*=k?\Q
%MWF$4nXh04:Q<%%6.G/0natU]H>Yi.2s/RE4Z=FG@.EmEG^=6i4ZE@7dkU9[^J_bTkbUl?]/TWe-`_YWR\1R23<R,r)/Gh@+>!N-
%SU!XQ"C/-Y!Cks$R*fVASgaH+=kkImD8'0]bm&EiNAR]@mticrNpiLFP8:tUHgu+1H>20a_)+J:NKDtaZ<P"YqgN#i9G2gir5S#5
%F7jmf=nB8+D83C1CjV.mB1(.pfedeol`/7!L<ddtFI();S]9!Qn[%+32g1(2*5;]mV$t^!\9B:kS.mf*s&SI!<#*@RbW?<`'W]Gp
%g.bX0D"2]ZKK0s_6?q>0ANq=],CBY!=Rtk$\sO"onc[!laM\:BdL[`@m)D7AE,8I,NVXa-1BLM='fjte`5VQpR0HupJX:*/jTb,V
%L08cZ77:Qdr+-dkR0HupJX:*/-#(Iq"##'(Ii<R"#%%<+Y*sl'KP:GNpBH_>Ku7u8,=ja#]o7@^C#Wl.9P.i%2s.!pV.@0p"Y1q%
%;"_b-XJf.2lt+]\,S8C2qATB#'krO5N-h7U1c1/<To(\G2Pu0XVTSFpAaWMNhR-[[Uaf+uFO.s53DQV7NJDPE<cOR%j`hlngM\4D
%V\P`!'qF],R1a:u?LXD@R!\FVf-N0QYBWc3`4^E;X8^MNCf0E>k/G*>,+)rZQ_qktKjc8];s40iAM?cA%ASRB^\`-H2Q["GJk;.A
%ELsD?(Fe3X4"Yf!kGICKm)=3croV0ga7&"=[/EV>UWl@C"dLpq<TO_8.m?64?sBFpN&4REjl`0BYPhmN1>ZL+U=O-]pr1FAo9rap
%?HmFcZfRIQh4H3$2O+@BR4^@Oj5&7K96n;EhT3$fo\:6%TS*^A?LFPp'/Aq/J)W)P9scqP/&^7r_mRdT=)%X^9U9M,htI=%`4;;K
%RXRK(;PfT4g[sihc-B)Cr(Kc[`O=I,Uu-E1"+*@uV'b0'/]:1'18if's'[&!E][c?btVeJdF=o&V\\(tb0f"jH9:BUqd1n`1T<jk
%e0^X<6mDmkboe)igM#RJq3,OZ9f'l2:_HIUID1QaPa`eH0[1a/-XrN150Y4B-HV7(Eh$a':\E_WS,`4J2bk%-a$Vd\'?DP"2r;R\
%nul?^9<VmpEaisQ8Nq#Jo6ZFfq_K>/FVORj79m45En@A*C0&eClhn;UlQU$A5/\Ycgpg.$*8B]-pL+iPVg?=4ML8JnSb1Y!]pdhL
%;ZZmSR.aZ7`Tc0gfC;LNs'$"i:QlJ._nR_U)U7;[[9F\oWYijN6G/Ls/_+<h@,J4=)7_09>E[T$BJ)_ZK6ncZD^$=D?A*76e"%Y+
%JF92:,8j5R8bs,d7T7MpV@aOUn]j;0>-kn$Cp/i-R$]GjBL3Blr]mHD]A,dJ^.--2Mf%5U3W##1>e2`u`A3`W\/*O;'B<WFNW#`H
%\=7UXF%7+&^;C)qY?qmedi3Jj\E(Y9,cKe"a<A2T>DQh=,jS,5lD\7+X^1Sm_Jbd@mGAWJ\W;N_?10o#m,!ZaUn1.t.)Q=>P;]ue
%_7jDn;X--^8,#o?9[Y-.dYsK[oOYHk?"S;obfJiQZi$A#%Ugt"VECKX]gh0/bo7M>E6[:aWYp..D'G_sr+tQjfq%j^MesC/p_2,n
%Y.Wk2[AerQX#k9H`U`b.Z2@<@R&H?!Z.Hi(.UE?iMRU=X.q)<mK4A79A,<X#'MOt2S%n&hIV%@-_XFVObTn2VU`j@:AYbXS9OrHR
%q*3b;*]L@]p?Tul.0Mi5\3[QO9G?"FEhXL%8Faja?G0G3dWeq-jLZVZX8VO:%U+rkM:qRU.7GT(]IT.[eV<Oh.+VPpC?<-@)IGit
%]dohY'Q[5FF!Af4mYZt3hl:s9DVBH&9!qkD-p8d/-pYHrWm^)`Pr@=m.n7Kk!i,O#Xi<$Jc$C:2cHu!:P%pcO?W7uDMT3Mjot>5t
%e^dW;mr";%$4j2*`kQ8c2EZFa(rU2hl_tT_mgI(hpI),_m_cP]W=sK)19FsZqf_>eKhcc<@5e+]4FBb\O+se.QY)^&^2hud#e%S,
%VN$("m4:[Y_PFqgA")./h/e'fc_[kZ-@O4:@)6s2:&!H$4bm6uC4*5<)F#j]XC1K+Wpo^H[)FAofQ*fL,[bq*NVjLV[-^kn]ekKF
%'(Lunhd3YF\n]fbQRU3mVNUE!-(d>cHrJ.2%jYM>FZPe8s7;D7R+gojL%;!B8bINUJTk0g4rl@ZI_+,@"c.@kcB=cRS2>pNm]qjA
%.O*;G27^Wj-/:Za]>2kj"\PfK"W"Qd-p?VL$2F`^cdH&oqk#PX-DbZV\egIbRu;.4d-Q"L*)=TPDSu>/s''h_m&NgVTj_,8lM"YN
%;dXLVP4CcYSaOgG0,`nsj/k&V?A.9Q>UJbGNmlT_:L@b*5i98)Sb8/BBdo@`\GON=91?jfHd:RKV]t0Y'P.,gk;L=GZT<MMoq,9`
%@rE8Zgs*p^ZZW-h4i^A#9\M5\oW=YX7j-SPqb5ng3@6RVhoIf!1ecfJ3W;eC9d9"h=dEaVAn:`bcJLU=l$]4/^$5#j0/6-.7#e7q
%QsS;[@uhp)%e91k`q6:Nm2:otph$bpQ&Q*_Z>gsDmB>l^a`Ip1D.\6,;#:/bb1'M)&&-b.j_bp!Q+K>`']b5O*L&BKN;3pIUkm#9
%P]NBb1o:kEqsBB>aAAEs1o:kEBgcG:ER"\T1t'`)NG+9]VO^15``7sn,9#$e`dN\WBTj.X84Cb9M.fRJ/W,Ca7%oO%QWSrnnB[C4
%7Q>4R=0&(f[d3Q[,9>fZIs"8H8662FZ_p9u-"q[2]n1V*;Cn?6$$&5;X>YL'e=Uu^eF0\Ln+h;FdVYne%o>u*rnoWfDX-[brOo2F
%2tcqE\A+BI*h3"QPMkn(i6.Whgh`O-I!=uJV3n'X_`)`5V@MM5iL;lU;hm$o,EYQ<pa3)tr$:'":,O?l_WS7MV0V_)n6aWY\!QXZ
%Bh%grLmL&'pQm8u4ZejLS!7G^A4HL>>D'q<Ao@M-)o'Q/^#>HA`_DCdL"D\!Y=XUG9pY9@'Bb_iYAoteE>MsE.6N?3ZdI551\U7_
%d^5%T3,J!h4@VuO4iUc8V)ZN0G@uKiC$_%1,D7EfLL*V`1/<ldVoP3(8NiGs'IbAm-.U#M,(,h>)11>4Jqd%S(R*\B)p*+LNhd"`
%?DHK2Nr>DR:)?(YJ)mcr4%aL1G]W`X+1Ylu;lk.G26ZAurC2"WCY_XK;tlrq'M!$7_p_1%k/L_WV?d=[)uZaIjI]-'7hYVWRV;CL
%NC></a*@mX9<>RPDkPo*-7$T8^879VYnm]qU*',!,c#]il$of*27A]jgUhpiG2#I?p]!r"2nc0@C?]X&eF#)"dRZZ]="a74]cfn^
%.R>QT?'47!IX"'^WR7Y0l$D`]&qsiPR?`ndS9+]cQ(/Y8G=>-+g@2ci<VF4Z/akRG'K]2hmtrMD`V`]`'Lh(bG=>!UBC9(5R8Bk^
%]@HAL,XR$-=&c"m[OQ!so2gm,dI]lta4TUcBK,6kF:psQZ^m>t;fAQ'e!kRJ=a5p@4dF;tr*:P7KS$9=i7jJDkpB"@@`CUW^,2t,
%3Y%X+!cOg/g)f9,YXjXJjh89`;P'\b-u"JTHRV(ZV'`j=l!9OQXSucT-L!-T.^:o2G>Zf4ak08L'INDC0$<f=b4I=/s6O$U<+9b3
%p#ea#73V[5G>Zf4i:JYE(sU%PMhL>#PjuMHP%KmFbHAV);k!T.V^Br!hEYi2j]p[2(MBSUiAI0_qc?#Cr_17K*Q;<E@%sY>Z@ZqJ
%`=$do@Vta]]n#?2C:)mn!l@$ma);LF^A##H:n#2q09jbm;b;>BZ85EFpYQ*ZMRRk,"l3/)h6inKYtV'ImLKT7g"\L5c8HT+5i=Aa
%KqPbRc,KdkdY3FAQ39=2(\Q<srr24`MgadXmga(qppn_nb+bu;1sc+o^>8*[AbNckG6oI9^KlCFNqtNK^Fa]<>4n%sAq>9VCt=p2
%B<Q]JnFc@"-7]9'6puh%)b:o%5,;T5#k:!>+ZfL-e(A$hcg?eNjko1Rh;dqLRbr\`Yg[:bBX$B5:X"6;p#,LXh+t7snBO#J1<7pk
%X6'XX>%Sk+aETlIH0ZX7#_$<`V<K8#ASp_dNkmnm\urpU=!P.&*daBo#Di<F-iWfP5(*Ue%q%e;0D".dQDsck?QS0<J3GG:PQMFe
%_?I!C>SgP:&2fn<#@>[DG(!-*_0Plsc[GRZFn1ZH[\]i2s-iG\ooW.hs0_@"L7a$L8Dr6POfR^gqYRIKEY<TZ5#P+L)t59R[>;ar
%bB2U$:3ep/26a5.D.+rll^/H:cnpB_Mgr%0Bb5p6#AR)kZ?U.Tca:pY1I@$orY]^G?PsDn6A#J!nb>C6SASa3DRQorX.=-=3VP0@
%Nq/)i$%sW%o(Zkr]NN.LrgtZ.A'dM)Ld;iHjW:!5(VMFTAG0hB!cYX-Y7Y=S!(Bg6Hp(U-!HOk4r_t\_eB8sl3I<[6^mI9SHedhT
%IJ;HdeWH^5+QF7_D2hp[S`m9OSlMb1/ci0,/789!]a$G.M7PY^"J/[tH2Gto:Oiggk1K."8[MqO;UKE(;>bX8%(.?ncdK(mlCFi_
%"H()f1XgQ^&5Xd>H_#&\rYrhn=AX9!dC8[04dChMUQtg_Qfq&^6Rrmo.."kD/+l^)S)_mf0RnC2PI6Z;(I,oH]oU&hl-u`paV!R1
%V.GsRI'5G]i`'j"@Uf]$?ZeR]9D9nd2@/DU<d.?o&oeA),]t=bRILlJ#u/?[7[#Ya+NOcVF'M8Y/E`MI@J$'K]3mnkqA7udFu;^:
%%lTgSLW7>g@)A%u)R(#dh3sk('`[[a_8^)dfrf[SUeZT6(Y+s='K`l[<:mHJ!*[7k&H]RNqpOqb0ngdAc?:oWRJdXj;@#Q-.5Vsf
%4m8?l-;MOakQ>>"1.I2A<kEY1p,efZASB^U,5C1aUGd/kJ*VBfC,_\a$ZO.<\C&LLYFk]Wm6]d)h*f)DMT3AC`e)dhMm_7'<pS:c
%;b$Bnm'34%[%VkRla:eVd-0^.Obu=<'[AimZ2`6#h>5BLCHX:Ra2&6)BkI:rW(BruO2[4!*b9O+@l:L9`K.8@8)<W['sB^_VXdFc
%j8S5X4KOA1]Mr*5_2c[II*MC9kW$7Q)@nZ-DOZ`HHo+dh1pP>;k.Ki_'+]Y2l)*kSH?.bX`bTeERpN^i.AI0ikSZ'@qIZECZ+k39
%e+-[k44C17!h1tD-5:<QdVX>j:<RE_oaBu_=on8F,pB^.):m`>OiYm=,.@[I1_TIDAEHGVKZt"bqfSZ:^2EYU0\U-BQ*sh,#fJV@
%,J]QL_$.%4h<Q&9g`hmK&&<;ZgY_tRM>p@1ZVd]F^%875DNV/I^^a,+6#uU$R9d"9g%-ipbX&QM%(Y9#L]ceH/>8q,Cf@Z_924+K
%R05LHVE9O8)'k*7:*s?d[]*K\5pR1<i<sH1j41233I:Joe3/4Kh:&-#oZ0)7L#;&3NFnNZ^!<*W4`U39@2LQ(I?^p2RP"2*97FES
%CS#m\,JVd0Fi(!2`tBj<H_j`e$7&Q#@&i=s0l5N\bH(9;Vn1KjN_a\nea1<G^mnHbe%+j>Y1IN&NkA-=DhmX(jCQchQYNJu)mF86
%$L25fj3)s/\7541c;i4L@r^YP#8,E`G'`5#rEcr:]3t7UEYT[_:,<jh[$pB"k+nCo*$;(bLp9FX:A/ie;C?'_GPqKf(:sTIB\$Bo
%2m_\4qtFD:l*T0C1k0U:,JJ%ps&!D^p3eg0IA?0DR]W3M]N;g:):M+f8;OY/.+`cQZG,-V88\SjPM*,!^-D%V?SlPCgJ7**IYjFt
%-H8]tKO6DknLslZ!SihSNT\h,`]B-gW@k/6G3`<SQgiC4mlNF,!oGG;7^I[3o`PtHL.Il0hrldbC4[BfA]i<B)a-[fP\6G_ZsW.C
%P+B-BHHc/lhX!FkT&qINLslj=P>TibC'sl,L)53=>.';);#!T<^OfM'+B%*3N3NJ[_1V"KW+jf_5)t$;*&):U+!eVTUQN1o#!Ecj
%"N>OUf9r@[dm)GCird=;a(./=JV;<FP#.,&L<\juot)j\D@j".0(8!K9XsJ8XkdUBMs@QuNuYXAZJY(de6Cb$"i"*%6Sh4sZdf3/
%fkbcD>-\EpNK$SYTVnr3C"UcX2(-PWj60@Rn_7@%>.):s(Ob;=G`$.6>O(J5:gUC7]TGR3eO7VI>F='-;OpqgI>%GPUP:kig+/3,
%[Fp*I*"43V)fHY9OKTKl?@eg8c#rjtq<FWmA&JUsW_oZ<`6F$?[=u%h:3[k/o0N#T@k]`bSW@A/ahtJA(P0]l27h<H=J;=le.c+J
%cd)>cF1U9,MT1j?rS!Rh"_r"#eSru](d`98.DU\cqsEc["BYR$"E1q\f*V(_$9d=T@JTps(ORWF#n]+sB@Yagf=C9HY?$i<LV83J
%!IUBBnP6RL]_;56J1GJVm,a>Latp[/G@,5Db6cgJ!1gRr1=iSb"=O&)3AhcUFMj3V&7g_A6uZ.%P(MN@C>h0@k4GY\b&dTpheqDD
%jTK+Z]U!Y)S+;,Zq%J%HboDA4n#Un<#+R3)<GEMr__Nk&EYEA:r<&Yd,s$@)Q52$%i)V^_[EMna>R@qN3'*TN5?o\RWH,=NnLFo_
%AX6[\]@$*/V!S3iE\@U:GVg*ti,3BO*"*Qrq$j5Y5EJd']e@sY8[o$rN@.u$b@/>4q.oRa/)q%TnF5InRW2U%:MUQAQ&*tF("r$M
%c$&;&$ps>d='OiQluc!@`pq\rnS5HqJ_Z$:BgE(PUDfBH8)ts(Q=('AbNAVDj._r="9XKVh0s`+O.(s:%j)7tgnkMT9Eoku\IW8f
%B:Eo`.e'"q:\2]Xi`u8[,K4q#,.H%'ALfm\JW8.I=)2etJZ"/@LZ#TjFjL5u7f#uh.O/0Zf5<t"U]glf8DjsA(Qh,#;XV(r<i8t0
%?\r9n2nU,oA0&^5#2r%S9G)[a=r$^T[K]Ve-#0n,KEWA@3s)spN5<otX?CO4*1pT@$2o+#CQAi&*S-cq$NJpYr-8!0ENPB48!)$1
%"cg?sF$uF)CmbCV/<6Ed&3YoPlhDG.`k%%qN.W$aM@/sMRZ$5!/LH4l!n8IU>/fr00,mJ+mR0?_/hRbGD3JD.B?!:N^!:o2>PD;G
%-"_6_qFRitZh9-FQ\\OW2F%aq0a9Xs%R^c557%8Zoe>HM,n&!-B]gX".ZScTMZ9^0r\k8/-DIo:SSD%bZG5GCm-k`<OQ?@`Fql2=
%NKoP6=rW=nI0?C;EiW7?3CN"LUiN4dF=dSm[os0#I0NUV'3=^..G,dTLCqnEXC#W="r^W3ANQW/d*irFJ/K9W!QrD!JdX*C>O@/L
%.'$R/_@giSD4m:3P=<S\4\'F&'N2I^M"Q<YBY[T`jqrf-VChQLUNQk1(S.sTYMJAo-'J@=:t8PpYe)AjUQAJuQ)oWN^$`;340apD
%^^`kt!a-O8dQY6UFL.7d#jKBl>4%5[^HWCPlh&JT4_Z1d<X6\Th75q#VNX0HU2;o,dQ?-:J*D*nHX[)]cqe*eb(d)C6j2&h(suNH
%PZaAI&st65!3pV,JSX0Sitc,"?$,BN0YWVjM=&:/BTh`^Vj36&OG9(N0;,`-nIm<[%7%Vn6QL\*e>!X68=J9EO[fC@TRt$"hCAe;
%=R7=XjHD9eXn"0&__=-hVOq9rH:*W3_!$Ta_%-qn"</*S+e;$G:Gb#`B.KaI.k*A+eY6\M/<rCrlpJN49H<PM4"4,A6bDP>b/77)
%7hX4*?puE'N8])-*^(EYUn:SgX(IeK2fZ3mc[;6-Y3UJ*+65oB_-U*Cb+uQM,]j;:+eBr))<!$rIh"@&6Hj'9C1NEV)mW%>D3V&W
%GWI8f63KMMqF6qBFo5^TbQ=3SnUm?Z1,C&[BSCHZKBb[MmD*XIpgL8_`]#Z/HJ,1C$mTVWC4esod/"1eabN$o;XN#",POurP?RHR
%F5*J8s-9fAhClZhD_<M\e9E*OOTh-\,"?bjM:)"Tb#m88,UTN#6;p3[C6X_:$k'A'(iE\[B/Hr>3%-r!&:5,'Gag/X'b(XB)+MJB
%0hL@OQ9rI]j>AFHmRDS^.4SRd[>SnbgAECCPGmrLBO?-d2suVhQD-=]<Y$RBrPYP$H:GH8YKEeKm^TL7m8uflN)t2mgR4It-c]9^
%_/+;Wh=Kf!EI!&W>qL?.m:Z7TMnOnXCUrJnR5O$P^[!EIlWpR#P2H;Kpp.4\pFlG'1Gf'-3&C0uab-"L\X*i"3S)WniIB5Pbee]'
%E1=XuLE6<c3(H2=f&4H@,P^eZDW]RL9g4`n.O&!\Da&T=LC]I/fWQ6$Sq"XRO4WmQjh-%bhSroHfrs]h[T1@T5I+WT^6H*6iib65
%Cu0,3?Qb=9lrWC_rT&BP"X,N9Uf=l!o^#r^^"p9R3'Ye3Ph%`nH:HaG?KRdLf&]6tl/<iEXHA4lUTKTrMj"N]_t0H^at;1>1e%eH
%;7@X3)?je<\+@&:DVNnfF<g6<Iedp[5<sdlN4I$Df,'$e:TrYs+T/_*RD3iGZO^Y34h5g4r/Q/^J_9Fs_8ia0d"`Fhn:gR$!Zuf4
%i1'HE!:I;ti/<B[qr&@LK_OR-Sqg3+@5/MMD:.Rm4)T;Fdjt4e(qfTrD&dr<f>Q/$1U)tEqR1;^WT.?c#IJ2SauY9<d>lY?&@0QU
%Eu+c*1>B3?O#`1Bs*2cV:BdG37irF<BDd'j[5#lfOLPOgh6nQ2E52C4[!ORX]p>TC:]mWpq4"Da,6]u]gH@A(;@hbXE@U-rUn>Up
%[1&ZKA?p&$!E:Raa`9d*N39H?CjbYE?!sr"1d6Ea"Ijg4PX@O"B;6l@1;%JT57K!/R_l)EcSg7iE@B(fJSF)3$DP-X=ALkZ6Wq2K
%,6hS]^?,UfR.YBd8jad0c+Y#X^;Z%e9+*AX&`\&-L,'WkFcA+G\f$gpU0r^)Od-AeC=4i!!HUtq)Z-u9Yg)YL%d34J-<O$AN5Dnk
%$tYEc@Y-1S)(^YJ%7mhE!/',G'ms7(L$<2?S;PGn`oo.qUo#&pD.KA2!("65,flqlRaREt!602Wkjr4lfUPYTUIRp3?!]!SRS\,i
%WH63/H.],u-RQL,R(W<\I2Yd9[UJGU?Et<7*?Zt3WM#n4qOMZ=g/;db+X3j-U,66_V3XID;4`^db&J4kX8\"u8I_<!X7_t(_Hl9A
%/%K)PYsUKJ_oJGA0mKg$J2rR(nQQ=;-tB_hnmR&j(rQ-FA\:gekR+WrFl,Kk<XjZOM%Q[*>]*)m:!(fN2&jg2<P)B=n+0&%=1%3N
%_M9R@iI!/]"OdBZ\JDgn:C=$1NQq^-PZ)XtUhlio_q,p$\]6)JW4=ahRn[F\fC_qBHM-la<t2=Qfu"kGHTqmHHul2(?@j40oT-3I
%;tYBTpkIphU<m^UeAJ,F63(-UV)+_&:ILN'E8^gj4'X-?)hsFALn??u</-\U5RFk<4$,%1WWY'LUY3@&^%_2-Hj(;Ym)8-D'B?7\
%2@'V!=64Jcc(Q<LE!*?A%62JP[78,RNBWRZ[Ga'b0k5P?^?5NOkQD?%#KcjO_"=G8<L"OD=*NU7.<VsCFnDa3EOu:h\p@3_6B*46
%N5DR385d%%&!6/bjS#]I1R1qSd4@]hHEQ%@SpT:!n#%8kZJbnGM2/eWhe[m2#;"-lo]a^:i^.%ZCWq4t,/llD^1'*%q*amHF>_j4
%4].tjke;nubHPAW>ZR]EWZ"?IP(B=.7,8b1B^k]O9&M;cXAcNEj1.hc3&BP<m\j8^,_c^b[>oUs3/,UHpB^RSI!A$I4V)0D%PPi.
%e]]"\_e"3=#d^=`A=>1F++IBp4+6g5eU+q'dWiF>P[A?Ieur+,)`'-?1Q-<M$<8b6H"=\Hg9;[%XM<V>^1Y/^g&:\VDnXsWe'`ub
%kKFRfI&LbMin*2OU@r8KolKikqV#DZZejB_QSEs!\i\B,=>.;^bH8\<oek2_/l\H+0,LtJ-^T70m8i(0LU:0P?(p^G]>^tGo&fhG
%`E^*egW=:SGHVdRgCJY-UA="0s0_R]'Y5`"BJ7[F>C/co$i9#T_oLP(+o>kjY:ADOVtII`d\lc'::@l5>b(2Hju+_+cjf#:kmN<E
%il.foR]ijFhQC,EYI]E<qOU)7o&Xkr9Qn1QYJ#1$ar>puG7'rq5<%QMj);p(b4\MXanbc]GJ*RP_$BM]X7W&(pZpU$H)#0rc5!M+
%ZdlJ=XRUNYs(_)I_Kt1_lVbRf4am=ljhn.LEnS(E:Xt/YMqoo?2:7^Qg9*X9Z;UZ!ZBDE9^3Hs5?MN0rm2eLkL'5`(YJ.Y)TGr7N
%c):5>U\pq%n8*#cRFXSdX&?Oa\M/'knhsX\?6MUujl4J/)rM]aimUgnX/o8.b8s>4fm>Wd[-6[goUsKDGdfcH?J&S2Ge10D>$+,)
%\Ga6mpm`+gT,6)8<'IDIk79e^G+U^*JY_K&dt]n7+7)r'Y^rm%T"gl+Qc&rR;q]^BVh]W<AT-sUBkH=P)nWBFMpJI>L'$1Ek7>!q
%p<1>Ed[Ks<G.OrrnI(6o?[-A_4+/&Kn69bgq=BS7^%gUXR:tgVg"L3&l`8?J2M2T/Hi&(]FotkBQba4sKgQu(c]/R[2]9i.aVW8?
%]>5V>@G:2;YN=P2n`rO3@X7,U$]=-7o@Jcc_<fq.\c"koTQkH]rO2^me&itYP;hBiS8j:t[k$o+cH*kl]_OIp?RgLf4Y'LHg<6N5
%p"@MdiSl9e*^9Tjku"8pG3BoqX7,-CGG";fMY!)Rc5k#B^'/H^FBdG9Kbn[?Dk*Wd[c=KnSoc(8:0r*jrPZ[BX)LC#`nU3GD!Dj\
%d!c!GUMmfKb[0RAem9&ud`6K_Xb4#7CS`5VOf+*Fq54$L5$q1LWfnq\K.ii5=.LDm'2kU2lK.GGmd)6.lXk"-[JH^VGHm@VBko*b
%p%_+MfD%n2*3ji\Y$[WEgmTm$fgjX5$bP(i\6`Sc]PB92F1bAdKt7c+X8WrlHT5BB]\;Sreai%$*.>#_`ol;gX7dmgpk-hNV8[L7
%Bj0;-ItsSSSEs5k5hJ2CMtu1Qf1G"6W!_DD4*gpsB1(;C9lmLfq/d->o*;\R;UKfo00J.iK!jW+dX\Lk7;8N1dCd0"s+\Xe/D5?U
%aEfEjIq_'jJ*g;%q-)fQ1O!m4p(=[:ZOet?g/r1*dS#Xfk_Is@`RPWHm*k"-]s)i07-AsfilRJqj)&+BOgsrDm?X"#d)4/,';Mp`
%q<T]Uq_,p0oBJ1,HFDUci]YR-SU@@r?Y`;M9Y,q(!P8XMRP2(Vr:O<q>$BZ+F,HoGJ+V5hf`J`R&`#i:mqp93qfWlmT%LN^T]`oY
%&dIPApE;M'(07n+(EgK9&$7tYeNW&S^Uu+RDr'38osLng(/V`X!I:pH3)AE*c>pt='/TQP+eq^58:A0W??sbm9\lXclDpNqUdjU/
%pQ1nPD&nc0;Z-bJcTWpp0Aep6iRcXAr-ET]b1S.2na3*pk5]i4aKmZ+p'J<=&#i?:*u-'ddO+nE3af_.Dmbq`Q(k]CmiI9,jD+dF
%<-%Kg1(QU^F_tdZm;qg`I/]MLO;d!NU\_RU%3$E3q9G\tFfCR7"-ahoY!J7X::)qRi<B.XjMeUarA?icr;qFqaG&G(OuNhE:..%"
%OR+,gs'u3qc/dj(l&"Vc+_T]IQ44t'pi,^1Nl&e]Gg)SqGdFZYE_c<S.E!8E>tY,iV8tdW3+3BPbP+e=n]/p.4%7^Nmq1eQfcVL:
%K#TnJ8.YJ?qs%!HM%I_=M9sjEh#!LFq'<*^c;tu\834sFl_\Un4o3<f-1<0cKrcFPEln9tUWDJ3poFp@>V8<&:4,a/'aG-6KaTr;
%7QrFc%(kb2l$]UsnR$"1`VIH`iD6cTh,3tEMgH_dB!rqn%O<oP]XX1$Q=6:nA4C3==YF5Xl3\#n#akZ@S/NY)>eD:acpp=%89HZV
%Xq=J'c`'K><P`u\qI1u]BrJcPT9(%AEQ%T8P6[VqF"LX2nF'G8&9ahM+CmdJDIst*,<QsQa<Lb?0BhU\%lZ`\!>Jb-MED0?&1gXh
%V=dF?LbNK>_KH[^LD)>:!6U^j;%rV:mc;Vf"1fq`5OhOb1V(k4NTT@AT[,9894.DLXd!FhB!4&kI)V3PajMCfYDUrtV[m-A(94"Q
%ei1b'h]?i=X-c"MpOF,6BL!k(@&e@VE15j<Z(VpdQf_Xo'D5a[raVmZ,OV7[g2m5;P<$*keN8(agtDLh=%UQ,q737iEI[r^F8Hs4
%\2oIiZbS\oPuh/VCi/E0W>Y_Zq8)t6n=/=n.ss7tM^Q\nHVn-JS6_:B^F]4W2msDFnDn0,%='1W`K/<Y6E=kbJ3/bi\6CI@dJ"X-
%``j+J>\Yn[*IZ/jfTs=\YhoDS0?*:bR(</7Hn!anNI<6F*;B%L%f>GTd%PJpg%JH[5eWc&(5CW!Q[*1a7p.-Aq[\-PT2R`%(&BS4
%:t",-E.s\V0-.j1O2[[&r<.G65L1FSIs@DHSGgrKQFlj2P>JMj-(gRn)0MP'#'b%SA;f2LW>FTbR"ARQMnZ1XT&fTPn%bBID&OKf
%e-1GA68+.9osnp(%CX,c^1L`$Lj:MUTu&efrSlu4X:LfeE"/QsAb`Xbh/#56GMRsQo+h!*P]h6UGZANT=Kf9qgA1k5IeetfO'_2=
%l`Xr+iE`'<ompK%Al>]SN2NpTnc&AniTfII$4Qdt9J1ll=Wf]9PJ>sY!5IdV_@/?F$G%sao@NiFRIH,Bc"ehpH;2;VHAS@pp$M-o
%Bl2m?2J@o45(@nTYdDgAIF2]`]#3.OihPTG%P@.`bT@n-+6`=blEA,cHgbQfLTc`q@"^doEVe2kS\jN!NF)A)&%(.n[^OlBpY310
%27g:(]dItTGAq90h7e2PY3_^n?p1T+035i\5?cDdgqpKdf7#6bPrF&8%CPBYlcr17*^4ts\Z7eb_&"K][qmo,hek!J[i`9<.Qs>0
%1dQ5SJj6\GBn3?I.[A<AB<I=s@t!bBF(>1@E8g?0e\Z;@[%[@3\m[+\M<b2YQ`[+DbP'C<M/lakfm(g4Jo)KA8o/"e2oBjFDW`&K
%XZ1&7)e%AU[Z,9EU,uKq%.7Zq?^hjcC8Ye_0:"ePNOA;Y&8O$iDusO?@Cq:NT[2^p2TTK=VoGrALbnY&2#m!:S(i3Y.XWG4mC]G5
%.s6&50#>('`JZ)sZsmJ0+W$A9c'd`t(;E*`^ie5m1Mau0o%4b[g,`?]f<RmLg-'>,[`HUlf?U:RZd5s"@/-'Eleh9*k5lBA's'S1
%_"OO+i.S_%3XFb[)s>E5X&7&pM=;$,kTEk"mNjEc^".1&R<(L%Ao.5]TD-[X^g(#2flJm_;-qU5k0,j[&4GKVK6+q(">L&>iVM8d
%f8kjEp$.=Fp#^*LGPLgg13[iG:thGqr'^/.Us`9Q(p78</Jkl\lomiGjG9L[XBmsua"A,a+-q!=psF*Gm,?uK`=$'V^?.O]/A@XD
%T*n@7@:!3a?Gj'f+08d23ke5MeHE:+eCdrKC0rZC(YSpMAZ`<:kOgcp]%s%F?'sm")8!Lb3m(YSfqlb+:M.!$&"@@/JO&+u0_=/Q
%Mi3kcPJ]O;oG5jE-l(WV4\_B7#cb;:qPj;Lj"Q]V:[+qNl@'.Qec.a]NG8nIJLdoV=0!9uc1_@ZUd]=E<pA(F^&.F.U424@VJe%L
%m!s!,]Aa%:$iB='iDnj]MqA)>7krB8k4A;j#I(5C*PkFQIo@mgd@-@)-D.a!EDFA5A7;8$f_2Z"\#m&ID:],s@kj+<+3s@XkEfeS
%qV[J>9AJ=K24e_FPL^@RGl,a+bMBd4-Fs)?NLfamHqQ??`PC'ef%Wi8%jgjoNde"@@bnP$Q8d[th8_7Q\mO2f:;@Y?r%?U6g4-,k
%82s4U7Bp2aL;Sd$^"?AOb4B8S&[&L^6?02M)^dZ2*\ilLXE\a;g#5e(1#B$fV*aV!AZ;n_H*m8.);3<GbLa:8Pha`kbjd[Gp.B,>
%Xth2_b7>\rYFPHUlV=L/V?Bu<2E(4'Vej(T/KJ(*Vc>3\`VtcR['j,lX"QT5Rp549hQOX$VTJn<\^A5,LI5/d?QZJd\N&h&NBamZ
%p57Oub0p./X09%+(#p<`S?T'ki\2h6\)26&DS?VW0JWf-C<K]Xk:`"M^8\DJCVNs+qV:<L(XGaQ#hJ,[c+\p$q<hJ$^Am!R?T3`N
%5bhW"cX3l=3KSLJ//W=RbJfC'2Y_pY7:"T(gRV,I2J5Z=46u9hT=`(#Ain0O/P:T8\og<"?I%SNe_=!\ie>dpNBU3u-GO)7=6\,e
%Y>n<+Y-3_PcY%[14'\6[P07e#GCi:c=Z>*#;fk8hU;2"Xo[c:%0@=![$V]UFgq7.)=&6Y7gAIDo-[>g,nJBgCCX62qeP.Je,PY5@
%Nd:h3BCW\6r3a(tZ^,bE;/22;2[kBLolE\h8^pQI9"U(BZIOK.Qa64fF&,*UP8laB/&=?\430:#(Ob9b])h?g33bAn#3N_"dOnVp
%((AQl-]_ma7sIV;2T99hXT%,p60lBo5&'(7rC,r^f$tRRU\q9S^1VG6X7]3H0/h5/Zh]4,I(*El#GTH'=EsQ1rC_i1TS#GiCNTLe
%o/+D]XGmH2oP"it`mMrW`EHK>-5*K6gR?ab[9DlhgstlFj6%BEg=d4j_A;LEq%pT1kMm/t6[lK;:s0k:GIti5rGNEb5[F,9Ob`df
%Fn9jQr4r:7T$C$A[,E!A`@[0i>=Z<LSR0".5CO$trDsq4NeiN+ZO6CkIW&a%c$<]1XIa;\lp"VQ*e%Ef_W-Ej%/'E;m)PYed!I3'
%[-Q36[9@9N2:1Bs*liJ37!.F3r`49OiI9_mk'?.')p1cBd^-L%q02&=]NVI%>Zh`KY!a_0eWt%`R!*>;^:i=C3LcQlT'J$a.I_BB
%9nBs[G?4[-a)rO&BO:*&q7!r>0OL(CW9ETQKITDX0\Q@&d+\UHYc4a2o_^V2_GLE8q6[Z54;:1uf]'0N&bd-$n`*M]r=W0-EUT\Y
%Hl992QtM@m%@Md-_B(8';]Y4h[CtAci]><.jjQ\8NGau-&'f4@;YC.FM0<]tJT>N#H1SUFZ/<4noZ!RX$<r4b&![CT@Gc=6^341;
%0(/)-4U=g"j%lhD]Z1uWX.N^N3D'eu1k"mu)2/"dCJ_nbXkZdu3XnM5aCF]+H>!6EKAt0L"/?jHj+mG2P(8hL&e<dIPI"Qtn-[L!
%Q^7SXD6`i?C-ValF9C<oVr(*^V6X3cJY3?\eAkBP$^oQX50(M"KkK`D6'5H6JAHU_d,R`>D6rp!o9/*b<%@!n(#=4_OKU6uPKgT*
%h_nk[](n&Ta&-/kAd=Kq0;!PlGc0U/F.S[9M^N,oS82DkccF)rdOEE>la^9\r3@!W3MjjGQd9uKWPn9E$$6htpC5c_T6nAkGI&FO
%%XZTA:NInekt/r[pNlf(/l5k=NJ'<Sc!O43@C<I;:0V4H799PiN*lB.CF@*!e`HAUik(b/c<8rB-6H<!2IVRAME9]0,j`5SYd*b1
%k2PfFiCWP#4(O'e):maK:`'+d<U[<j[CEm>Fge[92QIdhhd3u#fsC<'!VqZPHN1la+`)<p+'Hd'V=ccRRd[C;2p1j,Q/A('YL:Ga
%iBi#2q[dRp^![QreW8R*/A6*WoB*$WUb%)^kJbX"8[7k$Da/X(nQn<[%se^*YVd'\0PK\7ZdnZ4lY"14eTVOhjVB\kgjd[:ou%']
%nX(mGLP;f%b#35k<]H),!LeK4nR6-L-h$++hCgc%k!gQYTo>qEO(rO%T57W'N5U.>pAQ-#M6.,CFN\(7H^@0/fPREtHtHs-qsnka
%f6B#k;#2sA8]MkAZ1rA%6;p>ihA80K]XkekF_%\gI=2UTpa'?4_L`Gqj/$pUp>8")n50YcgFEe!V78q4oSqt(/Ssc*\?GuM(1B:q
%F>h:f\"L.\O'@\#f,GeQ\X042(u#f1oWt02-WfC^N\[&>qQbC<fk3<2*Au/"8/dO*l,8h6^?fu$?7)?,21g-0UU!FSmPS#af<n@4
%>?9U&,\nB92m+sKeP90tDEo4tWp/.c;9J"?3H8&*%l;k:.?bO*,qRNpjA3`&&uZ6dVq)r:hu15pX]oYmr*6>9@t240Z0hLGPXgk\
%kh>O[$mRgWeS<,g?J>%hP.gf6?Y'fkpM?U%#qD(SeDmh9&=Yt?@@cNYbA)Z8m/Hl8P2UmIpk(f1Rj#A,d4G`TYn4KnrqBcOa"1#H
%V+"j-r7qQ]#VaJuQNFnX0#GKhHghFbjHHa;_3;'T6Dh$I_;`uRCm:>HeIL0RNkVH#fE2^RAB``aIqb;jrcn;BM9`Nuo030#"RZ!I
%XbRH3?uLPSD_L(u=+L7j&1t5Tq=$u!<;qV*O8f,oM7nV.rM\appmP@ZgMZL"rn%Z6UV@,ZMh,^2HNf:.?!2_]ms9u:a=H6]NjZie
%YIp19ZEiRL.Q+t(lqIb,gPtZ.X]gQ=&i@>.;J<KXIN*?3<`W`gGNCEm1$hHQmD3J68cc<H6TDqdL@>?g":7"f@bZ:G7p`%Gl\rj/
%E>JQ%8;u'EWD'tXq"<9fpDEIEUP]5C%XT6tg[4ta+^07H`J7E.QEPd;46[WZ'!0oFi:K^&d\-Wgf_Sq+1N[Gr&t;]YkQ)dS^ttqW
%Hl"9Jf]G?dg0VHKi9R=4l`pII0$U\f921mf[&cV#29ZIq>SCYUQDKnE;uAm#c#@h#TGa'`+qE"WA\1Y,/J6%2ZW%0$BXoDS)V!_d
%c#MR@j-VI9orLT)4]>i'::%6jg'll]_@JGT5Vn<-+cp;miE2N:**LVAVTIb6<jP*0+HU,jl`uhIXC5<;"):u*3eY!#312OO*pKnO
%%Q.LT8lS;>3"Ta:0GB0bqM119cYK!2E4Be#,_M=A=k@b<hS6*q-3HU3VJ1#m0eJs*J8h&?!j66j87WoJ"i4hmC)PZuC_V%.qW>;2
%eoE=aJW;0EVEkWAVZWOSb5ra;U0X-1L21C,0I_;I-IjXO1pXQ*$P'Zb[:KG0<ca(IgU^f#A5h(`%kSa1_1D*`(]pcY[0;aM*!W0p
%('okc:H=L:l\#:I(3H)Sf'4q-d/q%Cb8"Nk>_>o43:Io-`B7$j"H[AY/&kt#Y%RjoQ>L[s!KG3?h5kHqHruDG$]sNA\[A`Q[)/^m
%gZ2bk1dt48Ftc4I$(hb74=8#+rTHY9"?=c/b@_XRal+di9N\97ap9_X!1K.9MH_5L^]\Zd2?[D8dG7LE2Z#MQ%%(7N>mgJF0bi$$
%cf`GYj;g*&"`:*8"15pmfP&B;@7a?D(//I(2F7hdj^C7'3j9Mdkeskd7hGeF5TDsMMMj0M!X;[_?rFcc7$.P*:2N`eX?"!L@9K&1
%>lU#m;?/*L$,Y;u6OcCT!Q,L7*T*J:[Pj6U)b-NVqq-)fmY&RAk`4Hi+O\367,brem$b@5a5@(.gP)3`#RR>)=%WOPn21ViOgnk=
%lRidt#pa*/!:CN2[i@3Vg_A>D*1%U8!Z2KrFLf(i>p*p;,8Qe$LL?gCQ'fAK:_oG0/&[2.>!rVu6^Kn[(3)eM"5=MFdC'qE*LK9N
%$9joIkmEgF:pI\cC/ER`bW$Ef+S&7_'"]3.P@1T]3`6Y/e.Sm8PW.\f!#8u/6Dg6V?>`CMBJA1M>acrXYY7Qg8(7[Xo9q"MW9tL3
%hj]Xf%hs+qL@9DL).Iq[PJQikTYG;N4m)j0"]S0`Al8pl*D;2*%CUj<$ht!L=II[[,jr+q'aA%h4RKEA/RT>hXUUc=5Zu+9[>g[%
%FV#%HD!>bag9A[m==+"N@Kj4m=As#NJZsZIBF)lL=NF8GiIo!Uk&Y;M<&N;ZdBgdRbME@6_@_>-9p;Y9EPip:Y[NX=9VqoRU+cV@
%M%-[Y@@Q!iK0f*HTIhaJCO.U5#T)b[>YW\d%KRJMX*mYiN8QTBI,Ib'DNdbV%gW:kf"BtCdUE#oAm6\_E(n=R"(`MT9se^J(H.,l
%GHqBf+$Ln\6jtg2::?6JS]u`)`[6Ks?m"keKT0XQnmOI<S6)!s[K)bTJf\AP!:,@aKA`t>_&![<@Kp[Ghn2sY#0Ri1d:SOS-O0:X
%-"`GsBoV-VF482UEoD2PrUfdM[Iosn"5[)Xrl`U2c"Gn)L4OrNN#)=M`G2/CFG8Rq%-#DML^';#`/pb1SF0!sNOY3KM@&\:#5d&[
%Kk^eGJqiKok3lAn!TYlUk7dq$OMkOmND5?4[1%2TJVIm3iRS&>i3.bu%c8fn4PBe<4Sm170ApejE@T0B*h6VAOm-):YR#ph7[nrA
%e$TL:RaJXBTV4WN&qfICFP?4+AN1f5BcodZ]0\_(5R&VQOH+l#"[`^c:5U2%PNa.rU6o)H!-:j%mD;B<@I>?Dm0/A?BJk;RLY;\-
%#6U1rA=^:5f`>kT!"I*K@KaOR$F0]eV.e[^Y_S%!eh@:9C`*6-%bT@@*!@F$A70iM3esE8@H$enZTDl72;0Csjh[mL*aIrGE#m/R
%[e.,gP9"SX"fokoR0NdC!\Ac^F+ljrY!Im^D8FW97?tMOO2to3Ne;5'-6iPGTqT$u.i^*d?'r?d-8?)ZBE4o6bfFpob$l\"F]!9*
%b_/H.43@[\!5VknNOb_m#Qu0%>m[tl@WT%+%!VbUQHgfdh'L;]5gs1k3+_UskuH@gfNuen7lE>C-=AEV5@sEm#(CM68pT7nHicZ@
%%*_7cJN7@.&(l'L::8KS@AYF!7U/6_NY\8+H"/q)1nUI)(`CfcYVi@]+YF:\n[O.p>ti:(7Pg]obJjmULdk)>2[PaX$J7q7"+`\l
%@6u0K`s#h6conaY;d'm(bPc?"pQs-%24N9U0!jT^4rV4.##drHpdDn"/.`U!dDnN58./g4C9HfSCWtag,no4*M!KR]_?\)2DNp..
%#%/WsK6d?%q1@GAGRb,<d@&Gfo4OgP8<b:lb:N$LD:2W$X0;qefEQn8b+M^O%bKeST0DVqmBWo3qGB.%!8A2,*!KYSJdm\CUetMr
%-N4QI//Ec0(h2Du$iiS"$-?T\%O3MqOJG9p\\j(Sn>ld%N-P`:fe,T6qWpKMNc#,5N497+gS&(YY%,Ng/F\l8k^Xaj=CDR[VBh[P
%(E7oBZfaTI/J)Sl$&!K>(;MH)3#m<;;]tCd7(0%I5mK#t;/5B)"![HSi&1n'F\;e8'**k<JUu6:+.MLb#;qMojYD.cVI=O*L^=ek
%=>LH,_C-/%Xpq+"!+"Os"41WecG;KH'0<=OUY/oO=>DL;UB/Z9Xcm=f(C,QUFudo8R2E<h]!d:`L_3OYMru+9"u(t;I/pjWX:%pu
%],8Y%?82kI.]S<H0,p.SKfW&_"=?VCTN">amNi@l0Oe.GnKebL7EHORN6,3DY;SX^JO&'l<2/.cPX[JR%5]781a:fp5eY(3?sFpK
%HNOPL3X`:q>dnt1"Os7->%5NN<ra8"lj=kK^0k)((ul(`4DKmA/tNYG>XJQa#Rk/VW'?+cQ*"OeV+NU4W+see"O(m\+e_Rs;]7?,
%()TG!\(^mp(p5A@*\)rA'-aM9!s=KnBhqom1ll`OMuX]+E1R.C6^&L'BTcO$MfT'uaPa+V_/3I#lRk$sTG7HLBnPW#>.-.BkX]5_
%a;>j`\WR;(OCeO6M(JmRa9I09K7Uj5M2UO.!bNC>6qL_q-+tgai&K.!E](BE%*()SAi3'[WNHXq1ID8f%(^M3(:[)^J4,Cu_kr,U
%D6k0H*BD#,fRaculO&ALBN.QL?(EI@l#s9tjL?VGjDlGF!0jg"L5/uH:mb5AR^t=-/?0;m7NFKN&_#,7>;0>sHNIH\@,brg"jiqD
%0S$\ZCd=o(@ESq2T\2`743Q__B%rOS.0+3W!i*k*X36[q&6Y>OfFC-S6_J$_9ULpG"mA\MOb*T_OA0$Ob`N8DCf\Fd'B/5"fDp"?
%=9`P;(Utk*"d#?N+Nu_I(L1/PfEb4[f*N.$n6uM)Lad5-__/fF)$em,ThEcK\0hR6>TjGs>EbqZj]YOlg1#a:clk`=lH3'Ebin&*
%=M%NTlbjKIY_Xn:`m3K[&>SJU".J21!:0iuI-Dj%1'=32878qK&T.el)W7%ba:2O'd&7WE#P=.XTU.]+mt1\J*U-37d`sUR^1L4=
%gYqb$,:t49$"F$er&=t5,)Y8je<Ot&Iaj&<#R\jBQ]NY"Ju$pC*1RtAJAKm$:;(3WNWA(AjI07n*KpSnEtQ=t/9[u8O`dX66"Z7P
%=XTCmL>/O^0G"rqJ5b]_IA!hn"WhQ6g>#EB*Yp""V=>\M"q`AR@_<mm]5B]>h,1F%&ZCO,@_93neHn<aiX7RS'HG`g6V_GT2MBiH
%qCOdRY&s%0lhSE2MiFDe22)_*g0D>m"pbQJG\cLO)>>s?ADqA3Ja=6OQjjcgiT:/>E3b2T)NM=uX'o]=17Q'6:hJHjLk)^>?5CL)
%[[^Nj`LL`S#NsVIbr2-7*s_7lJGKYhghT2/8CsZE_NcX)(pXAB&)^E"/-EC6DA1[d0f.XEaLWg[IS40d+33aQ+Z#KmNEN:l/km],
%!TBO%mI4hZ_[P%4WdA.\Gj('Q3j[$BW/9VeSiMjp&i:G]>TOBHK^/\W=TPgGM';);U^B3gd1pI<V#ad6cSM1s%+iuspt!5GY$_WG
%$P^(1&hh/oF\Wn$W%`NOC<OgJHs+,M8uEsros_Uus-qM*AO)*B,:=1O`8DeO%@n_2OQU;Il`_73F.>8g/"6o_:VL$uc9$S67/t\I
%(*C<u%K&bL7s#SnL6G3gjmD?XSifmedTG9F78YT(cnc\QnAB4XeKD4]n5\82;h2qR(,qC.PbhEc*Rj/kk-0)$-4Y,LmSO*=Yj3QZ
%D'[JP]K:eaN0tQ+?kK'-,2NCR0Z8*Dh5S1t@"!D>`q/7iqi+d]b$M+F+3s3t#F(t!Q'I!%^X9!YB@m=VNk8W0X(#P.hPQ.nOjj4O
%Gj8F\jQnkALn>Y#jVU'E8j:1J.Dt@Ho]/2P3-)s[<k=]T.$qM;3p\a6is.qTrmM+X[rY;p"rHB&g[MSn+lTRmF+M5G&Iq=3cXCia
%"bKOH]4q_iY2pH)g!)'B(o]"3_)T*]!q&'Sh6agRG2GlE?@m/cJ<G^j"*e>#NV0-`JjK)"i-(rml4N[fZ[)b:mr/peHKb^CO3L?H
%4NO@h>WbR,%(d$`>-=X-&=be5:1B@o>QMm-#J^t.e)\Fc0^ufQ*]>-f1U=1*oqO8p"W.jaD#n1&7>tnu+\WbS*uCePp.n7_%Gah7
%paoCp_77!:EFK\AJYq,[WkF.\N*t*Qr)*Nd1ifVu?ns6#!LakG<#Z)rP=Vo?!`<C/iR$6K7TR'5&GCg,(H8A35t,1EJB7=!:=Q@I
%?Rd`H<$)@b=iae16Ek,1hJ^57bB4*roqc`>-IRf'(N6.^I6cC.]$c3"+n4VA'dp)cYgPlU`LoAR2$!'#&KH"LSY<=+UGU,t,!\^e
%U]J\Yi!6MZB-ArG<Bh"33NRQX3t"MlnrkGM1@9fPjd;o)KJneIZFJ"T`hG^JVj'%M9U+[#ioZH%;gF?d"Bm"J&2le)GG_FbPj$?-
%(^\;PLD9h^)PSg>7$))#.Su/+T*pjW%ad0jP#Y%@*=fp_c0EXu/F@&V2XJ1Z4BrgDQudt:&`]Vq,Je6]q.$Q.j^,EN#sM7t!Se6C
%.%$0,o!NB)6Z*+(3k)m*86M_tmpKhFeI2fp%85hQ?k@B\_C<*rLrh3:CW\6Emlr"X&92CeY8D61Ju,ou3/ku.Z.Oja&k6;7gQWb;
%60)1Pk"p&1?PBt(#itec/k4!Kds7\@,1L&cNXQM8Re3Ct>F3C(\4I!&STX%Z&K>;U.B`HNo>+]=-S>prT]s_g@T3oM-1:@BVM*V<
%c_WHQ?e#EnOl6iX[r$sqpus69l3`!N,#]7U5qI:lh`o)hHd(!;]l,(29ejo>P_N/)rClbXUa,8j0`.8!%R11G9(k%E^L*n)88/I<
%T..>l3mS9EZC`T"7^aTUMFI4pAKD<r\U$%.)52Fh.bW,feIY!;rJWFs&k`^"*m[`m&mUj"bB"GuMd^h$0,UKL,9Q]+HmJTWJK9jp
%.?^;@bRALtKC!4Tf,ToB.'fHWkYP>+dlP,l9_X\fO(%`<_G*O4B_(M&ML38c@U(\c)4-[AfqK`SC)FZA"^GY("&S"_Mb<\!L&cf.
%CaJtH`Uhkep9Vb*&)s=bb^RR4?)B4f5JmjQ)S!7B_Rds?ehD<e&<t;$7hdkI/[@[-PXg_h^(G=Po;LVfOs[MhCtYi)0-NjVT/@V!
%/+W:#rj0Ts@#J#8o:OE!ZNOE'qQkq.kmW]!.at"mlCLT.T_Kg'%>9WaF2aF:B7Nod>[A)scO'JbBZ;:G$7<1\b]*\:4l%D.;@mG)
%j&R=LJ+b[@5Um[OUrJ;YB9WIXDTMJmA3X!,+IZ!X("ppC@h"ud9dm<>&SRSQ@>EO^9FalCnn:Jc1[]*S/;YMHR>EN#@Fa^W,Qq).
%OAI.u)1es0f<EJJAt,/+Z4'']rQOEM0P,M61YCJ@^PE]JIV*QB$FUa4mU4dR(F-9J#TUK[,A7@HT5iVDlRkg#1M/6XP%?EEH&+"*
%29@VAr/BT"=,UWSUPZf?gdSQA0koI0FTc7O1N%Oh2m#c'`]YtX)^[dZSg;(+UEi(]Jg=aU(e(1*b^RPpc`^;;ZCc-k>B5@Rlt6b\
%K+_$Q6)Hk^a?(S%R`"c1O9JO5L$?o/n8FQ`B-n!C+^pW-B9WQc]MPCg-Z$7r'aA+?Z\cLfdns"u\^bDg"(XgKN(qHRKigOE-#,id
%PF&OJ#"s_O&tKIJ>9M=XBEL%1$0fX*2D@]gf;$I=#"f&W7anXP]YPGPS0EA!iNTD",F7V2@YTpiWY`aPk^GDup!O;^W9:bQVYSQ8
%0(LWHggS$9fV>Td7e2LHn1NS[M'O>kYGb%iZBl#"06Snsfg)CSY?loSd0@5IAFsG0_phMqp_6</L@JH#jh!$gfeBb86&]LR11(=l
%bMuZFSP=:FdZ%g,pT`[X\buaG9qM&r0`g"HZYq=RBUFPfAB"-BFG(S[\!/EXV2i&]kD4IM(>e]uSfA"D.A-_.YX8M_;d3MJZS]lV
%E;1IgBDj0GUO8Y!gpiZUM8=29`I9]?eI*%uN56GZ-Js@Sdk0fWlGSgf(r1D?#^04pjZu%n=bbp`=VGEcrCe'>-;5*qL99?X#D*l&
%\Zin4"]sQ=J9>V:('fas#nrM2*56H9LR11j(nlt_dg9p"Rs9=t(kou'j%?#^DX6?FOYq$<do6TG[%#"oY/p0#\1TV;V1T(l#e:4e
%bSEHra9iV\,Cu$hE05Xdp6dP1Rcm]^MlpG7OTW)8ki&!AAfKON0e,@pTPnWSX'7RheBo'Gb$(c-@"<F9>Cj'5!sW(iGD0J+e/mgl
%I9M!UO4549Pqf5egpH]=ZoGk.oK]G)!u@2;EnkX`4`F>pk]^#Jd.Js9\<gpM>^h:PYF-ZW>BY]Z%?*"sC+_;E@pf_,9It%Knm")+
%LIoo$0MJAS)i1:r@q<t%Aq#i>NP;VA@l,C')uVF0]3EPY7^($T@qjq9"S3"X8jYO?7US7`TTX^u0T<-U.j#s8SRB#NK7u>Q!=,Cq
%mlGNCfbmkY/?`RV,+dm/VUb""E%"Y=Pe5M>_aL1Wj^PZY7#%+F%)d`o,54R;ljX'WjUIH4i;dqT9^n<Ka8ng<(%Xc/gUmZ=e&9L(
%]UmEV+u(gq=PVAi,n:1g+,R=&=UP8T<ne=DJmmI<9H)l@\Zj'T>?t4fMJ<P:EFPh7dE2n4mus3+b_Y:Z*Y`!a%mjtQ;ETP"D0]Y?
%X>GLGFdT_@et`S>&1q8j9J]?Xdg1k;^e?]tM^BiP0m(8W>sXcA5sDJ4Y*)_f)sg(?).06_kW4c]71p?>IpV^hRan(kh-"?r-n,]g
%VDL<$8?.?'[2=-@5^5Se)a1i!Q<IMneu5aXE@GH)qIIWpEs$?mhLLWsl!^HdZpbR!JfN43hEW'-BYAs9F&+5D?soX'jR7l'<!Kpk
%1(@#)_#_b,<+Ob*CcO>@%@LY!Ut.7[$/doVNr`hGU<(qBLog4cc0]"[-YS$WQOHE;lom3BJo1h8;eF[4*b9fE<($_$[S2%48W.9(
%4,-FU$o8k8DS%[q;5?Q'd#r+(13!qXVCmUrA6Io8Yq<d]R?@kAPF!%cOuEi_CoN8];C0f@^r&$tat'ba&SB/_)jrmI5i%\7";t_S
%qIO+RafJIogd8_(q5ZQJMoo"=-.s$lVJJP1`Ze6',dPLb73GZHd=b`[jUsM8SI7]&?E</W11`t.m,0#NQbe:oAW\+ZJ;,"V`^Fr`
%Ke59e<!kBP=_C_IA<*o4N.IF$J*sYgN]prudKh[7M(CE^EU*gc]LqlTK,ZR-?DM>BI4eHu78A&SmhZ[p&7g9++fZ-IC3g0PcRMGp
%*G".k@:qJ)1YW!E/2NA[6"W2GQHYJ*n-iuc/NCQ`,'#8O_32@X1)1m^7_kF2#XhFkP2?dh1Y=+](]\:n7hTVBS0^!_q@?4-+P[G>
%nO5SB"q3sD.Mj5S$AoFKAI^t6!XYT4=VCgg$G6G?;E[<YjWs[q/HD=)1:(6Brr]%CF_R570459T,mKTC%fdD+LI#2OSK3@*V(W0H
%k\*6)[A[&o5e&Gi3lo_`#h0j);8ijIcLUI9_L5PV6:]L-euOno0u1f&L*J"A'`e'o9!mddZTq5.F_-8e\-XXe)+n]m0L<Zuel]U^
%E=5\o'>f`X;]>U#=V7mG1j40[<$;S+nCNY#/AZo$Xq@dQ!gK(:\4Rp/n19/&EK?(o:>$*7-?DD9.P'lD_N@)6JFTV"<c5`p!cB&/
%AR5cMdg4c'U`bVIBjSB\[hfg@!AL?,<bM\g_Q=/<dNFWk+fJ`]ct6+V^YXs$0jdinh-oDb'Y#=&<$(DiU<H&.FGBnm7ZLI3!OsZ]
%&leH'QtD3<A^qk)erMHRPS-7j*Y]\/G.,6B*F/Y6jWObAU?[e;V9$GO-n6udAP"*KbM(&0>$:dE?mVOYq4t5m'#GYn<_sE?Pn6K=
%Z:s6l#Km/O249%o9npqh["qo:ahXZ09`S`*-j+6JaT>:,=0+&VfQ=D#!J4tb'X\;-`o!oPkcuT;ln?8R6n'Q]QZ0//BXIa=loWDA
%X_=O4PTZ]&E`c3^5W5A0#?\<YZqs'g&8mc]5T&130FD88r#T.N-:'lmd+`$E0H_AH;l/O#8da&o>j%C1Q')20-48ME#aZh@&BM'"
%-m]#uA@i@T[iE)bg"7.]fa5<nRKWT'F'Y4DrI/pa6U&S<+5lE3`<;poK7_ltd9qURJ*?lF6<_Ko"N87eP9Q>qQ6b[Pq#o*&=GS@2
%=!YeLq?'NGJlE'HXMhX#THG+YhkU<V(*il&QsM*Eb(9bQnW$ffKsss@J=r'F\6VI\i"@b<Q/t'dSdRDCp9ScUiiWYTLMp8RS)UgW
%kU?_e$G^f5&8r`-Ou3l4Kd_m&>\XI^[!8Pnm4</A!RT>-(tHVB-ubhkgB)'HlUc[^Whmn')cu'C/E-?sG\GXh2A<p=5b)p:Y=-gC
%!>0@k>@uXo7$tJ$Lt\,P-QE/j_M:Ab9GA`]R`OR;fpSHP/Wgo<%X/HqkW#:e/0@lR!rsVsE#k'tKHoF3'4,B/F>I<`-KkM@8D4CR
%hk=J8&@G9O&FdC`&JpdVaqnsQoFG6%AldB;D-DFf,QSC8=*\:Le"r3t8ou7q5!#iWVIf=FH>'71;`'4KrfmqIQ\a`9#2'lGFj1JM
%-N%`b^bfAj"^aV`"Xj.k3T:bQAi$QT,X;t/\Df]d;Na;c?"1aP%tOY`H/4f8;!4*)UEp4geA.Ldc2<V&AW;55KigWlTKBRX5VTDZ
%OAca0_8&Yh1tJ3)$jP;'LIoSt]&dI*mIml=GaZe:Y+nLjI4,&=>`mt,B#$!hb1a#L?]]dY3Z53V").;rRZC==C"S0g6EoLW=Q[@"
%Op(o=Vk^X&JtCK'"2U@65YaSG!ET%M<r!j>$jP8&JQqdtDDtE.DqA,k<#neQ+VCgC7YDD=Ka.mtm>&3"5Y\RoRJ]]/ct/'cre5(d
%$8AChTJR4Z-(slG(*6;l'`goNU+KbQIoDF%(;dpsolFOk@/lIA"V6WdhtJ&mm-cPrE&SDq@"g_@^D6jd9=oMOmJq&IRA:PulC)fs
%P[Xc?Ma4q1022;)!+gueV$48sJC7Y(H9`?L"=T+_1dJ?A]GuJ0PCr/`_&1?t!ut@r(<+mj@K_F>#65tG/aEl`B%@D9g*+fe1)XCI
%7UTUnRg?'QXT&hG<X2GB="=S*?%l8`PX-b6OFg"*2SLOhhH:*m#M$kGgPt=Ob.]XX25d/a^/BdfP8SHd%O>T4!<?jsHW()WUqol3
%#T,."8uSQ`7t@m)JC6c[P(:td=EZqI=9L%OLphi%/;>22:'Ch(lf5mY.)T8l7IV7\TnUO_Y'p2inFtNYpb+B\-q/[N8</'<Uf*)c
%,^:S/USS5-L_o+sV$O:/<Y.#iMSPnE:1UF?JUqHm]V&D0M?(V\BuN[V(b??ILmK=40mh##@\j>1.[!]H8d$!MV::?&,%.*M8%A7b
%.0>0,_HW1g#k4jOXA0lG&[70J[\uro<$FRb_!gk`.hNVqXAH*",!c+B?c3LV+omutJtQe%GfZo'$F$HrJ4X^W*iVM7@-gkB4&F'2
%oM=qX*\=9`l;gnEAM;QQZZ7"c2W-`dH2qSufu>N0k[6/("-H,\17[O=a`_h4[*KU7;O?&UBPacUJbKt5Y'GO:jr_K.DV0ZfAiKh:
%hQn60ZTFh.[;/B;-DcP(^kSV+c2;J'k]17Q&UU`a-<!.]@VK2TQ/)JC#9Diq>K.tQ<=(P#IT`\6KEgi5X1AR\/P@F<;iRV=R<UYO
%J.]HKJ1q@<6<"3paPM^b^k73Unqa`*0QuDKmAt69Kn'_^[1&(`neZ_2ZqH9X)q`gFF\HuTP2Vhp=HaLa@"L5C"cT?\;ETT`ji_Aj
%6=N&gmj,1!,eJ<7S_X='_9mAUe7JbAk'XEd?'f,PYqF^6N7\;XRsE(79\5P_=CM%fQ4c%E`%6M!k9YA%b^^VX?LMM1kL-ILDuKSF
%I-tM%Y(ZPU3cRoX7ZD?rDcGI(RG[&Eg]2NTNAo$u;=KV9n1HVOeDZ/jnYo-L=iMd/-;[3=31>l5KbZMnR*a8tA;uR"5m2i=L[r[n
%k1]otn=:CI^?lL2mZ>#M6Zure!-;bV8rtsFim-*W(oueOZ\g)Y=fu<@&#Xq'7$&:%*0(YuZKkQ(Q3dWGbMj(H>))+N_f!OmFqX7I
%@EUR6fed,[BO6LG`="Zg)3Cs[bXoV5A.*F',+KrXM!drnN5r&_JMA9N]`Aka6rR,u6;VOB1)!?43<=ofSUK9^"qt]#/,Rt*^?(%j
%eL:*a)Mkua7J@+-T&1R=9SjZ<OO>kC&p0\CJLJ6qRd5qs36rA$C8OCY'm(JF.7)QW.L:B/Q%Aej3kOVn;b`)ulQUS,16!rP76Q1-
%F:CZAi&`/$*u&"30Ls`ias'E4KK:MQh]sYJQkCnX(iMZsNR;fZFPt[VX?f^E_6LS_/utBb>\?KY(n;s.+j_@qg*9GLP<tqaB9!"l
%V8tda#e4ZkQ_`SPZ>J9NlW@D#JGi61JO;;/CT9Xj^K*q108,g>)^B#VK]<@k].U"'LH!l\ZihU@+cb`X"\H%n"F5[pD$+)MZ6_WM
%+9\/"8kB)NV;?j,XTMR2qAC,C_j`2(Z1*VSW!SD[Zda.7^X9:"&rM!_';4TiRm4L+LRY,mb_#rI7%t+#i5RUPFd!]lVS`IX)P2?A
%m-][<ZIF<QR-%I>`2NPj?a,4s7FNr#3apNpMY6Z[*YWD.NU]EKIY])--ou9tj*ed-i-:ta*o]O4%QdO5g`FY6,(6C#P3C.!nU?W8
%`i\_lVU7_Z-g@>@Sl=XA',BX]Z9,'V!e/1[VpL?3=]5S26]jo8bHM/3R\F,Y$?YdW<FN*R3(O>`\?8c,SHQIhP[-VbA&CshQ+&O7
%0l%si%G6rJfRP2c3FE&e1cjQD,sKau9r9t65>c#.L,)!@@_/D4BAos?0"<Y!Q:PkI`@j*h<o?:LCNt>6Kl`p)Wo5,J+m^P$Jjg>d
%pR#h.=r*)obb8L$(eT"^s)d\oL1?F_6AuZdk:Kn_V91W)NF5d';p.dW(2?3;lq"B#,4MOR(,hlu*d4HcW1VDFZMZ;enk+T.UVe(p
%kmQE-?>_%i.mc4m6L\`X(;9q$L^t>e&8":!#+S4TSB5LjM>ZUJAt6ujKonJrM0%C[!(>!2/[:!A&?[o(ZIH_5Ui%NAc[e@gDS1T8
%iu$9"E._;RNCRsO_eOEq"EP?h_2H%(V20S[,u*&0dD_:$J`t]g.T6<XX@^R#9)r=.&LCHYf>`DN\gY<)_!jmP\l/#j0F%+<qSd=\
%N&P:X&WPBtf\LFeK.JaPnSmE*8'8Y5\Ii\pEH)U_ZnDS2``8*T,6=-Am)J!-ac7U'`i?]9BCP<P*A#<)e,e02nE>B;GW9)9?nC&%
%*AGIM%I-CfS4H2dj92Irq:!C.30U+q,'g$uk;4>!]9MB##MoO0@gbq<B\6HPQhf^]%N8Ge4t]Na=FB.3=E"aY%Ob<4A77L29-4B'
%j8h)<qn`mG2=SlCQ73?;nQk$#8l/&T(oTF;J\_rl@MOcc[4FtJ(g<;2c6A8Ni@\0JPum:6Ee>^SEQ-o03,2rHQPh%YRP=VP)c1np
%PA:>l?q(=eCBr<ZfUL@q_^"3[]QBJ()2ItVB33AD?\nn_)?C40j$=a@=Wf1C#2*fdb[^^?,t;>De\J7;q+:^.m@-p7V8<h%Wd$T&
%L,ljHI#1k7doeh6"DXC(FJiXB#d,YiMbLu(!pFkf!r!A/0-+"r1Gs?4&.?..8p(IPZNs5;[NONU:Mf)WN0s[)Kc2O'/lj%/Af'$t
%;ONU%9t0XVO=8=biAF)a22_A_5H_pKE4c[Y"S)ajoO3Q5]GlP0gt<^`bo3'/IOOCC)Uh(sHSF-D`C05BVHC<&dobUd"fA//ZTU`*
%$ZoV#2b<-\U^XLZ*#[>i>X@D1_(@ZO)N2rF98E\,blZE.-s-Z=P?;u:)=sb'<)WmYEY=)BQ8+$9,6\MAhUU`%%H/)Rg_5AUK?g^r
%U-kXW'<kjO"VD)V5V0cg;3jH)$j$l`oY@KCRg/?=($Xf3^PSig#h290M%D'a-j6%PE),n?$k0d'F\=>>hO1(Mg8&Z0Ua!aY>n(Wb
%6AY'@ll_V),oVuDX?JN`,!-WA_>;#bD1ij0@mq2ciR[&YaD_6c3aB>q6#8Pfdi:@(6*qpn+jR;U5"8UEiaa=Zg7T=L3P#LJ9V*Ph
%44.[2g!]Z]@Q;_HZJ<<f(;*N!@W+pT,9X/OB&``rD27fcjVm*!l*,8V<g)+bRIR7:Qs.SnP+/$s&Gu^pOTa,MmMhN%6i)B!ejFUB
%13LRQqT%/pY\YW"q\2"/0:o\@>TIKW/4'_],,W#(M$BD[Xuqec*&,F7@*n\9C%VutJB(,<LmY!s-+:RXA:E<o8B"h/6JObeMAPEW
%5^Zc+^:_F".B-2Xn%c9QD)%01AZ"*Q4sJ)C2@mujLsutOfe<amZ=-)0,#Z>(69,nn/0[tZ+sNt;=@K$?S;D,CSY^eakjH@iYhSU2
%2@b:8RB"&&+VfSDE>%uB#bM#e]+q$>_r@>LQ&,lK"WeP"!*7-uY?JA+<2_.(G9Cl-fFVUs+"*hAAAE:49\c:D7LRhuULFro:2It,
%MH-44'"7\u.],#.bL!7oNNcO-eUG74=1P>ISqr2#p0U3%@<i[Fm2'%O4=[*%gV4KFM@#=0V&?OHL[`sc#*JNWfmC27c'%*JnD/Wo
%_g*-82Pu@W^Mod?UB_/d*dQreNqbGE*4D\u]:)3iWIb&^F2]^Up\mpmX'%$B@R0uo>hg^Abh0HN,NH)hdI\K?J(Lca>pq*PU.d<f
%UbB]E:Zfb+U$Z0(q.*+(%AnGpZ<#>-BMtU%#T@NJ51\Y`AunqR!jEilFq.anCZAo*Zj3t:0nPhd%$d'k!Qu<]E;s+8;V-"alaAM(
%U6$.Z44>N.J[iRZ^lVBF6^70.#>S)TPkKVj:i)a:78\/*rG^b>-aNX/7)\hS,<)TKr#IT5PW%U.'Y&U\W9GbiF+A&6=MA5GnOU:+
%U"cj^^.[[P,YsOeJ*cj`AYIuqq!W!nI9Dj?_\p1+nYEs)DsTdt,3Yst+eHaP9qYQR@uH(%YEN[.REWMfM,fb#W1\&o=)+^<3C?(t
%bEe\Z%Yrdh9Tu"tHP#rQP(Fo?L-(5V<-T^K;^NV'M"$q3'(VkmQ+'/1c7K#+d/&#IFMB4`1sX^@'+![F%KH,c\Sj"9+7-h!]CiV?
%TATV^BNpEt,5DN!SFjtYZ5PaF-tL[s"XNq#[mNt^86jmpf_:_pgHaUYjR_*g\)C1EIp#f>3J?FQY74,pS`.6(d:p'4SSD>?2,ilR
%!UCT7A>(p0DhD6Z-kfQ&-W#H%Yo%,<K#F7mq5"4K%jZ1&#ZSKf0#gq9/4$N'a+CNtf)k0o?/Je^"QF!D9KF.s$1ObpC19X"-6s4f
%*=cu;QL>n;'#\0f>X,r_ef^sK`-fBqb_dKO?=6JoAnc94Ek9Y9EphFoWgk:#e.$%s^qkcJ<R;tbMngcS?/N1o"MF/8`IF3PHqJ_F
%In#U8$fgF'e3,Pdk]Kf_'_\AF'D2Mf;(I*O)DoR$D\64'Xe=Qg^53b6*D;9f<*P!)j.]CSB7'.ul4+1[N`4N?^iRC!Ghpo-s"(eY
%'_TKGS4%dlL8HtWJ`'F<XcGAH6.U%Bdg;M2"?rUaJ(lC9PS.6jl$f"nNt-AUF6eS8-hiN_W/-e"F;#9*Ith'$+mJ"3="W?18;b0L
%]tP9&bYJD$<NsRiV:s<k)+im[h^F[@D].I3h-<1h"fKcZZQPqb()o\\i;9a,1qLBP:H^u;&%mTXNVJVlkpNF?r=a,.DV'>*EL]75
%m,j9LgNNV6)mJ''%nCh*UuY-Z#A%`t;Fkrp,ruem0HJj*TW(,E>l=/.+$MTn[m&#+]D&G8r3nWGHi;o]/pp<9512'%]t`l/?ZtTO
%]C8O)jO&8Oeul^co_Ceen_q/qf0?KghtTrhLSP,@>PR1r32i1@W*t[A*PsEL=:eZ3_H@?5,2(@2n=CuYK:3,r%GngIs6r*bIG?eG
%'%SC)Tj>Hbnjon:gc,o]U,h*i%+8/?GV-Z6+(HDHoo*O[R(6PO,VQI_gS6!EmQF%59\Cbc1r#l1>Zm[e[cEJ3&5t4N(o>pWN\hp8
%4C(9sZEe8A8Hj*n1jQ'O;^&MH^@sSYr#$!*Ltd5IHb(:On2Xd0n**=&L5a;t6,b^-4/_sp))!JuqjJU"k9e?PLsJ6Wn1?eLT5VF@
%1)=1#j%4!/$Q<G3%5[^V*S-N5`-#C\namW>U#fZ\7Sd'&L50l*8L)#DQaB?ESGWNrBZ::RC7Yqpd+]iI8(>/sa:rs]FrZOP3"uuf
%=s=AbLe#$481-]Y.hJlR[l'rko'4F,DE/F$1G+<1q6Idn4tUrb5L7"hcHd0\INj;)#/PD(%/DsCrm*KA2SsQT;pIAJ\*8)0Idac5
%riEXA^NYYjONiCWMtDMRhN(pJ#[4rSrJl\o)0!IRX7hLNNM<nTNb_pi37J:I%g#V6poM1gljRi9c"o#4KN="5'&;Uo]";tE4ds_b
%2n>HO1<><4#[<A$5=VD5!SJ49@%s?I6t7pg95YL@ka8Esnc3Vn;IL]emBektomGXQOKX<=p[pFSj<t1XBs^2ghA/k?s!!Hd@,h%s
%d:N8NSd&=^g.J`9F3i^`Wt*Ji72TNEipM$?OKfBhr;$b_NPj\c*tWS1;P0&(A_8-GL[r$4m7M\s7U3&$`;(<O50N.%0G\./5i@8:
%7do4keB(tuT;<4FF&h*%<B[)*j'&(hN!<qU\3(.+7_XnoY(BWGG+HJ_:V0@\,"Xqh$d3Vu^.SK#\C<+[M_)caUnF(gmet=j!mBCf
%#-LDoKne0HFo`SIXbc5K`nDGDmaOf7';)\3f.pEmF14o^BYI$JqR">3FFWI?;.gH0#ou?"bH0!PbG2X3^Fk61I!05;HlI1%ji)'<
%L!#Fq3S?_FDt@3L.JrO$@%2;Umm'2l')9J\N4]5aY1DF#W6P.l,jUDo*n!I#6'9Ru,:D]sP,[ZJ'>n/(NkV(TjR=%=f4]ZB*0a0q
%h2ABUClGNGhF>an0Z_\PknJ"ZStj$oE2N$jT>b]M3iK=5F5iH[^b3gRbUm_LAenH_3T1d0h+l(4?4:L=`$aLm1YVB,*:cO+Uf%tf
%HP-"3b8VDMic"ICZ=\H5qo1?Wr$Z["ZIu$FVAfc>@Ps'Z]n\WD4^<!(bVNMrFdL?,K_ieV[;Y1W#Nm3OpDsq`#4>aUIU>@8'$4+6
%AGF=OfCchiZ#77ar3`X?)7t6i+7=A(6YAGAT7RdAjA,oNYWW<^_+Y0Mc4m0KZ^]c*Nl-o"-2]g;,)"J?[J[jhF(m0'ciCmRTR/e>
%qnp=pZI`doasb9l@"TpRA4S^'K%X#?(9;cp*UZD2N9J)_>RM-p,8MjN=?7d8FVKiTqfr?^,P"P,ZaM,Dk]Q^)kPddH4PMNEF?Ef$
%e+j_RTYLUr^._?h'@>0uj7_u<``nd<2s<ZjiFSPQVdi[W;&W:O17HVtqj?jJn6VM%p6<F,fm'GVc/kh.2L\LtkWn](@i:5!\8CJ^
%!NNdAT5*FNQ^8f'_D`89^Mq9g`>O,-`NjjI7PBt=NW$mm[\D=*]PV["pX,3,Wo^3u8&"?$50Q-]Xu`5Ka&+l>/L^C-Eg@!g/r6OM
%OI+MODZ!VfB0)g:Jp&Z4S=H4MVEj:ZFT9DUZmU$GI->\fXrea3_ThC*m6UL:H.]hD)qBF62MK>pBCkd,qh9`4nIcL%S=BB!$S>I4
%)bZPr:*LYg_rC:c._It;;tITL?LdiqC^.(*Y8cXpl@h/U,)i=>[ph7Eq*&bu,8\Llpi/2FHkK`Wa7*8i)lCjY;4*jl%n:gPpU\Gl
%nf`JXmVgPLpih3@@JU)S#?>%C@l9rUq_eUICQ-lR9kIYjq=4ME_,+>jeS#_:e<?6q%;jH4Job0<*iNokYY$DS#9lgaRKFUUCO4N7
%4&`@IJf\?jEata[$;mmMpFn5!I.aS^`%O'Ro\I+%j%0@OW9'WYRSak&^H]`H&4S^Q*4Sti$<#'rNq"Yb+-!620P?J#4Hs5lB8t="
%jbuCJ^)0kc0(&*u!e!,Vel>Y[5<L^57hDC7jT8a7Zgh2biDTFthS=/Q'odauj2(>0cOL(]UPtX.]n,AG:`P`[jlmTr9SCkA:t]e#
%d$?qn=4`43%>>#r/a:9iHp,f*UbY?Y[N`IaC@9h?$E6FK^Kbd>@*Q(Kb'3ZBi3Q-j$`+Er?%cn2H_=]r"A0mfEWcU>M2gZ19N6D=
%nB2P1k?Xp^hV3:045$`7jmj2$a8$t)U=)QD^OYuCNCOZ=paKlj3r2_/^OU/>\/0\@k'[&G0;'F^[,#$gfK`ZS]mpQao*3r?C*1>h
%6#X<HL&\(fE8gHu<3IK!ipZmBPM[5V^&OHYglu^qDXY#p1ZI^Vp`6uIAs=TQkoB*+6FHRB3MncNOn?T=6.]b7L[u%&cj\qkb4T3.
%?kCX]2g3E\iHr.R<*RsK"OH8uek_A55k^%Ape2<jQX0I7caoEi!O"7V*!P!2r(&SZ6FqTU9p%[S;Q2fd*_$JFK5T<N?DXImT!0/W
%0C:BIX7#rh47f_Vjn:18S->qdYNn.iPBLiZpD#^aJnpYom:5,j:=QJHiA=G!2o<,qmD9+a+:+1&_Gn!@'qF(%FIBg_3Wk@mRiM`5
%<-<IC-Fd+XY+NiDAo8FkmqHbD86b0]Mc_'<gn["E<K)Nn-UjjKqsRJG#p`I\kZfPaQoc'=o-i'>F3EkP>Is88o&PYh[7?ZJ>8m5]
%#@D2p!@gVtWW-9o)!Y6/i5BQN)^WG9%IOhDfXXN9guKDlC,Pi@GZ*L$DA)j_QBd@/379T#+/A&;4_R@UPYJa&>J'"b?dI(?gRYLW
%";P_3*ek09`hs&]Z:$X(V<+L;B@<,&l/MeDfN8;M\+I[0ir(^M34QqRHaKWD:t/ijLp5O(`u(X=AEZm^:"$ir]o-qFE,!,)i0nWA
%"0ClC&'kio4tI_kQXO!bJ_UA<X:^7M^Zl(^.UIJLTAs1>9"]=q$904_CgpjncXG<O&(@)<_&9a-k$/69X(:9!"m'I&:BVDJeEDhs
%9*`38oGs_J4qMuI9u(nl,S4tade=$"gBB7CeCisBaa7NKXVRK025mYdd^;aaO`?Y[-I!Eb&Qp/MQ+I?qd>.(aN(@DgY_J;6#UKqr
%)r&QeigN+]boj5J!@KiJ??Lq/0kkba@T&AE7jVFCZJI;RUs=(I_6FeRhFDH??'/ZsO/BuBX!k$n!_W@B5on5A*hZKOQhdHgf1Ffu
%#5Y9""Zs1R+7$Nfh:;Qr:6cS;[EJ9ITW=.i+G8@(!@D[mLC/m:A1&0U.:XRkbcR080l'/pKP<COS@'k<SW3__k]@c3M51H]nqJWZ
%_?nlU%4uPa!+W&[C?$qmf%I&cgG6O:Nb6!dL!D'a(jtSS&^Y9G@B^R%g-uP"NBEN+CR^_14Aq+.a<6H',Rr/C0d1QBmD%XrC.TIQ
%gIT+D76<?e^rY#]2cN91n+f)5!EW`:)cQl]1II'l3P-UTW/.i'=U6nd<(@CKMsOA1L3o+Z3DBuulG'*%moadI7*;&WSY(TE).5=:
%LIoT_!D%M5dU?#k>(LliAKcYT=`+AiEgLs62=S&2d)T!Q=H@PE@H!1S"5o.O^DlhGOs[:oQ)[renl+kcOnJd/?fXW,'=u?hm(%3B
%ZQ*Z%h@#0O>EK8e#?oVb2/nRC![I+P[#\LF<l')tdSgo,cd2IN,Ofa$+,."5#V=bC'D[/E-SWQ%!V3J$5(]J\2Zij3%$k?,Ip?Ed
%c9)8(H"7-6N-12CRZ>bV<!51jRjEAb#9>_CWDBt^k)eO-g%[r(2u7KWm\K.[Ks"p)OrG!@C4eh96LM<UjF^TH%Z__+j<Rp[/e:b/
%`Y0>+N5>6Wp'NcuU'Vk9:brI6AAQ2.2&RrM-jQt%h?lf=:d6o.5)9'g&fF=IBd2@"'J?Lm"ft-S%$L!.CB,.b\*l]kYD<U"06(13
%WgMjnCh]H<P^S<#1+&Img'g`qQenR2UK"NB@#brQ#+1$N,q.So6OlF#RILk:5Dt-ZTcN:+ChRYqKVKoIWAU/37hjdqX<,i@n^eVU
%3bs6Z(.NS4PF'%-PZ$(1*QZZ3[sW'6E]dU[<oBUnXDr8nPt,V'R_]6=:F`%\)h\>#[i:mI_"uu!%8fN*hZF.Da@db*(5MM8b0k6n
%"%ND&X>)-`KfC'o''%4AP07%:M^(:>n]1m'P4q?*->BCgV&fin33Dah.d/##.SD/tjj-f&_(?'WHLk/TTJTYO,7nEPj%N/2Pu;[i
%6l[[Q*NGl#dNZG,\f:r"nS:X?CXoT;24+tOFIYql.!@;%Bqoj@mZfY4_+E:eX)p9N[Xd+/)m+)o%e[S)ISYA(6gK=5l;.rpWN,k2
%"?5cE+um?-\uo19qa6ZE'`:Mg%s"Cp@%6mWQ1B8'l[J6:A!J8q<&QCcVh^behuYcYfU80J^gW[/GJVfAFhn=?'*)Y4D24mQ?fhZh
%4dM%sORat-`_8,sR(l'.X">(.,HNPfS*[r[JPj9nYIG%IH&D[qjG,8\-cLCh*8gq?=e4'E$aCA5_qJFna9Wq#.g9[C,5"p.2Jb,u
%*33n!;nF[r0M[fYk2Mg_^#n&-$^d80^qcAc)4\!gJP2@m>V_pgaJPU.2!RoKe?tJ[*RZ\HAAbIeWkSb$orJ@<$'RXpg2t)1O@NtD
%d)\raT)e?[L2[cR/0/pJhKp2XFM+RF[;el0XIP%#?*_u2HWnH*I2*3g-LG+bnPAg&!H4boJM2^2j^IKU_B]6a/-WU!To^>qOo\B6
%7W/oe^5^`;:'QNe"Q"e/*]!8C=!YSgA8h%S$_+@#,CQh]/[Jd;YP#;a8Cp3CV"4gu)lI0tXKh3O%7[@c^s^K.Jo5.I01)gIC.00r
%L%Yt=&p3.\G&_%@<PNNbQW)<lhbPcmg'NSHU*on1'J)g;][B<8W.>t:iE<q0)H[1IMMOKP`4Y.6-<S!cqYbRE1'*GuQ#q_^84G9W
%Z8LqRW<l%;`iH'MUr*jPjb@$^4K&\N(fXugc'H1r$_r\(\e'*u#7eO?-;%%e&HSnR>lg.>V:rrlA"LDMb!Y5Q#/(CST0Q4,$Q'7#
%4SV$C[8k"`=9Qt*#`(>61bc4Q>@?XkciR-C_J$e*SX53AaPFr<jq/?(HisZ0hm48[;1XloLB,i-ouTHjiKXZrCH2n_<#9(G\Y+c"
%/6S(!<E0d,Q0c0*"(0q&$rOjW;+qtQSSrEa(SdsE+*k2PmZkja/psiROd1?rBF6\r)*!<Y:^,)\.dV'C%la2n&3'agN$oZ8H3k_R
%[UK]nc*TO%_,sT4OSqG40"_NlX]oJ/^FXFCr,rW8iYs\4_aH@&!;S5XX:I,N$8V:Pi3VXR0a<ab?/+%USCF<l5YrjlX%bU,b*R&O
%7nF&bSd"IsG%;dNY1kE@cO0.kEWcnbeXmdL7n=d/(k[7Qq!+gKJ8j*/)9-ksXEFbOP_DO_7?G8S/^KZ$PF-%i]G+C?>l,e4od!Eu
%!p<lWI*[8JN9$A#<d:&ogEMY+U'$5rR:<;GJThiS%=E&(.T%&b[]CTa'NZJ[d;459"K9csmrM6i"t8>QHkDc$>cm5dLUgBjJ:Y%>
%8TD@cPUN/8?q3*^Hr:M,MP6HLPh$C*VG.I]o_bCOgk^_JbZ5ZT'\Vf46D0Huqu5^GWO7u+KAD(bD,$f']kDU$f&S<1?VsQEIpZ(7
%.KbVAptA,ko0odXFbL<(e5a\8_Ba47MkVnPieoCnN]#5:,OqX8=2Gi1W6gqh$4*0F$?8>4,<<jTZunB;b+S;Y@%m*7E(8O"$Q4&#
%aoIX[e,ud7?(@UiY7ieIOeX]JgL$1ge/;TUr02QuRXgou2.d#5/oo20?qZ=>ahmKIiG!UL&bdb<rF=bs7JI#\_lI$kHF]K6!<<\\
%d<nJ/c&U?9!]rK6@6[^c+Tc!I&6#8]nY:XdR^=b"&@m66[)`/3.*c3:i!<]8XNh6#a'OPH.n1tIGYZU31Q04P6SU<GJrEcd=c+>a
%d6q0&0#InAI>#BmbeG/q^W1[C2*R;eJ=+n%E.huoVS_I";Ok)b$dhJbpf,:3(_g@FN_`8.5cD?Na]?<&DTO7TpraVdJFJ,.nCQr8
%j*CsgbC\bsJAen<#W^&^0IIm;OgVI-FDKg[GahVRNn!b7`cBuE,OujqVe)[ZV_-)g'$RY!l;OKRZYFAZ52"lpAS\@QPMrQg9.M+#
%W"9U]$U33:Y6aZJ;7r%T4(o*PcS8?$T&@oGKCtLN)$RfF'`\6#h)b`jM1buWL/h+O?]lTQ0;,S.)jaEn(ukOBSQ]F]0)u^M-(7UO
%<R46+=LX!e%p-K&A2FCW$Bd.I2KoGpJ2P.WE/FF<ZScl\7j>%M'dnjG)\@6=6_r(GGe;Edje2\B?/dbG1UVBj)YGrgF//VF5r76Q
%7YoR6"??&eHq3&jaW?:ji$M[k!S9h&6OU%K4#dQo1U9iuT/60!gj,C*5a9&;Fdo*QEJml?7g_1O7:@K'o>%EB0.U..e8Pmf2W2g4
%f.;SK.d;6nrPi;D)tm\Upe.pt@U^K4$"qP,h'&L\c3r:ML$r`351'[9d$Iim*l;FJ<.XEG*G@10V,HF6/dVY.2BRI[V`d;=[/#TK
%7VV^<.V*YNn6Rm^T_Fm;fW_Dm!(qVbggZr_EXVuZ'-tQn->=W.Tpglj%fUc(0log0[SuuI^mp#]/DFtB')B:2())sP<cG:pa;Y/P
%,$B"&>p-b2R6;q-[Y>eC6<Ks94Gpdl'VCKtWaLi;)KcK/'S+@3(8Jj:-^Cl8Eqr7FdR))qq=LDT@l=TY+TlSf"4^]8WU!!_L%\3:
%O%9B:3R>nl<OUQ\>Uj#0H+#OTSLD/fTEPlmSD"+I[9E24qK4dmMR@JWH?+#rOQ^FU@8R_5<`ih)LPZsN1CsbG_CFAelnsCPQF;#_
%?;f$PTse/.(/@nQM%s\/">>Ce;#*)EIXh'42:-\d<%Dc&-IbO*i,$l%O9`JVQHVLr;cd.3s!`S7;Lf(Umt)E58<fhG>i7^,6dg&p
%fj6]C8b6Z;q%t`VKiAcFI>^D_KTNCp/12jP]+"R0/Ru<5QfXGKQgX/J!WldPH-eZ1MXi?:'[!KD#C/Q[3]EPVRF:`mCO:'U/?-f?
%;,FFo5qg8uP+Q%MGBE!hA]f3S3r:pGC@H5&De1=o)Xto;LPi_Y\JME^,Y2?:^'+/*15I4JB8oKY=9S*`NXK.SAB\@i'la+f@W7!^
%pBW@UH3DN_Z:Nfp($s=;8/;70c9&F3O'\Bp+OUGq/">?o85,p:5WJ">"IMaPU>QNAI*F&FA@!mW_[?)l^etL*..+tQU*J#s*eI$a
%+i31^.S!`U"b\sC1ep]0>QggV=D.uD&fJgXQtLAoZO$ghR2aLUaT>pNcC>WQS<a4q1muo+,hJt#R,_Pue\cq\EcPq4M1QLrPq&ga
%S7GA;q.!q8jM,=F@*&#C;!P3B0Ird[+:mQF!W#T[)$H-M%af3WBefZ(Fp1j0'sOeK,DU3<d"KU;g>T0Z%dSi#/0\3R5g(oLj-Y4f
%r*kE39uT"'HDdY!PUV6)nf(qCY.TBVAE0aI_\"#THPX!VA.oVR1MS<I0ZU+hZc8sZ:rUP^!ao\=UG^seX*8H7-GRQ(KE>k=Xp#9B
%BM$NFfOQ._hOd(l*F^"1G+oXTC)1t36aSb9d2o!#=ob#.b3?OUD@M<dMY08Bq9n>t#3U/OGge-"B"&e46he_GK3_Rgr_u'0&^Muu
%@)hGCOh2IP;2_1oYn[>$.*I@8#o`Z`r8AgIJ/3[]3^CgbHB98b%O?R(XobgqH0O?PkG^=r55%-)9m"&LT#IHs2cLZfp7\848mfI;
%QaK]a#VG>FoeL[(Xc^_Y@r><fTgrE,K&pS`!$D,n$hm)"O:POSOO,;T]1-Fp]ET_%)>3H&NV`C5Wg)^D/Q50,6uE$E=<\pH_68VD
%C$aL^:'hAn4/=Vkj8Mda4R)i);=UA&?oEL]i4MVbc+,GZF5T`gGQDGXkBr)#(D+FT*b"(hCEtn/']-WKW.uuH;="kme.E7eHPeG.
%Wrk>Ur"+/<?Zgl9=cTFqWqp5QXI.^o$3=;e@bSbK,#9BT#<kW/LD+;O0.SBRpBF_uM^OcFp(WZ,>u502"d\sTDiM6<J?d9'D+6HN
%VBRk&REElF3)DC-!-65'CE0[e7HDV6$+U<WPKBA3NRkY$`>.0oQc"/Q#%Q&e.gJuASH?/<$F%m2K!,r7(n/BX&#7N#kBJ6#UoPS$
%;I()MdI&\7nC45N?do[Z8!dK;_43/t6h`biD`<N5"UeU3P$jf8h6B3d`;<?:YMYJO2,):bVV[+V"p"seKK1$_K9E;<^MD6Q5D+tG
%NnmaGSF?:5n-';3m7$Qr<I:noOT!`6,Kle/>>oLF`IN#Hq]^j`MN(fGS)EEFX2>gd2ll`Hf$`J@9"b:0aAMP\\kJPM=^[HjZ6BT[
%3ji#7f(U;kp-JFRlPt+768S(hS\F'1h:0Zi>gdJh%L(]7(-75(A'*CLDXF:!\pupZnL.=7F,PRX<[@UE0ki\iVt`S7+!Wa-`%=?*
%G>0<tR8VLgDcl"1SRC$?!PgKQgL4T8?33ljg!rNWWfAchmtCUK,Io6_Hs27TF<$ct0I_q(%4V&:bDNCN)VOT_2E[p]64\H,-5T,f
%G@dZt+A$pY.:9m^le$G07OsX>f>b<k1ESF:]L)(M.5I*QlI-q:AuLR*ZJq!'\[c^e$j,j&Z9Od0!bMOA;N_",j]Qu(djKj^qiWE!
%,u`lSO\??i_n%`r<F]%g,F+.Y7,bhM.:ONLekD4OQbG,@,*+NKrYlr@=hFP^EM7*2']`u_XFnQZo>'rU/*(5_3:>cfq7B&k=qEmL
%g]a5(dt;+P+[*/<*\JkpdEIWfm6E[GAS<D`f_80X;,'7dSp!k4+f.JM."(j7j2bc99#-7i_/VT\DEG.'E?44<dt)%WW\_WQW5Qdn
%?/pr6Pdo!"L#DG?;6lZsU2GKsYY+3S)!"5,_F5ma8,XLAM,tik-?i!ZRsi$sO!B]fp,6a>/rjc5[.@%_L/hK0FX/ch$^?GAb>QKo
%[kgOsEUT6Y)@(Qp3Ln<7R036Xl$+G2S$1H@,q8'%o:.ED(]L_Z4D/j<RHIkXE-'Do4Z0?iMfP@bdu-MK[I:f/i2aC@#<>uD_cs\m
%q6=t.^V,O'Q;Bb39m+OnT=Vb5!^!t$*r%9H^bIfB#EX#k!ujYj%?#$l:XI[s]`K!Oel%.?SS:9VmiBNA7)!k#cVk<q`_Cj?k2Y`S
%n4fqZ[+C7TL";6:DfmC(VCmFflNh_FM*ouF$A(jWh,0FNeB&Z0$0n)M(eFEs8UVFr$U_dTY'iAo)W-gAn?)Ne=))b!:5W@rr@3ZW
%/Tc33m[W[<\>=RcG)miZRjWb#M(ai%QTVkuZkR&$16XdL>L5qEbrq(RG08?8R[23d4NPYtjto9[S9MF97T7^0G,-U?C>m>BL7O-l
%hK(f+%+I-K2&A4l%6M$V]s5eUC!rhq'1<1/"uU]J@]uk'-.A>7'X<VL08\cWAk+6As.3++3*DACe2&u$<)t+bV0M=!)h86<=jh_5
%<d7UP1$"QP1S@&u9gE'sE$or:%Yn!]*sVq1kZtc3H:rfKI+=CsNfa9I".1_$A\lI[VN,DY=,n9OBOl+.ctqTQd]nRI/^P6qU">1;
%0l@\'VJH>Grs$BSG;Z`XB?!e_ACcZ<Qs$`C8+i3:Z-*$_Lj19H0X#X;`3`_-HQQH!=VBlK"[F\<Q'1GgK/'^-*tlmkl5fDOQpogk
%g'@/j>=YK!b24#;>Y#b]TGijMm+Io/W!Y+k2:E<*6];%\"C@l4,n5c.;4k]N"&,]P7ts@X3gLX_Me5g.Ua"jMJWn>`P`h"2,rXrm
%.H&9PQ&#Rmki*5FK1;Qc>4j9\eE;t[Z@`nk:r+Cl01@D(k1c*L+135/k99qSMPEfFiVb`^^AClsb<\_4QPl(r/4T8TJa-^nYu!q4
%3*"Ucgnl=D(m()a_B3Qj@qBR78/[MLp@83=%4X>bJ6^D2.W1\<'tP]r.S>U;EIOs[hr@Y1iQKYC%ckbu,W,_eEI^C6<ra*od/`/-
%;UTLVdO9*2fi?j#a`kTB?Lq8sjXWBJ@k9Y%X`E[C22tR;@h5K2g1S^*.5-nFCQi"-(6;fe=,)r"_=]*q==:)<N]dZ%!E&pn`'Z`Z
%:;Z9Eoq$R)2[L`5'Mh<>BOOL^as?!e6ETtrb8P6-jV&L\C3aQ^UFS=+K(G$VpI+RtQ`AN/l)+epnX#a2cns:iY&kLL-!<D[13^5B
%&Abk'(42\'F=7\l#J4\7]h"9[ZCKXd/#FT]6tREB,kB\U2K5L1M6nk9N0LW$Go"3W8qj(S4Pdoi[YMDp;IK)_F6^0l*sG/Xi2c[Y
%.2[MZR!Z,G_3DO#YH/s'4To\,Z"Gk_UR?jj%qB:eICE48@TG,NWZr00X$]Jk[<9;=9)=FA9/(c[<flM\3;]^[D/tBU>NM]).I57,
%]8g6tUgq,=#W`MM(3M8/GVi!J7;BAS[qf%'`8aE!%m;n6CamD0%s$n<Kg:oA3$jJ)?:l5^W:3HZj.Bn^,<0/"&d9/(<Sa6HW)&Mp
%`D/D2A#R?CEaBoT/Z:'m7#%,'Tat0:@S`jF;6)CQ^`.Mn_DW&Q$@.5Oh&Ll\&!q6UgCQj*.kmrYfNr]NeOWueWmu)^gQo!ORBq*4
%bYhLP3$k&0BD4a%Ct'Jok]d8Z\CL04#MufdfK,FTJATfUJuQ8)5uY+"L7hlG`qb`;OUguS2_JPC==f.430TQu`dpM^HcRsYRjQh6
%:*!miZ4Z/:#EDi>(6@_(F9+]QeejWGVmE<qa[[IXd(M0sPRU=S3FPJtqC2_+q.O;;^f4mZ\TC'Q`q-;+LW/`_R'QujUNqNDoDOlo
%S+b19Wf0[r=tF1)W,^Fu!9QToi(T9WTY;R,+V@N[.N=]s%6UY867hhL@W&<*U*kB01UFm4'0=qhB'DWj25K(:+QkZaN)<Y7WCr25
%?'uBRX+cSr6/AER=m5oD.Rj7u;o!3^!j7DpaKMS.!jLr6;Fu&2Cbe6U#K3YP0U)g$fJ;@[$Rk"O,F09NVA3M]GT*Y'O'snOSu0;D
%bZ#[l#E\0o#=iqohGk/V[+=rfA@3;6$->hk2abU7CkP@"AOg$tWB:nJfaHWN$%>1Mc._?\Y>W$<k=_^?a:08=">qP""mXY`94Vs=
%Snqk;Qhr&&4Bu[5I+RTY&QFs;50q#;(UM^Q3eJ"?<G+a\m]5(&Nt5n$FPF(-/qeL]lfcP_=pI^3XWaPgQc<pp$)B#W.-u=]EdK4Z
%V[6IOeAH'6I58E1$5[<n.3jG\`WS^Q'%BXi2Bf!;:&L5sZK0Eog![/iRj?CM&mPhRS1V(me6n!X%F*J%#,*=s!#Ksjh!$8[<3l&r
%E'HcM6K,H93o[&>WW7r(Pd[NaimNEh<k.Kri)?s`UBHK/06Rk(>4#:jFq"`DCY=R)0RZg224cN\&a,$/&.an'=G`27]jS1oD1$p,
%Y0@F_e=d;I#F"1U^c:AW;AUgBNJC)L<l@(X/a\(PI&\S)j8Abtf)u+72%N+cmUIWY2gLc]Z5?8dmdjs-Z5jF:P;4UO^\t:o1<[35
%,`a2]kKX5?GUl.t,/k4oU@?adH6b6e-$,2h'00JZ17>V%;Z)(#'^Zl6N^HPm,6tQf@cZfJ!R!1UoW4<$gStG$A[7TL9Q\7+/,^k[
%S+ZGJ:)cG\@]'kRV&2R_JCJDq;]AtcKJM>YejZYc)Yi_jE+VAb!hiYaC+RJW#FM9dMb?*^%DW\m8C(giFM`e3=QPi:UkF?t;V>bG
%J@!OoUnP-FU9"Ag7^6B595nm>_NN]0AO;`^IpY[2=iIZuc):_tI<3!X6-fup_Hl9Q$$mJpXUAe%E+\JOYkN!_L8nfg-+G8*V2A[O
%5.DLgT`UV%a>Yg'iKHS:-O]5I#2tef;]r-n)p<ts3qYXn%:1HB,@=IUX8%d.4fjockJMRM9R_L@HBXui#DKZLmH=7n6D:aaG50X@
%dQ417mh(r]ZB.YX99pe7H0<$#:Pi937pumkAF;g""T,oDjV0!Dhh9enS"*VBO\jrj]1c)NWec`1r;'6&Vpc!J8r;OI(<4=ug?As'
%d`':!M`=XnK#0j4b@;fg?blTHm2uNg\R6*tE>Ho_o,"'a9K1t<P_?B2WXD^(WJ+Ur9'mH0)[FJ:,PSG_e]\ee,)@u0&Y??^1_hej
%\.&M)S#U@S3u@;q--kld]19tf0J6L\5eBP:c#Ul?W8V=n\<MlfY<Ih*^`=KgS<_PET^F+*okF,!R2-6%:B"3TB$QE&4]fdh:tUKt
%\%rs#(%G2$/7K%9CC0+UCW!L"W07JJVK?>[CWn>DQ;ksYju,^D3)&k(=KDeim,B.hUm*2$W<OT7J>Eo)=0f-RKF5LT,TCH"e8TF:
%%2_up/8@0?64#bV`HObi9bh]%*4O7RSRr1BCf^(i=h*u!#-2"%"d'K3>tN\nM,GNY\WH;1Ft0FFR.6>c`Z!kY0kla4*;D30/mp`=
%%N%;EXQ@p<njDnO#`Sg.28\nQWC.Q4C*uRlRou-Y:uOa[/BEXG_,>`MGS[\aXZ;Puc8A_#C)^>q%WiJ7U%gGL&Ur<Rr:lisP//Fe
%2n0m9!,$g]+JEnJF'?t0Y+!oq_Gg)]PY;aTJhrr`U$L0'X!XH40M1HP<#X40AQ2P[r/QAP/[8<$g]h#[/,!Z.3`Xi]pinVrFfdiU
%jiA?l+B"ZXq/'"2aH52KShk"D25FhTD$F"-4DVm<'Wi<?mY1l2@(O_ZNI).j4=Q%2:T]?[p$#n<nG+Vi7$ktB15.M6>bi&H`$D-Y
%@$(g5G:mLci_mQU3.-];-3r7+.YcUO0P>F:RmO!qPPeB$7PoeX^`LIj:LY!1>Imc>K4qW*eP_VZ;&L9WnPtjC6[3*rL4pph%k;`p
%ou8(PI?e$g_D!-.Ul3sRWgs^5P[nWl/muC'dT+Q7IN1>KlmK#deS<r(!k$$[I&\Ik&Ej@$(2\QT79'agWRas,U?\[HC'rVYF9=5=
%WSpm(2"H`3X.JYuNR>*[C@"89:?!KKVn'sS>sLj.QNH_IVGrNRY>u>pH#6N>Bi-"u4JJlSZ2,@fk5jm8E^`hO:FT[L?=Y='GC<Th
%O"EY_gp!*dJj9r+bbFAIEA&HP[WX+$:.<U@m:0j,/p:n>)a]`VbF!pZ";e5[D3W&B\Q6%V@1*e9VJ_&u`O13]]iJ1-44_lZ*_V\a
%8fluiajDlkC/X2h7VgU$kk2.$+SFGrE&%e'C'L2V;OCpHrHg-IF2DmmO.D+Sh%#N*@-K@ek>Grr\r0GE>.+9a_Q4aVVT.@aYeFi6
%oAfsc"uWD`W7.'n+ddTcG!_n4UgoeteJ2.DJsp$RC=0H'9IYlL48rO=iQ+:kM,p?h3L`!I=A(h>8ro@0V+6WU=Ii?!;6taIS-B@[
%IHYP[(4r/VV^/GZ:8FoV<b#+.&<3.a.qM_$b6YO#XC;DQg(Hr&6.(9)0I2I@s3406au>Vl<R951<G%=cUe"^Kl^@Ji.Hg_n"tTGn
%9fU'@dtT#1&P6^Zp5-hs*5hoP-f-6YVBc;a@$"8?^`P"K.I&%F<-*/`7Ra2\K#5EWDXVELkDF>Wj#T/t4PPN3&D(0d&-os8dUR5j
%9:T"X]hEFGIh$QC;75a]?!MAP/jrNT9b6hlUJ((rC^a?:G7dQ6`O`o`Oc=04-o4FFc.*aIc:,a"XBg_tE0GO01:F/cHAFWq'O\XW
%J1J*Ji<bgF]&YK`5`f"]OC#9IpDCT,*_]^'=#GE9B]XNho+DQLWDP;t].$^&WaLm"/"WU:eRWqn'k.cE+`Q,#rI*g=-=dB?b:H3>
%I"k10`Tf]oOjoP\>baMMaXN-$7r=lLgfsZGZJN:9guM=JFs]hIqJNOp$oLm+.p]HP\t7-N6nP_M_k8e_[+N.EW$>hjF[I%>;9Q9p
%)3&nU\spPRb0CR:[nT<)9g%Zc>.T)hc6g'@X$:Gg@-S+li78QkI9_VQA'%a6`VD^M[\K50,?&N<I@E'!YUe*F<VR9Qj_jundT9<d
%:O%_l@*(&Q<X7Ek;`r5h('/Qr$4O=Ek+O$nN?B%'TfN=Y0_<cp]%YSqi(:u"<FTUPE!Td6V"[5LWXh-lae$$l\%?\Y4l;2`6.4kR
%JaU"];4Z1NJEL<V4#orMWgBO+DIe):\i#Y9CLG1ukGBA7$*IMZ8pj>.$obLhVmqa+TeNrAh]r8fF@_n9j&Al2W0jGMG2([:Koip2
%,eDb8Iqd"!j-$;M[ZRH/I6ip/@jhN\Q_f87c_nmK6P>=9QJeN%+@Una2'_ZT8k/#L#0Q%i.4C*WAm`qV83Vk;1*P46K:H-=#aq#;
%i-jW[K43GGO.mG1!+?@b`>t1ukZ0E-OA+lnPf0X<c$0`XQGR[1RV7Lb[MYI!D2r/?;9IB80iMOXi'q3+;'[K$b==pk-Tc:(q)bRs
%A":uS-',#YBBCCp7O>Uj0th>AEtKad:q=t)&($)`-#5#u'J/=![m!qUPZ/Z?.qh_KhQ3JH.TJ7XbNNgR3GV*0CIPehWjLof<WWg\
%]q@'Hj6eR"\O;`i>E]]o5W5[qP@68cEVp$1@:)'oHOX,7".rPs?fO18["$4qq[6,q3UTk5mC:XY2cr@lmOUtW(42.MSu1jIi$4)A
%^-e/(p//7Lkol`Zo9m\O=%6+gdDbl4W5#YF"O:F!S6Y@JKP)c,Sj?ufAP2\l)Kr;a>I75`i8gM'RRosZ\"[m:\-\rXk7pGHNm0_B
%`$P!$D;#j5Ak\ACX/Pc^EdUN<hUC=F.%WFEML#A%2KW3omMMB,LuucQMW8;@8(sJ^rcr2ElX8QVm=4ehX(NY_Nm?qtZKWi?I:UX7
%@#ugc0^+`_U;LU4AL@O\gl^)HJE*%b'SCG-Z4,-k9cIdb*VQUO^'CWe&!I-7U4(TJ1&0J!#`6-t>;9JmWbTflNOpVFG6^LDkKk\5
%b1.akn+6]kP%8Da6#1*98!u!m.'ZU;)Q\f>ijuEGl/4,EJRjUTekn&_K!&gTKmEts`aqb3(U@gq-O:?_>0hh2>8).kbm<L3"YPii
%9u70MF/(2D?-;_WT3RQa9ABl:ho[<pR!e`i:%aL9ecuMcO&BQXH+!MfEhq[..,:OtO0rZQ!22?>7)W`&0[(14Y\_'"nhma9XN;`A
%P2dF<b#jD.V\Fg/bsam>=o.-hE%drP9St%!<ipt[YZ"%Xo8F%D)/s_.7BHrPGU83N&<jZK[;Ufc9]TK2ceaqbNj;Y%Cf:^2R2H[t
%C6mq;^>OC\K+Ps%\t=\m)KjEMQhGaSKZ"q;9\<+R9%TVQm;T4S8WcCEb(Tg?>]/I6F(4ic`14Cg:&#kFo-t7\4ojs'4boc6RYo[l
%Z5RGi3uh%%oHXa=%#Z.G=G9P5#dAQ,:t:?P`m0[>@S03G,8THd'"#+>h<Zn>>LiArd3LITL5R2iY:UU[8E*p%a``9M$L33p8L'LW
%HW/AeBu0FDVW:1Q@J,<`kmS15?T&:AP[.LkK!dk#'5fS_g@U^&s1rRnJ)WKg%soJ5d5C1:@d.%OL68%fPC33uVH\tEb=;C*pjR9b
%c(Ja?oGG'4h&fhZ;A!03fJL?%\p@C#?5d=ekh@7A=EtKUfe,)V,O(KTmDHNcFRZ=Y=(RR.nH,K^K17u2Te5ELdnZ)kT?*!cfn7-^
%(_U&H&NL0$)M&gnO'_NM#sgQk,J3_?A/?/:1CbiRT?5.bW4]`8$?d#^RDM0[Cee`!nJci(22`P6PcF_G_UZPg?>KII@Ak@'i@'3+
%,HJ&T!\@50=fJVN5bh]YcjGXW3M_5TJSg(_6+9>RkG1U,;m/-im"ThL3hIR[W]OL&T[Y,>K.bDQfjQ(4MWW"=ggqmo(At/RKqfc.
%:!j;DK(=[Gmj,I*\R$ra^:**g&*B0Zj'c\GHBfgpjHNH7r6bki46;C5TIESBa=/3b1B?2KhC1\N^=1$Q@Agati2OWS4)rE43P0>5
%aXaRWCQ`EJo#c$:rj9l%IB2s@n9[=6ecm?$"UsU@Hq!+Y"R;PeNe5N/720g=QU3Y1=iu=5%[Qig[;0H>2LYlJb4Z`k*)p'A,'Vs\
%T";Jof?u!&fJ=2f?HRRAq=63Ld82HjHEcepKu7KE06c4&[su[pi[2'7@srmFQOiilSb59#iO)[S_\qe\'1TfUX8)g/-42\-[,=cu
%dit:lLM)!J#Yoh$DfTukR6pV87P6@aO&GPi49p#%b[A2"`c]9S=*uZ>s-sb@<G!ROGe=+t+CGo)Am>MpXJWlQm%m7`6]al$O=XKk
%NAaH5di(p;Gb\b7H)]lV)?iQ3S(c@+I+9Z9^0pbldCFcji-X)cl5\kZDk*a'EeX8Yp9-JBgneTa7K*j^78FbneT*4fO-dJr$I3&F
%=ZYMB9t]+djq8HQ@hO/cAl@<=9SsLIBRDji%\8J'V/ssW_,m1KBXM.f7f%%:kHGG\3EXRji&^%f/%uh0J'No1/iOP[I/;%dTcU&H
%M-u=#elApZ%\J?_V6Ve__Ie[WNR[O=,j,EH1X>jLO!5Tb?A<P=rOi)SfBYbf/3,X7A_,qccO2-'m&@ROpS-HI2[S->$]%&>'k$B#
%%,bO3f#1]K\Tj-q@VH1(/?(`paHMP'?n::.E-0<m3iiEp$8R4RRhVp6@0`P)rA"TY?ZcrAiVfufY`=#CJr(l'92a3-C-gVW:X\*2
%h1D`N2b?*hA`h4t0Nf@Vb,<FhPWIUG0g/"@DZ_DJq?Z>^]gp=LgGiggQjdAdFcYrZ\Nt-HGa63$q7MTp1+7E#^fL6'G`s7+)"H]c
%PaEL^P+O$o*LSXS':N]Z/G2.q9sB>@D>3,QIO^cP/iDhSi)XQUP8W56><u2%VbmZH[@]!Er0=XX5gpsTVP7ErZEhbmWki8t/5CrF
%3`QuYbFVenJgiHCMc&ui/t(q.9<Qf>Ah;I3mJm(&?[i$m?[q\D_`,@-m]5gVq<=6]rdCI/7\B_>knjBmL[W"RmdHeIrEoNR?bX8R
%rkkpgpVU'Wp-1\<ms+F'^jkifRGJ=*47:<cc[8Q6Fu%i'eLkWo'303PW3k'I<C`1p3@]j:2uaI^(l!_(");"G'^(o0\9Fc@CZ?I)
%oOpi`C4nY",$dcdZU@(VFO?rig)6GNd+/67Ckj+l*0No+.BClN5:*.6`jEp_KImm@R)N+XW`=2<U?,4LbWbl$5k)!)2h(*dZ1BAq
%lT'lC5rlS"'T^5]DM%M_U-(+c:U4AkfHT:(3K/T6%Y4:DU,NBpNE$C_)O%TH&)<(uIVF#EMd.#H1Mb^gD+YZg4GN2S_f#iC)e(V#
%EbT8[,.MF?B]lh@6&(D-0frM*;Y]%>!7GYmM@G\Icj?,V?Q)F?i;B_"+XVlF$d?R<^mGF].e<>UMjl=HiHF!2jIRkF8Gmm/QIWtm
%J+QBGLSFPtBSa,u98b<+_JGua^NYYUpC5\[N$cP!*bZ10O^JL>K8pNhpZ4#\cS"@WD@5Y5&G2D`7>Y16Stb"IaE)+Eb@X4=GTkV"
%,djHB9d<(e'p>pJ$/!>WiLV,.+:%#5.\,?j5@r'C"+80JZTUPhA#`)0RXV2LMh0]m*#"OM3Uf^;-)[#O:Xm"L.o4)P#bP,@G1]h>
%NKRf\iiW'M>:L)a@>r&O"Q)l%``/0lnr=).39%cb+"e+kfZO]T$=$CCM5r'3*i-0B<\FBLo.*I<-H$@]PR&XBZ:G71PY([BL\-*A
%ipEHfTFg7Z&@2_PblC?tOj_5N:TUg]K[D)QD/*Esd.'elc[$E$'qI\gkf\7,)P%F\pk4\.3K-6[I7Re)K+me.,4D@D6dh^:0Z<L^
%UnfFb_8:)NL45q'n4cl?9i&/bHrO8u./=&R*tmgVC.XSr-0ZgH?41a&MR!KA6P-nd%j4`R?RtK=?Ut7a5a!f,Z34EuB6UmTBkM]\
%:8&g<ii'trM(?NL6[MZ!,.>hsB$bUa$ZHHNbC39t(YYsY#SGbF6gKpgSO!&XRKY0,;%u4=k,=.=f;0\hJIEB:QrgF7-XK`[6P6M5
%g0Am%V6'beKTs-`R<#4>SjA0sZNOlr#Wi=XEfc$=R1aD%ff3.?0)BKPJhRXEcGi$om4K!?);7&0F'^L:=2Rl"W)I@OIk=4&8p/]\
%GV-uulIluQQ$k)O$V!kK>dfHSpgApeQ<pZSUh"UGR[p^KU!kC`7)HX4jB\aL=lUWc<2anJjsZQArY\f?jZ4MmTUN?BpsGNU"GSn#
%8ZhUOSEf+1ZjLW@=tDmJEpYO_GKtaDL#)d'X"N3,"6robCq;NZ!""cE]=s3jo=l.e%1mQ6KLWWs'X-;1\`#:Y28`"C3'd!VXZ7e(
%.r$YuAJ[i804Ytr"T2TuSfbHQ*E)Ull9Lk^<KmEhJT!qH*&T@<BsJ#%fdIn/C/)e\9.LX><_BJ3EgW%M!,&_:>`cQ/79&QVijMS'
%\*t#b-<(H"3G;BqB8h;;d/MC==VoF^5=L]cZEJ?+(s8VSC9j5:/;LN?W%BZ@e_$.mZjbdASO5,&T./>q#d',tc=>4D<Y\b*E%Xb#
%:6`Or7-1#e@5hV>MaKSZ,K6b\`l]lIfgD0->;HLW(dcL('2P=mM(udJC,mVVb))>9O\(f3e<$(?jVQ%+B/#6H?+I/s6`L$X(R%.M
%s!]#uWZ&GB/^.2h-U0#n%_'S=@1&ka_ULoU/t"q+:,2'S\&aK+frJ#oP`)dUUU>3/lADV=SbdP%W%Npt7]ieVPZG/"'cq%B*J-<o
%Kg,TVL2Z4m/<]YM88JqcCe!\$WQ1S)4p/*dmDX/o#H#M,9pK.(@`Cp[9>1f$o6rB:gP2&hE-WkA3MmiSY]g=2W?jW.1X$'\\'U(:
%3+Ss,KbfB/^9;Nq:,(CUPC^"]fS>^dH7O1Araq69L4"C3nRrQ*M39$8)+[mknoQI-:3u?daV::WbuC1jlL18,>E)kmH/c[NE#6B(
%\$JU[F?Z'_EndS0="$]*)sS!u];.erq2m>Ml0gqXAmUJ)gVaU;VY62A_b,0Rrd?@fV\>j&q^dL_Fa(8#8-db,=0at%5m[2-gqC@U
%p%JWfL@f)U*nF&_+F0#,)1;F1#/$Hl#S&mDRs0sM8U0dVKgm:S9O0on\&>Z6ga<d@_;'ApduZXD;HM,AcRuP(=W4"DcmW1T]6B%=
%8''JQ*p#hRO,kn*lqsK@"6-<in$C#76a^YpXGq!9$HuFte!"."n3gs*k9>Q)Iq_0U/T^%e=h1SW:<\2M)s8"lf\&n(-JYm?$(/sA
%:P-\[U]g+Vaoa#j_olGQDF.C[-.a.J8cfYUE6ZRmd<ePCJ@b75E>FL`UGJGF]"SH,2DRYoMaCp70'rqMA0PYA@jB<.89]p&(d>^g
%+J+(>d1g-QR,44D9@!>!Cch,F0&R"<?'1=L:-0&@X/$D$ntRI>U`i`sfXscgNe[189%^\=>QE[;mYRLM\h;jO/hT:\JI>!,l'0gI
%$GD2hrn<=V);:HaX&D?g3HTuAH5N:4>md3*d+j]Ll0j)u(]UYK`,^#OKr;[ks+.$l867$c0k)2'dYLS>KVt,^_1-/&htt\p$(Omd
%ESd7Y!f'0]%Y)Mf?H`_-89(p<'a9^Sj:bK,-YBKO[@hKEn?;_sA:\2K2$#"u!`^OT>TQ??VHlYKN$i#d.>#]a?S8QegAWBGKU]n*
%QA-E?qB&8@//*kD!>3NP>4C76kTO8oXJD8dW+4:-Jma?cnJB^?n9<(\1P=a>b\Xg+)r*#a2N/#ApUM(Z0-P)!L&;k[d'Bt$8D@F)
%bRn%`Vi0piM=Ft[L@cVe^?&W+0%56Z_n*5R@nm:gJS>ZO&-jE@A?G/^*2f<j"[;q:W>Q?rUOjl5(NP4(C:U>L"&ZdO<tW:ES-uD7
%-7Uc%8OGf5\G7BZ_3+]RI$-tOSO''=@fIF50hj54QanR?WcKdI?CnPU2*^@1VkpO:\5)k]MXU5kY;no(V<1]5IY-iN7@u9$,h2:p
%P`C`Y2RJ"=g&7\rW&Yl\O&6'4WIeVIr`Sf)f#t!5Ua]DLLZ6u(Q1h003c__J#l(E8d-8,spVP^a2_"[C>odY)A.]AiONV[sGSFl-
%4-l$_(3i@6"<hP(L8uGQE1j%VH[,7G0>i*tk$TD^NlVBnKl1!hB$7;ccTsg;gZaCI_g?*8fUEk.Y/=$q,&pFl8U"8DC@9j_hBU5f
%a%$UZZ-92%r*)gR85ZA?>2(XPM9&%%`KI&e+J0e_:"V6"2)?G_EKR67g+jV72$p5o_5BaJcKrLU6J6p#qS3nAC@c-kHo[%Nb+W'X
%"N?sD)3u7n=`hg"VnQD)o.tP$83:VCAG2EYBqP0?E$eZJlX(MnQ""%ljUsV\V,@H!0S%cJ);TX::01o;[S2Qh.21O+.+!CJ.T:+^
%^Hr?-I+M44-u2i^&)<oVcD3_7%/I;AGncCIj:T)\ko$!bL\\EM7mRU/V"1*j5/d^k^TF=(8_'+bfm-6(KIi2D,-da`Ol@a9NT?.2
%:G^3G[9"/<rP@.MOBX>bR_uF*V&KD[#bjGLRbc(0[?26r-n<CZB]>bL'T:_(ng9T^GfH;"J[oB^RUoeNra_*LOZ7e_^W#<r84iB?
%(T@p:du[1@/:ngs@0!9C\Okaep[bE7*)CSg#I_):kJj%7SWtdT+O2CUo121E0si[R(YM8tdJM!k,,>EGbM'tsnJIoQ71"\J9@KNu
%qsUA:'[82`!*o@,0&^:8"**O%?:K)u9hh6sd^g,c&Fq%1TVL`R(Er\bklZ%N8;"X><$M,3plfFU)+BNTO8=JI[J*+dr)WEZ+rQ#T
%&L,bkC;;hre-Ku-F0D$bKSOX(nU*0pSe@kPH"S%gGXdnVAhI8Ggq'f'k"leO_J0Lqm7[UY/h(FKDjG)KR%OTFM=e"UK2dq0G9d;/
%1u,L#g'em:&J>U"@#rO#XMqK.Jr)mQDTu681Ae^#q+nc0&<E^8?kWeB#K7YR`I_Plgt*ZSi`L/r4IR[+ANh$4'26F9e@8.1AL<)9
%1D?4c;+2[c1a^#Uf#`&(b=m`//rO,7-!!rs<i$]]WY5R=S&L*V,)k*1RJq36mRFj['#JW\:Ju@J!f0s2-GNO%9L/4rMMT-Rb_1o0
%54a^1`/bLhTOCC"_#Qj#jY;G1p)7hWSFd%&m81#Yf6$:bXBhiAfQdnTbVo%5!HIWG`Kc2o,W(gn^iWE&;VJ@j/8s&5\N4KG_'5[e
%b%r#iK5>*1A=sp65dj+G1kqB@)FHoh5^SZsetqajL(LbtF\bAqb+5N@i?=JhKm0MEhJi9d\[iu#[S!"jjR;?`[2AKY$uu`Za-"=B
%0Nuj2=07!apXVdE4&c&%ArZlMMoOQ\G9nC"$4F'CD>;I(M2fC4;bW"W$QY=cc[>7^L_r"95;9VsOi/-*CZQg20_;^7Lda'LC]r2L
%%^:Ta5m[U6*1J&s9@UXDNm-=up3G\PTDC\p\BBig"8P;G)B[?4qh\eKTiql91:%Vqmo-EYdcD,aKTF+8P(_O8`?"I9nCc"2Kl40j
%Ph@ns@LER`8*1[T"lh5S7sqghWIZT=\aLO7jOu`TS3bZ8.b.%Z3uAJU"+)]#8)FgP#&`da(qm.%EW1]scHHnXrSf$-cPqfBFMA&A
%j;#'6]75Z7mD13_Eabdi1!t<GRZT@Z\o?>>_ar1@#a&-X`5-\o0"i[i6P^;3le?)(@7l&&Dha5pC'k_^Rri@579npuD<r1;PV%lY
%!V%'g-If!;C>?"4ID`qH2PUf=LG>$F3:!<>,g8Yo(&LgB5=ar:-`C&kRL74qqFg9R5H*tE7)*e"6CZ&),:^^SHDPKps3JT<qP0ke
%1eI8TrOQe>4\cCY#:<kF*4>-@5;)%iGTVPAq\+/p6$-$ta=:B-$"6$&(@<[,3$^a^ADUc$1Q+mLnm_hV@eeP4?(e&eP#+/1HJc?B
%OJE?/$jZo74dAj6V9&ePg6ENf6:i#-8o0cK7c.D2BNTa<m22,$=DsHqj<g$D:q@qW;#;I=WU[@PQo+o;CkhaFoI>V(TX;n;/=I\!
%H?ED#^dSAj_^kPI!)f]L&./(X8*GrV+6N#XR_+r"P&s#uWtO?f*Y7i"o^V;kEGppCGE$/]DZ,1fG=WXYSkQmZOl!VNg_g<QL97;]
%)Q$oICnZI_4feR1/O$h<\DIYqkL7<&J[rNMK:E[h#iT.dZGsLP8VOJ]L1b4&fD0H`qmm0fUBSOko>i+l?CcGB>DtZO]+"i)SDDTO
%-cucOM\R^J@e[9!,9,NEZ8s738LSKh><W\sX9?4@nA4T:'Sr\kRd-Oa\P"qqT/OPT$D74'nG0@r#FscJ7jk/\Gr\N]UI#(d=`o-U
%k0""-G86^"?Aq)K<)JW\nUeM#k<S)q[Lce6\pu1VaaLcA"G`1'Gl@]^_8n[%.R8G8',@L/NUY^;I+=%`oHWo;%r:^nL)mGc"3k80
%ii=Efd%"IGpg2nX3@B]rgjJV[*@4.8b'Qm.O$6fgC/49:GF[0b,@k?jhu^O_+VaEG00YQqjW9F1.TO%r):`.N!ukY.9:]`&ZAsh3
%EugSr#l(ED17bUqfIp?^]h@>7nQ*lV/9(+V=Wn_d=?&a*&lbro9jIYlJqYD-Wkc+lWR0Y=RZ!6i2FgRnpElF2WPuBP\s6FjLSj+;
%)'#ZLM,iSoj&V<#MsOVu'3P8CfUTR6/Qd5PaF-Gn%"lY+cjR`NS1cYm)*F^B;sd0JqJ+iKAMh:C@Mf74?%TG3m\5_60ko6p*.P-8
%6%ET,d#->*?41+q^HZl"h*s/1cld,^em(c%N'XKO#1mmIcEZcJ"9^7.JX)X?8'H65:,9;6'RQE514m1V5uC:*Qf&iWd_+lY)SFIL
%(F*@j-"oVW9M5)+&_lJk[$\-iPM7(^)%:0F:;Ger&$U_F,s]J?"UrhA.MM!BVFj=YLkf&gO&!%rBpJdfN'JZr2_D[74c7p!a0n*L
%G)FQUfb,F&juTB4q2=)"*/VnsnfLdV(C*oVdeq/$V/+"`V13t,_.QOZRh(\#*`1Wj+[1+B!r\@3/6)49U<M[YfD'NH<PU"kp_(!^
%.Pb*rE]cUMTUs9cY5C@=CCO7C`b_)j'),sTf%L3pi.64d;(@n*enSbgiP55YE#!#X$d$k2>T6\KB>'j1D&aCGAj=$H<cPJr;)4]P
%gH!Zk;3&`!Xe[`[B&kdZ-XS+X13r=]Sh:T/itOh3/-[0Q5Y*Rg4.,.1Pt0Vf'X$8$]ZAHqCcB47QaUoK"j,c,NQQ4$_HU1ZV=tmf
%.M<Km'YK;-_!@7l?LSVK@-kTDSf]^I7M*^<gtbUuPHH@-,f"g?Dn9Fup`I>/AO28'7+me]P:V\;7HmW8XPKjiUP_m&J2p4DY4S;P
%;8DB"-ZK4[M]9ee(c_U?&LFP5hF6Cl6>nRr'b*ZW[uF,hkSlGVRSMrR7-W.q'W)#r;&Ci^[fNm([H%PG2(2<*cggMQ_GiWb5F7:k
%nNCDOm,E"m!ZC+0#Vh2VqN1@0)tVtY:'EYF!]U&^;<sBq_e-YP3\9GI.0goam^4f#iRhk!^^Epu]U.s.M$^:4YtiOhi7N..jZR1i
%&@%pnYA=UJ/SWj:\>L;S0j6aa]JrlV$b(HurY6dc,[Lb].2YWS(N=k-^h&]8rh=Y4'9ho([3HFqYq*gO*<t5Ecf"FW+%?YG^-%u*
%lO>,p-_4F:B!P@Q][@LT>1&a*X#D`WOWA+*+aYJQ%mL,Na(u+<-,FPYglRr6V^rsq/D.kTZ(o%u_mQa"+i34hZAt_h5WFkdK;HB(
%Zc3S5CgH1,MQE^PHqf>@^aaGJLiL]c?["dKfrOCnJrU*6)3:FVa)%AfcCDG&c?kf094);7HN:AJ)4!b$W-SXi%P&C$1_PU$Vp$Xq
%,=+lA.+!`:i!TpMWH4>#E([?Jl*s=,&bNc^h=)b2cUl!Sno5snq8XS^ZnAoTft.aorH?Q5?Lc-YS#E_Nf]0=i+#&<MZr]\S#Vq:Q
%9>SajI&q^r*Jb<D.7;7J@NuRk2#QHe;]`^MdbQm$iGP/Ec(eY$m%po"q;j8Zp%@V]?[_\ChgXs/-K$Q7r6s9tocLpE+(,'=QiH<N
%msb0$fAHV#?[_]Qbbt>7J+MJ\IJ)td^V(%bKE(M/cbKAV]<B!L^],/RAf6?oBC"#"IeEA8hqn@j5CNLThuCS)p>eKNgW*+h^Yet_
%LOYBjs6rF*ot0+2pY5@*n5Q.[?$KjqT(]A%qX$5Vs2Y([k4UEgs5Yh9RQkLIq+(IUQfk7u,3^;CIdoASrG[,YDnc,2LMsp'pAb!f
%=24_5X7(N4M$jW:8q6NGh`[@T\%d:gn,NDHs7kUXjVJn#Bu*#?W95)I:RYMaUq,_^ek(`5\7L<-nQ0(IpVYV?s.)?e'H.T`hV*SZ
%oPaB-F8M^3b?*SNp#."Mpn)]Z[)qXX5P?ko02T`f!%foSbQ=t%q&<f_NT+45Lh<>_Q8l?DlV)&&]K4Q+GNldN.b++_XTjRoffEW9
%)Q[T_UI]cX@h?]*&7`HdXh0.-=EX09)#in+f9q$``XKVIEgAF9(psru#aN:?3#P=X#?&.W^a-p@!V[?i)%nY<ea&*.6L&VEf+k(<
%D^q(gj/00LML)@k)Vi2+]r[T:2\?fb=7#Ed`=HSUmDlBdT=S1(@2Lt@\:;Dhs%iT;+MQ7&GLcX6,//+Q\2/VZ[$]@Pj/Gq?b!F,c
%:$iem8_+`<;g/aG`dN<rpKil[N\Du[]$_o9O`%TCnHdXCf`+>-H@)uDo75gpYjkKS@)Ia3i'qu"s'cuGM])h=4oN>PE$ol-@Mer%
%]-'uIpU\ZMY@8;Q6AlFT*)T\mdcospJljq[]LNrfEW8B`h\9fedof^&1`fnPi$08l1Y;,?9U:Dq/p(bqRW]DF@%nUukXb66eip!_
%[(5(YlCQ*lfi$)d)CHK'c@+E]Q=Bp/SV]lQ*WE!H9QWLp["(Ee(A^P]MkV8&6ss*"@N\k+8,#/!P])<oi.DH&"67>(-4(K7\Vd(9
%+'ZA54SMNES9b^=)TR]n_6e^j3DBTKMHXelF#;-tg^*hQA_KjL0UR^XM>6K2s5/ee`.b9-LGS&qIsJrQH[3LC]&A"+5G8`+H1?1X
%QkMB0T,;Zs?d@:WBC*CH1\MLNh?f=BFgq,^4(D1tSSg_Q+]IEZoIQN!fXVUHr?&M\P2;%SYEQ.Nk>gbi"1lAHZLm?]p#,!S3`c8*
%]ERbN75&DO;bgj'iu]G@7*T6"ZK4>&(/gb'o3]/j9JGacZd'u+V.r)/9Q9:0@eCBH$)0t+\`0:ZWPd]`\9\-\0c#QHjV's1=5G6Z
%)t/TcC<F@X>^(`eT?/>1$l!gJmkm-'jbh4g?S3jN38#@&c2W.QJqlM<%i:b)lq1i##'\a.E/(#SjZTn26,;e['u/!-/`&hI17)u5
%\G`AckHr9)WP>Qh_uAjc:E)gTN+N:8C7l/;ZScY@Bf3NWn?P;j.jSgONYk<&%V',XHD#j)c9Ft?5Z?beUH25L+<t\bF(Xtt/@.CG
%@g\+,=r%TDf0?k`Cnj1U_Q2Q3oW-K>mZ`mTM0WC[(G_77iYr0Z]%W%+"Ht8YM5U'jZYSEg$uJ5o#/-6`%SfnsPh<mV77uIB/L6(0
%5=-]4:\n)EO:ObKE'keAdZD@m;(iDDe-H^;N434P/1eJJGR)f?areP"-i[R40?:.S@T6RE:O(p_beRCRkpgW2k7m@EhkuR_+KsY1
%f>\%Q^SK$[&nS%nVuNt^Fc2'bY7OT(.:+&ja==C+klqg^U51<5V&+T]ABjAS#c2WC,Y3oE;1):+!\$R`VBB?=NaSd>c@0Y[mk`?l
%NgGMm7i0kUF^2.<5r]iq:-8UtFRSBU!Pe<`ADO#h.PufjU-:431qZL/)A<u07^uJePF2)jiRC,j4rnQN.jI87YIWFMFq;2jZ8C1^
%_gV-&h-.=H(1-(,]/P3,@cktNIub*6-Q&<H0d61Y3&o'<VLoFmIgbLN3!s6>\<$4sIOKe2cStCSlb(DRJ">HQ\u*#8Kg+VZY89kK
%l4uF4m$,d0-u_IlMs<YI@@(!45iro3g!nQaVo0%tklp%8L_FZYNoj@bl?uMl;,M@(&n<'4<.GW(GO3D:j6eqNNd?b&%>18Jmnk?f
%(m!W2/r91/M&o$7ZkO;)nRKKn>MRG5jGq*9jAth\3.6t*V257=mX>6l0Vq#4*2P'-0^j-U8K`AJ$LIjm-Z!)oeZ'/tR6(R[9h6us
%:o9Q*nf^$k7I`WJ%`]]SHNp'+LQ%VIDGsc/Id#OmAH_E?E%^qZSt@>,e^nFlBUb[9]h+lt8U4'(+K!.WiW_O!50eu@i5epa0i6`X
%LC9'*NtUM047U0^![gO&-u0,si-(@c98@e2i%pFE.nB4+MrNMrcO[>JWe%T2a3PbKc&G6M\1Hb'$KE.gLu#8.G'#&7ASMRpP\hk,
%^F1`#p4I14\t?T,q>'%b20HU]ffl8'k>QuGHTH"A6hl+YlOCPOK:^U78&5NYcL9:BC8+EoZWgB5?J`9PQacAfYrCfpc@Ia[b?MH`
%]\N&6;`e?5#^jX`4#4=#'7L/oIXUU4&2-rY\XT*Rms>:6!OueEFdnGVb$*E)NNVec%dI>k1d_TN!BP7qG>?NU-Y^U,dTlHq:Cs$p
%X*DNnq=$`2#%]cHS_0VsH5pntYm8YqVQ3r:D?G=U>MTB3Np;j8TDYkn9MD.dVe4lY\J2quQN_E?q`t;[7(%.9S-*>?[`]N>V7^&A
%[qu#N6U3RZX8;g*%=rX[d&!%gVcK0XrIa'nc.C?&RJDplDJY"KmaM7Y(m=^Yi"YOCQ\Y4]REnB#r^s37NsSQZ,k'Fi6u3=)<oZQJ
%%^jk)mrG3;lc+iX3)QTG4+:>jMb*:mHiZ31"*KXi8;j",n3)SO2("+%W=NT613F:DE.F[9^_3XA_Lm]W#!M8XJqHTE(,rPY<%Rcc
%r#0hPldIRCL7U'A@$HFO=+Nt;+8aA]PspBpmT1AT1O@V:(L1&2ElIcnpMY>ngnafuV.OtSe7S%kG\iF,1c)&f-OPVI.?ltZ^eP3L
%DC-FsJp6u5G`Smrgom^<gr-k`pG0D>;(%mTJ2Y6=oGH<&$f5<Ii&?)lhVh].qmW*Rn'Y4$"*S>ls#j6:]hYuOBQV/cTk;FM2'(0B
%b_%>`>TghG8<tfL_NC/h>+Jt?DE9QD]+c+9&08W>Ct0HGXl.%<h&o.e/'^<8Q$q*>KhAQ!9V>`[iCQathjVj7^uobbL<JEX-TRG9
%lp8]]5kI>0f,U_fPHRGq>KY,([rq/3EtWdAj_&Aq^>;j@SSNs!g]jFbmtnmpk`-8:'LC7k-,h%n/YHVc\ofO:10H8\VCL0qm?O],
%2W=@`//`&TgLo!ffTe4L'1@`5na->fTYh]2\(B9(@Q0>E2.pFdW?$_^>KUBQ5ooWLqEm2t;dB$3*g<!tQ(P5?Wr2Rrh61Yr4clsu
%KBq"QI$?;O==Cq%Jeq=c_WA^3b]4l8)G?aGjJ*JDP?oI(5f6`ZM80(@@`)Mji*NG$O/8FmAP\Kd3NR_UpiO_S_<]iQr5F[H,40B&
%O:WoMd=1KdpP*_`Z(Xot(@HWhMs/qVh(!RhaSFp56.6g1cXDA9pB43NC.%\\fS.Gin<XNCe<?UVd>d`5m`,&98s;M5^bt?uQ&+)O
%q#$:#nKgcdhcu>_qJZ\1)a>rH+sJ=Jh9pcO,`,Ik:pjfJBe[ME)@Qe6g<\3.o+o'\q%M1ae55s2VG_ok?sbbC(C^QX<m`P\?Qtd3
%e1aiL>ONJ(n='VL2/\n-:%]:9a8&Z_?uMm6IaMP11tWTRp.0gYAC%rSiVg)s0ZsF=G7>no9nS#X3Bt#B^4l#qrmWdW(E;_!#5b.2
%5"1)q-f'8\%G$p0nYX,*^M0p4G.RXTWSYMd3+"Mp(Cg(,KDf$*?t`E05$ku#)2j2.o\*.r*8@R`bD=F_`WT<LM]*PmPKOGKE&.1;
%KXI)g"f1DcMlgh9b]l3G?o[^[;Ai9NcV`gtZbXpY%XYpk6ug\O*Mjs/%"KLUG5Rd2F_V]M<a:s]ElDnOmcV$3*_?+[3`:E)4rieC
%Lq@Q!ZUGfpWYR%XBD@BRgSe\;iGoX+*fQC@REG4+F4g#ZNCP>aI(A5b^9*i/,<rZ53`=I$"IYa2cf\1?ISlK#=kjjU?]2Q,q_\o,
%e8-?X/k^K#j0ik&3A7),P[-]SF!O&&kB>"Gd>%5&E7mPK3):MN`74/%E!@hj"KY0!A:Ik#C4%WTY6_e]VfULJOF)76k9/^SFj>Ss
%:sl/:T4<B\5PK:!RKJVM*Or7^O1H-TQ^VLK\4KU0Lo+<dqbI@0:0QRs*h^B?q#Z/029#Hg,NY\jP6S'Dk@1q=#l&e<Z/E)m]a&Oq
%Du\Ml\u@];YJUg]=+$@g,CpJA_n6@Vn>eeX5%HLKHDTH5>^F*j'M=fS\+cgl/=Wu<!`e_>:rTU>Fb=KJ\R0F90sq,8FZ=s?(#Pk]
%5bOm)bh?>=W)M6d9ta;2BJuAV_]4O0FJ.IBS/2a9MQ(;ZUrO,s6I0*+q\f#ceL<1q'.CaWH0PZA6M=>*\EDsn>D+*KQMWpZO2P2S
%fm=C1i&>W_IS-Q3@sbk>-r7F41F#br?,VT.D]rKK.H!pnK&7hgK6Siuc[!m`mDNQZkDPKL5EOVEOX=W)NOq^b^PPqZ;bEuI$!0,3
%;^SES8>5A7]SI9t/G6SC"h][kn=)sc&2,@,\J*b>o=-Bj%r4ge+L_S"V>@lKPGl8uJI6d\M!AJc^OUquQ!EF-fnYqiH(r2J$KIAK
%Jld4II[0(;`//1-g^3DZH/'1pLXd-sAbJZ`96$bpn)>&Z-;VHR)5.FJQo?^o1@?Jckdkq7Td[lU/RAQ0i(]krhZR\HGT#2\H-jn)
%`+:*@=Bk=u\J`EhnKn,,0E,837-&jpfi$A\qD"`(mF2Oemc<+lD=J%Df0t)j2D/p@Y[##a]8o5Y0uG^>bu/Mf[Z1/RZ17LHa/%UH
%r*0D*:b#8]g_>.MX@;Xq9Ad>k6>qSrV>&;];!.IfYE<g1bKCX0KtEu3,'kAEG?McB_Df"XW^O9q#2#<Y)SUAsEL.C;'5>rXKl]t<
%n8:Sll#`9:0NA%)gLW0"\u[F-@%G4aNi&=H^*+"><Es`'UYt?TR9SGkD`haQSc)etTB&O=a4(6=^8s`\(PO[<0(C/S1g+R[TCO,L
%bJk9%fC<n%D:/&m?9C.aX1n1hDJ1qiDrOjr.Xo?4ah_r)C\e6.H6@Y.hl-3#rJZE,H'(:l(;&kte-*G+?gueXE._t8]:\[;c0b?3
%A1?+Hi0V-,bmES\j[UtSlM0fE?h)kY&H!5K>cP)9p-3k+eC&5QTMcN]m02!jUA],HJ;W(AGfjBtX7uk49&GV9K(D476(ZY%p9KRF
%nD08:n==N9&q1sNnG;9ehu/F>Ks18#\;">)o*0fMr[)t/dH,rK6*-\3]-!StHFW<j"`NB:r$HnPaHj723=e"u$h620jn]&VZM1O_
%!SsQa/"R*n$Eq^V;NI3!:?<"2I=C;)DWGf<q:($E\<XhH&*8<#U649XRHiWbo=Eh]_s;ce\b14XJ2Xa`7E#4h#Ij,Fpn@R\gt$;V
%k,!-_n,qVk]&,*eX*u]2dqi?.V?9W@<544%l9B:9`W"I_CV-![c0lJ.289sB)e4f[rL*u#k4cC7r$Q<]hS846F-H,=nU&OL(?lRK
%(Pq<6007R6*qY?IiEl&$fX.p\2,i7V@UAN8AU(oWUu;M3Z2%b\T[WdE`*VnZgoYgZhT=n,hZol?oY+P'=8Q;@VU`?39`LZVWI5;(
%[=@21L]+EE`ca00>2M!OCOIja2o_/jq_\n%Xm^8-ohX4@]mn;Kk9f4B>5sN3s.]2$B`0Sfs3FU/O&"1uGHILoVa/Mm/nuIR;l*b6
%>C,2C2g_Pi%skX%pdORsgm#)BSC?1M[6sEOPoP+"_1cXkpAj.:RcH_V^N>!$m;Mo%qZj9>[NBS-\P)^Kn1RspYOGNg>8g8=D7MY1
%kWu-?2ghWRO..?M^ZJMhT%]n4h,4`r^W!t.E2)4(G(<?T45?n8"4gK@+5>ecbP74p:T_C`GcL]o&?"6jkaW:@i2QDZ5LoafSMIW\
%F'@=1G3Jn<O@/K+3;*>VD!mW0kgdB\nY,Xs^/qs9^I<41mfUsE[/OCiWV3eTS6FZVEsg9H:@2up<;R^q7D+,pWU)dU6gqX`*.!*-
%IuiP6]moDLS_A:t=8N6(X56(L`H.C9(Tm^+l[R=Y?aTeKXoIR`ooZi>]IQK#j=4d',EXX:;s3dOYuPKSGA'5P3j$0e;sPO8l!jNM
%VmL;UVq/>BS6CEeBNta,e(oK'qB#94hscQTpUI>.J'8;`-K,3H5IJ40iM#q81n7b(Ec_*'K3RY'psAjBDL-R-Ra]o9C8]Y?90'Do
%M;O;t7I>QKK3mk^r6Y9][T2(C3Utm8r(-a@eotml[([30;f,`\:'Y\+d/"\G[(_0`0",,.9&!s$C40=-WV'72D?(?>s.p/G>(;J*
%eG:,..lPd:dG3g[5kLu*G7-O?^(Z6"CKkUMs*8R!I0Uits1h>>mpC,SHVa%YqKjZhei2j*0t*n6YBeK1rJ_n&hnum;q_9IiRuArJ
%leY?KL,t060=;,WGSHkt,dr9)Y7tI.ZVKV9\_WA.j9cbQVVITRXFlPgZC3_4PbfCr7hZ(NTabCkbZ=VIc<'"3?Z6B7`AG;)b[hgt
%GF#HGOe,2F#d2X%H"39rQf\>De'(e-aR?1cq0qL;G/*Qr1L!W*5_R/&R>Z"tP4&ri.,.1Kd5EEKmK71inac07)g_=b'T@liKBjhn
%&N8Klg;QQJ-J!D2;4Jpmn5WPP;s^uK.p?13fUI1PCJRen+$`XBbmpc^hUDi&KCPW*a\;VV?og.GD/mL8Hp3L!]#^i3&_OluC*RPB
%`i9*;Ck(.u+m3Z_(rLnOSh`[E4l!)uR`muYgX+cjf!>aSdYoqHF;ZCG\YDI;(^`F.GS!Iq!S3@4-Srr>3mcGYdX_LR[DQ7plZ\,O
%aTc3hBMBToGe=.mjk=%HN`^pkX;,#G^iH#h%QP&F6VE]scfHe6Do?Y5E_FkU6#a2uQ5ZC'ZG6V+bGsr<Ql'R[TY7"Q+q+E)eT6En
%&%<]5OLMFjq4[jC*GIi[W%ukq6s)2A`mOJA7A"KEoT.pcDF3/ODP;FtO-X+5hj$A8LG!p-c`8\9OJ*F%!D9X]>[aONb5*<^k^XA2
%7W7!WV+70a]V(bKmF`K6<U4L`B4-5(iE!5g6"Eg)`0r:l&C:X.ft)t;Ec'=,$smjM>).4aU3Zmd]+9+5kU2tR3t'Zd1EimorcOqe
%D2X`nQT^T+LpKrA85l`)'H];eT8leIQ_?4FHl+bGs6O(D*qUe3=5ODpj+gdk>t,m5".R+aCq8b&-R5g!1UrM/j]Q]cNVtW4#JH'S
%5#>)qT8m@YAi([%-a6>>Hr_'G7_MCPge:#1[>a.1+%XT8p?n9LP$:"l#n"o-)0Xb4"8pfN>TO):KW8f.p&LYn*,]\EO6X0qT#,&7
%fmNaig+2b6ocf*2:TY^0?0qV>V$#>Y5H%]Fga7f<r166q_NHR!$@QLXpp*'E6,0<UmbYYelh61!d]ocf^?;i6YW_8W$BOoq\j4L8
%5[#5<QbO$>QnOm5m>"=%pH=4b>iWBrEOFqO\R@YbpXI4WT!D5lT!Bf8HYUmY5J1(+8%hLQZDVXp;L?kcalBh-)Erk5?$Ai]D(7Ns
%7d.=:><2+%=3sTSj6lTpY^W?`0qFfV-L;i2968#-jR@+iq$U&OnM]k12V_?8I?;(MU%?BDNa_Z?A0La=#J%<tFUZT^me=&sE1,#=
%hR;t/]e'CGLX)00]XI+H=_D5%QJq&XSck%bD?Xc>cn8_B*RA(D$nkbU*Rq/)=D_f\U?[5<qc6Q\]KY&k"JcXs2E:jQ]rtKL]>%>;
%/jJ5c/c3[JWKSt([0.M[AelNCq*iORMP55!mTW+i9@l>^@3P-=^%WK."_2L@&rk`r3a:h6\<a",q#-N>e[2\d2V-b5^'b;IEl\.H
%\@qaN-&f.B/fUju@(ZI[bs#]Kbo$%1\nB)QVD,Uo(F7gj[1BD4cZ419po6gW]$HD[_\M#F).D@<Y$a^lR^u#AGa_n[Sp;U;[Tj;s
%o(Z'Epo:Bnh!49S\9!9BJ>"JQ;j<96o$0*:Z76_Pf@9Pq:u$Q9QsL]4GM^1Eg^<Iido.8/__XD+C#bKIm/^KCKCTE2bQi2lWd-'2
%\;cQ$-Il:Ek3h1cfo\[!XiG_i"8[r.#`;QOY<H4E=d#l+)R!_X&LsHeQBA8nS3Dn/"[b3B3]Y[<_ejb8Xqh.bj@Ac%L37-Uh"Dfq
%2l99TQYq#S4JN#GNYSOAjRFpL1s9H4&(2HA1uGgFaU]?Y1C3FCpLN[-]dPht708OQGV)>:`YAs25$[V8Kdup_USgi#W5%t2/n1`Y
%N;0QYH50F=UKp@FTM30k:ctH-<e!/cFZ[O=E:0Sd?2*\lQlG]FL!(bqi^iN^.;`<bG6V^0dnc#XS)JA66.MgtK<scSD^0/hP`WpQ
%X;5g-YJmrD'9LhaH`$46^K)<G-@e&CGGouY,4Z0&pk)j78s"6WdO'Q9G>[`Lfp[.9cpf>)[p=bpBmQr(JTdSTHYrWK11@cXllb.P
%O-QdrlTj3W-cQ)T=N/\WXM5fT&@l=gM+Ymo!lcWs3-[lI_u,KFT$QC?3H]jMHb+`CB*>8U5O^RBa.W$&.f/hG,ZACC.ojr,d)C6Q
%%kkO_9FA,b*-U[9LZ9u?-"S+Wbq#dR*<p_a>g&Q76/45j)At8f;0:PscfY`BY@u'?RV6YQ\)n73/^,s`9@6u8qX5W9.\VCseu@qk
%5hfeTP]f6LBkRBBF)EofVWQ`tiq`NYh:r99XVa3)0a6;Z"POQ1;<u4b*)i+7Zq9^\$I<YHRR:K?cCrZ+^/[!BBSi4cDIq+`28t,i
%k8eU+FV!*uA_),EG(\t,gA'7HDV2)9h&HpTmj@BBhFhq-hW/Xf2ojY?@PW2/l%S4YcRY$FT\'+k"aT8%d>n4^nM952:D%kW[Bplq
%lgmJ3:AMNT*Y7"?D:GTh[d&@\O)aQH%64c.7^(1XlSIt8%AI*0^RYp27>p1-IKb["J^^'-H4qSGY./e@e<9XB`RYCj;!/ncBPYXr
%_DUqWki#hZ%$#pL(#3E7[TE[&dX-DD[4,4H>U??qHdQ/p4_f"(,sJR^bX!-6SI'5]It?$7f09sR?Y#h*TnX'j'5m#h<ScAX_b\-L
%P%`)HXg-mb2%Ulo&\V3SHG.5%1VK6"%ssA,0Z/#R)Da9sgt5r!/m*`]b9MbNkAQN4d9b>%_LE!-gCUn(l[XsDF/M;2]<1rVo3m19
%ADNFf7E!*nn2G[FB-Fcg(M[qNeNrs&b)%SSB>#i1S7"Y*OV6J8.YT=MBC,Y/n(i;34,ti-pBLO;lEOcJTC[NZRp9j(4XeWuX/@g1
%#4k*E.%<"TPXhT]khgTc\E(q`400X@_`C5(F^(_q]CO/2b)",p'aRKRquiKNZa_D\7#Xn0is`iBB?hLWLD69U%/>"_H:]gTGZSOt
%cE9!"?o!'km-g=!m%GlU<92E92BT&#(Uf[SX=m9;_R,Q0d;!)6`['noO\EZ1e&a-tE61Ld>J*RX;*:ALjH>Tf9o&=b3f9[U&+P*p
%%O^gXedL7A-#ti/#<sB_Xe:PU'.sekRK+GZc1uV^fNC7!H]60R;&sT!fQA7L$)eC9@3=u(.d>72OBII;lXEOPLI^U);)Xgm4W@NO
%%MQEHfU9$C%=6SWa3j"q8CJeV,R$1TVYB,?)IGs3FUK]X>V;,F(cg_"/kE^b4c4\H5m2rJCFp%:Zgc_5mS:*=is>F=h%_9jbe^"4
%4fZPDPu$Tap^bstF?'1Z$`I=5IW4\DbQ@I>A78'K;`%Mq_b_7M*V)E&&qc06\K%+%pMg6@3+9B(8Vms=MO:>4I*5u@_7UjM<&!%/
%Ag1`:S);NF6'%q#8>.t+E[Z\jnN#8WA*gKAR#Qq)FlnP=X$\=:4%O6R/7L,Fh1be#>SqLKKTGF7;#:T"Xr#Gks56"uSp2*7-EB_9
%Z]?jM+1XpU!.bh0Bs-KBn8$3,f"HDckipBkKW@qjB"V/(j-qXYYWCQiEp36:p;sP0VI$=Tk31A4o]Y.MQVl4o@3ggM$qqM,/"'Jd
%fp^;?7n79mB59QFDHk5]pY/M_7T/q*9bHa2R2n5ST[Rn*!E2lOS`kNb5/*o5iJu>@PA\2U,@Vjm^+gapA(%m-+\e0o3!L#XE?#I+
%R^5WLS]eh.?))I(fRRXu_`8A9YW:GYk7=En39;88LoIX@\WXgp35glBN(U%WdU+t]Zl-)bT^g.2ROYBgE6&TfHo(IfQ09I^'sgb+
%9*4"I'mXZ?c?@Rpa)NWE6D<0VL#!=iYaWaW0=Ke_nj>f/4$AA^ljtps5eW%Qd:i47Pa<NcA4Zq4>eet^\h[\LaQ0k*1[,s+d[N2]
%37`<%o#b'@g1AC)>>&SKqcZ.Z:Y3d*MgiB)%Qa.7KlN+'$l+B1'4(FHe!H)=Wh]S^\_m)J:(g6W0JP2-/;#K-Jr<_,jH-IU=+RQL
%E?$C-NHOSR(]m1th4RcH*%J46Jd9$X+A1H?PI-PJ*!cW_g#gK'bW%FP)LWFc-t:^nkd.C/j]<Mq2fPjXB^daEk(G[cU>$nL/#QV(
%?csnAE$h8,L<<'s&PWXMe#i?el5(n18sIQRW!JmU<+\0J/X:!TVA;-4&OT<u7od_lBU5QU0&ZSF36.(%.Bi96Yn'DLEDrui^]41<
%5<o2D_f,PLh3[n[9s:`8GBs3(=:EjT$!>H2n$od1'<9Qm`WkAgDB$COA^AQh$>A?^QosTtH)&N:Y]o,4caf)_=\nuu;`]4co`W'9
%f:Q>a][3hYW7mq<>ZmSGX,IlJaE\a,GdU"XTh9bB]^gXa#M\osC^UQb7dO>m@h?Xa*ceCoLXYa?cSaG0nkpb/`ue\M$T*jVD%A=b
%b##2I^iFrKO6gOc+(.-W\$A'0OG)':lMNt>d$?TQ(ZOSW?_(R%<.Pc@SR6ItZO_&(IT`8kmel38k81VZk5<)COkGdXS_osqL+)BZ
%M_D^'/?R2N\'Sq1kkX>4o>RoYn%f]fo_\mrl]P9JPFPtg_m>81FaP?-\p391@W[l`[F=Y/R/,pM;.>Haj,8&WUL%!AQhCO:hIV%]
%+cj1Bea_`:Ep9XbHa$YFD-&"V__&oq#>knRp%[rfiM3=F[4=)+hT\Xko2=EJ;*0s.d5$lAJi[TqN8KRUW'pbE1;GcGJ5!A4=Rh/-
%QE;]`pQ`aP*D:&GNR'Qu4ebU=b!a6!abL^^@(\rc6jJbXF:cZ>%f>6t_G[:aY#VQ=UH_-UO<le%Z@^a*kmcK(XO7\Km>6rOJec<f
%7J!Ir0OCFkhY9ZJ,WWB(/Tq@-ZS(2SU'3g:.!?-TjllMaC!:-&UoGhJ?[2i:,,)*/K"uNqC/QFA7::'080J$OOW8T4i63claJL<!
%gX0Mn,<s16X(ieC__a(hgEVV4@dECP`:b"%94i@cgQK]nn@l.IcK?pK[*5)YYZ`H"Y-X3#p)=d5G<F"$mflbIJqKphlK2"9-.'$8
%3oPPq@1`-Y<f=Ss6RJG56^%da`*9hG*Pkmk-R3t`/^4Vt!8]LDiDu_j#4r_)%*<3-PBjg0".:eq+H7srMZg&)c7IBROr]I;Bu3d.
%cTsQs[=a`$HS=[sBd0*Z1KBOabPEOG.p,Odh)Vti0IB,<%ekUuiRIMT:7$Pc,"ECqS0-Mr/!MMrh&-Tci0as63HXEI"QCj59:;:*
%/p(:Mh#TOl):>`=a@_%2LZ-Z]K3BfU:Q6]`(GOf.+ko+I/.V`i-+pCL\#.SeC2Ma$&]I2RVg7JggiaXN*A6a(n[+;"ETaHA6`%J#
%@q%IkE`=$0Q-4X5Q=5N;f:"5tqS2g`_lEHsaB*p7ZA-F3)i*SVcCVa?-$"+cqFa+s,_s(gp.Q"soJ]#?i'(t5L9uWp/ErgZ;4BX@
%6ZNQ<Od2:G?c@'>e:VJlMsGrU4_`FJG&T;N_Q%qoh!$Ck_*Jl,C.j-GOg@;hdfa'gFM32OAl).VGT^T6@6t*R]R.Q[.t[H8gK@.*
%"HA"LS?Xi2DEmj,/rDgC;0O6d52iOhj>"VMhddRGH'O\<CqVQ:O>+S1U6?Ybb=J;7%(NW&S#<QO3m\W@SfVDlBigX4,.u0>abuP4
%7+]Va'^J;?Q-I">`o=np:qf`3J(9M:p$Q-\9s;]n'?,ifY9T"p_mf`\lrc`SajY%aW8&fQEJ]ie<=kQ7]%lQ.?+2u?m\1ipPiW4B
%0$;0e-%)C&a_N=ZAt?)?68=pA]2]jm;n-bF8:?1)2>IeB%P<8hS"Z,_&b7`Y[Qo.-JXP<_VO+[-8.7%UNWN>frS_]:m^d_Qhl6?%
%(S+Uq7h$Z2/=LF0PSd$C;3=bRg5f0c^_NG?X(l(Ui>71!'nm;Ro-P])Z0U(6?%@^EXA.7rO<,J7dR"FkQ[1="X,C2^_?L7D8AAWq
%>75.PLkQj"%RinKUr"B_0/@ij@_G0am&/fJS/#^e>lb`p34='^Np^JV[qscTHnUC]Dgp3$b/ighhS=NgGL!#/`N0G7->6]G"W@@<
%I40!0N39a5=,=T^,_!S]4$0b/3(FAF,j!*iR1FHfO86ld*B-jd6Q"L4Uch*UmU8Xm&p/?BJ*tdJ&E02AGU#,fjo[doVoB'c8t;9-
%CJY4p1h);g,Q0(r\[:9^)<Ie0*f+)6H%s66$WcrapdJnjK*+Al6*UuX.2FG)n0FH\FFdDs@>M]F??JcI-6XcT]<CK\_8t!+\Pg!E
%h+7Fa8?T2%OZ=oK#/j^k3BpN%7?Of"=aa89Ch7<([]IW9!bLM`>i?qUM91BJ>,j%P[?$!cKG<WNm:PB",Xe.ke_F%O2IS0`m/bA#
%lJ+WHdSFWu\I&Z.;q>Pb$oYeuaW25:r3=f:.a0bPLbXm`EPr]0'h)<!FYD-g9=CY?c#2]lcLCX`=<ERlB3[ilV@PS!Q%S8(;/$OX
%jMB*hHP(V9eWEt(&3h,qo9+kARp^4=h1<7n@8CNbQ]^*)k#Ma9Jo:EG89PUIe!'3;LKuU&a^+=8FVG@3BQiS0oAsZ+ac_dPjHjHi
%<?Z)eD)+&k48+m0R0+7pi(;Ha2I0iNiS*Be6$Q,F^9aScmgIl=!@knSqN,R^Z`*9q;5eYV7QC#L,XUj3Oo$?R;1W=]VY8X?q:m>/
%7l`*X"b^H8YQ7YjGlg!+BD?ak*1FI$H5de44r)PZF7=VRI+/"+4s'gL0^N\pXY:HAki<HK^-RF+\Z68KCrb8;_%[S\jK%T,j`&U%
%9c\[op=b3(2XnD<lHNftol-+7d:,Qe+%IYXW/)^33UOb&:E'"7-nQQ;983uU?aY.O;E@$]AiJMkI<dfP4tBsJB%rTjf9dP48"'Yn
%=5\0ap;0-B96$(U3#BPnkm%S3<e[0'n5!ncA*2#W)5dRufp887^NNYel#T'=+[adO+WJR_6GkcTPu0^&Z)13s7n%b]kbmRVfSfjW
%[%eXH/["@"'CtYhlt>K;?VX_[ijZgWGUqOkLPB;PYX)3iA)KrBJG9+(5FfLiYr?"-8LhfukG0I@2S\H;Yd2;-a\0]6JnL:!>1O>K
%m)d\&+8KO>4&**"J.NjR_Y/WW,lT6[&u'(D\FKlY&jMbf@lU,+hKkV0?fZUOKhN"L-@9dt_hJH+d=9bm2j$5cATQm71aqKtUf=94
%H$b-On3[Yd7n7=G1ZIK[MXA>)dg5PK1s,\m5%g_>Ci9#hRU?GLWl9&hV"2\sk:V%jbS\<2,T\\Oj:s]3doD&99"aRT5]b;=%3MA[
%.RN?_/1SN^,cugmG%H7c2V6BEO<uS4-X6jAW/6U7PXL<4%W.MTLg7u&,!Rga*1l&^!`O)JOMO^m"as>R31PXtig`=NBp.?XT3O7D
%7fnM<qTRGn[o'DG,?3XKONAi]gCReX8Hj`@Ah,`(SWd#ln0!C]8Du?0P2aY;0*)*6nr`D%&>rK[m,sf_f9fo,9/`UpCSrpP$fXd8
%2(u!NX'QY&mc0g^V_ad,FD!i;GAoku.a5qJO+T9gqAS._F%"j\A<2[.ZRXLCjgMQ51F1+eS)R]?7?oLZ>8'Dcbj\W0mk`kG&M]9B
%o:S%Qb8er:nb01gHcCK\ja59s)W0#;@QBtDj7AoeLob-s1k!%YlfW]J@N6iL_eM#$$"?K6_ed+/qOhbs:5#Fp2l=NlLcStu,J:I>
%D@('c<LO[ePB_fSlkcUVo4u">q'iL>$Y4pJ+!fcE]6S08_r7AOc.+UO)-Vhj/p3O`S-i;Z/XW9($Sp0F7-O]F5-3UL9R/!QF$?T>
%&J,Y)1_$&Y^G%%<7=FliW71[\jRT+*F;Pg18?V3hF:8SaPp;!q/q=miD2beTlNLI*iWR;:"`\Jb4O14L*CAq7[/rr<>Q-WdW&ZA5
%7`dRHV<p1mKL&m*<a8HAU'1WrN$5a7+A.RIFgYBaV4cY[:\o#i$h",8)F*9H\9kL'b':0EEoOA(Ol5e@]/PWq&r4Hh79l6G&k4S"
%UHNi\NlP]k?<Z&.O$uBIi.N*Fdm0]T-]'nHQLBr9+qYE5HU"'Cs"am,'\MQH1sB<]+'%I8,$ok<dtfq`f&6)'dfTT",GtnmAjRP4
%,=')u7]cq3&8@J!mYWsf,dALhKhUVh'98V)4_S(`rnLR='_M9Fpk0d9=nVl1YCRDu;T>BmW\B>H#@Zr,e-gm2?0@#>CUsZnH^Q%Y
%Oe6j&?W-JF9Jm%1>G7jhL#A/hG&a$bcI5V/GbqGRO8%)WhQ,M%*mW[u3M`D8XViT=10(W^[+XT)btjJR;ZKcm@t&+/<XYjGeU3L@
%Q]`)YI+9R<.KCTgALg$3Vl<_D_>']e,K6rhQ)CcX%#%I9NY%6(rPRU>q4-sY5rf4]nN&NFe:=jT$_Wlh,b4C>IbItEh%bX6=@TM)
%IGZlo%Z[MFj;`4#od6UQ7)hmZpk"J/Y9%t'-Z^S<aBN_\*B<B;JH<f)@IjSl%q<<sVD$,8>"C_-ZL>-01h71i?@sY/5WQ8Fd6^5J
%*,kA73#E=G?<MQn^5)^eBIu2h3Po*=IKVRrk3u<:gR*T6nX14ZcfSqn4L$f#0JCI,)3B"2l]=pfF*VZBnc^LoRHDoJZnof76Vplc
%\i@--!-Zo&_9iUZ,V3kN=h0,!eZ%nESFNmrKpC`*aYr2SSBm#I_4[mubqM%[l9$sno'Ej'7TS<>O$aRh"k(T(4ZI.59J7Se6T/QE
%R#`TbMWc8kMCT<g8hC`KT9i)/VcQT,`UG;mM("I4+Yn0A545uH/aX``._otF?PGLn(k!fg,>X2e5lqWP$<eIhJEStrs'Qm3M7O$X
%qj_e17mnbR0Y'Bs7X-jqePS&#846r;3noZNlQL?*(fkAX:e`g'Z6dm5&UD:47!r63N@N.(fI[LVIC'Q<.KM9E?u&uH=s?YH%O!Ho
%Uqr]U=e%[:Tm8e(Y-Z:O_W8AT/"Y'.%VO``*0lJ!l`LMURUnjJOq1JWLKNICHnr7tNDN6;CfJ>-A<j^bA4qP>-7Ns<TX@NCH\4/h
%Q7W+L9&9o.[+I_o;+%i5got6C?9LelD3E'^j%tXG>^5T?JWL;(,5V]WHYoErWhLKmd+IY2%EPa3N9cql3C%0]FOn?;bW*1C[,R1i
%(.(]oKK_iOGmh3Fcq2#(RLRO0-VT.+G\Fm+RpILp7E&D-f.0oRi+TON,`#L4`dqnVA4!S7>G)PgK#%%4E/&Ve??F+rfMrT20epIH
%&sig84;,]nP9`R4c9puck1N,c-#OA-[iE!'l.LA";q3LFH.eC@k!IR["[.aQ]u(Zir9I)IY`@Qu'6S;o+7.kQ9,)__'eU`M39o!m
%DqQLk4L\@\l2]Y$ph%IJKV2pJQCJls:M4s&a2-u`jA$$bi[[u:8Bo6P8J`M^%<`7.=o&9D^8f>CPLr5.9?F')7<;X!hHa-'c;!Yb
%baEsl9:XHElY^"s7a?;/`UrZJG<#`XO&$GP`AC/4W]I@:n*Z!$%u.n,60_U*g3o.]'tk5E+0plZ0F#B*)6FRD=Lr3@,d6dGKi?Y#
%#Xbdl#`9\V&sN%+/!)"1U1G&tT*GuGPTU1N'g;0!MU@ZMD;]NO+c5o]\m0eK4"XYZ&[/Fu:5+ZS^Qu\qT`'b.6Pps\<_H<!LBfCc
%9o7_^::l%+/...YlG+lSSZ:X#efYF(oUoZ+5DIfS'8E/&]A(#klZ([V%t\bV5R1GCM,Q'i1"]\&P"Va4'qgV-a;FLkhQ.\`miBHq
%+647FQgH;EN:8`.K?>dMj>__TIM7'i__eA']Jt]22<e!4m.s#.P_Rc(1.UV03EUJG_*/6"j)&.kL%VGsYIfg&TBN+kDm)k,H;,I6
%>mIU[,h(,$=([W/.T>`;,?X-/NQ:'\jJomQ$gt1rhIj^ie'Y3OiEhjaGL$:0jP##9:ZJKrm9Z($GLmGnZhZeP+nVdN^/nkRhK8tu
%HpJXdC\%^:Q&g1A&aXQOAH]3\8UNtDj'B9HQE'>_N#(SC,+iSkOo2k4-XTBrF0$sa.R9oChQ^hj<r174rc=C3I]+7#S[*@7r1'Y&
%T;[N`V_"Ae5A/^,R<J@Kb0l^KF/J>qBnpW%/=ib)B<'gVCA9.@d]*4e`_19P)8;ZMFJf#,0cupaLMs(ASLHd9lJ@qTpiag.RIYDk
%hJf21^7DQOXSnZP6_#Q[5Cp8MdrIX"<%C",p<Ict6RD#H"1Xup9K7B6nBBRL;+[[R15/HC-';"=-A8'dJ^]N[jI$*ae7E4Z+8Ht*
%7_UMG:&B-YSMBg.!sb>_H(6@'8EiI*3ircC&5mJIN2q^tZp*D,p+H)\Wm\:lrU/qnc4%`PJJX^san.#V?'/O`-!RpSGS5f23J88&
%-/K4gL%#J'b`Xl"fAs[E]5*'gX4&1BRd3b.I-Zmi?,.VRHQan+Gr:&H8(iSUe.*UG?tVVn%^UlI*OL=b&HFP>:]Mf18(K'jPU+1/
%6jJ`/:ai3k\4jn`"jfOk"$ciGB\3"'hd%Dd!/)P^9_*g$-EmuUC_($ZZPFs-P9B9e9E#i30qoRYV2Rh;IIh[7#D&73m84'J#T,KX
%CE3#p(@A*X,Y#]CA*D:I\/p3)9$r\^Z!H\i^/#=*mNo-N9*Tqs<DZf0VMaJQ6p1h)Fj/.V8bQj);Fg#=dtGkM7Ps>CrHjS*<gl.N
%"dDk<apH"PJU(:TR?7@Q!sH\,9ckP-I>V7ZD#/ZQfO.eB^AY\0Ka8IYC<X2-V'?\i(QFY+gO9KoaBY-4nj8Y8]S$t9[?X'!GmM%E
%n#dC;KEGo;?U=[Pl;S&0ZcM)f+q^JjVeY1`c>lYLM!3r:K0apUq1Ihu4TNe,E#Ku7UR_E20l$%\U&hpkfeB9nBY^!a%&QQ`*6?u,
%h".]=HhZB:4IEk_en!jnb]Tk-%[%RIr"B\Y?gWt?/ojAJG7C][0"lo2hpd4#W&'to6"`gIR?I>W9%01@FKG,*lA0AV1S*bqB3O2\
%QM>&Qe!U\fVY$E.M/T7ISLHj;9&H&"ph!.IR20nAopmLfDl,@^-p_K<hhdBgL-!eO%WnT@SS<q!VDFe-5\E^HR?I>W3n'K0FJe]$
%.>_u?1nCU3B3O2LP5*/,VS0G0iM5,SZ-min+s-#IT>lr#j0SbOjQ4`(296anJ4SYh%%F)P$OY$'585V-BT'lqk2E]8bWEtV-phde
%:ToWj_ArB:+X<\RMuY^XH4mu(*Vh!%PsZ5B9lqu!)M];$Js\_%>[VDR&KOg^*#X_(RitjC@WL$`i7P/Lni8T#=<k.oBHO$7H-$l!
%mpd<_)jOnJ]7&Rl*'bUqo3KPL6VEW9:%lQ<_-Kq%B+m@_'.TUHThF>BMdpJkq5@gJ7#7ALPE8JM&0uRTQWrNdacl.T1M8HhPW9U?
%3k2tg`erpt-Q4V_-fAiF-asD[GPDE&iZ/P_8.-kL[rkoBXdLT7W2\aU+7:&3"n*5,^X*3'M4G^a527078$<gM)QOrd'9IQ!!soeN
%j'll^CD%dh*U%p*C:03KbT-ApHU4-+p`P^2Kp"6<O$VINoJBY?BElGrU<t`t;H\EA8o9`h#91VJ#%`"7ARJ#>(+"B1c,K;k:<jP?
%4HMJ^--Zn\+KA[I/h`IC!CWU'h9b:75g%g&kC#aoTI.A/jWV$?:05ZLnepT>7\C+0;Mu12`%n9n&N29;@e`,_G[?8+mb57V)^&op
%[KuY4;B"\;SN(TCi#&KDBSh.6#VP"Ers!&I%;?.3!0]k,l%0m-_GSfZ*V6cGpTX?g+T;G'%('N^:I(Jq`D\V.&=al\GojR$RX<YA
%o,P;0?K8jn!um&J^lYKb4(s'=Jjbg":RoQCM<G*$MnihL.>-+c;%?UDpo+k&Ml_1#[<+_OKi]*;St'A'7*m(c*pJtBDi2^i%Esc?
%7rXL<65[BVq0eT?,0k@<#0&sU2SiLXJU(L[KA!8gN"#A=Kc1dgg"i\_+rOo"2[I_@cG2bQaL'Wt$ad3YRg1B-c18MP6-*DV605(*
%UWE.6bmd"frS,6;83WLBp$)k\89FdqgKG8'7qZO:ebBJj20NWC;^Fr/>kXUNhf'5H]5pLfis=n^\n0jCl'>FS\l!#83-'kFE9KQJ
%O3T?lO;&/\C^i9h;Ibu$`McHK#LQ-U@NeK[Fd=O\o&.as(eXKpYgbKnA")?Z(7mDoj(]M#]6Y-/G#*;5(*peF0R8r,LX3GQ'_\ih
%f,]u@1>AcibnomuJ+d[gRF4QP72lro_D=amPYeF'RZK*F;$_I?A#_A4%:MlblaI#FR^D1Op7N74=l`Xuqg53A'PYB*aT-^LVN6'I
%qqY&a4#n]T9AZsXdZ'LqEEZo$g!&&>.EirrUt.utFJ+IE_N-\5p8V!&14R[/Nc(#&l8;Z#)VOfF^?Bt53KsR@a<P-RZeP,7!n>.5
%am#=J>S?DNWEP&0PUhj?@1FoFaj%;/rUZWmY]h?S0h-B;,e)8YDhZJm_aTNY"GVIe6CfoeP0bc9NfAs3oH;X85'*5\BCT@^$'HKD
%co2C_o9f>DCS;!:H@KuD1Gj^V$o_ZhdRZmf\K:8^"Lp5:]WC@1/mG=nL684Z9OTN'cLHk4\rdA5hEk?CJH"UVf'H_+*Y\"-2B.TQ
%5n+$bP]rV';kradB@J6k>>"2>.)q@.KO(dI8C,8U0I_pCP;p`?4Y[l:?3t&Gl8gF,6:`j[Z=?l]^*"=%8A7_TDC)MF5MO%F;;BM`
%otj;Gk.1%_Pc3Wum[VTB5\7!YVQ-6!?:RC4!k./5"KB7`M&\s/P]!M6Pf67'\RV?mo7>pt92P235!UlC_Q,]-qKUglls*N\R\!_d
%jAhq\QjIPG^53(3'QJcDNS1o=0h>>-:;-"HJgQ`$N^n,6<:VT,L0J(N3M/HX_,X@FP"EZE?(>rlZ6@8-W3@l&NM.]Kn[="[*o[u)
%m.M&?K"U6GN+1>f8Y4B:I9q_fGMW)m-SWC(WZqi>^5U[;:lY:ReiH-p;.7@XS8[]Q6nh%f#PGumitk>O?2L8mP^mO*-RF*cN#O3l
%*4N'?fl\H>#CfNKB#W9ToIe]^;!uRhI9dNn6F:cIbaBs!IuFNJp18^2XSXHr'g["%<hYlbW@bV#]s.ptA!VQc"u1=+#bcH0rVT_%
%hCe,7KOV!_K,B*qm@$`oW=ZW<6M64TiK6A,<pD;O)&7pMH6ng&h>f@g:HlrGr(c1F>H1qR/ur1K`4OuAnOgKg?Hp$+g(d4e>SkP2
%n>lDg]-T#XrCk5$P\QJYKnhc)V`>a%f.#ct1HhB/MP=-;QZE=j[c)Pkm%@m"N5KSVr7/q"&$p:]Z^cU)F@APNU>M]0^po&_!#s&u
%^D:3P]CCS/fs]>ZJm^7;p'"K7c#ReL'Klm6hH]Ri?ZIINa-33E)J><W3Cj0Nfpj&ak,HY;]0)JY6s*C=/aBZ%90>EYk^H9O]@@L4
%R5tqH1;$Cf0.Wub\L`2!P\*dY>BiVL0(U8D'd4E6)Ae!@[V&g&$]F^n.%ds]\`2$1=p#q7&X`a8kuNaugrjNWPJ/Z#(8:hfFU1V+
%)oD*K,/0npRk?6i.1*rRfNFXA]eE8;PI<T:@?Oia>&^Y0QBdocbg5[G<\X*<(uqq8KE0$/W9=?Gmhdn#Xo$uJ-o$F^ltn,a`r.H9
%)Kup`UdNc4a3eTCCoFbp`E&H$'X'fJgq87r4BJG!pC?h13`a24foZS5].a*7`U7hf,(WG"7"s3B3.N_f_,Yi4.4sf)-!89IhR*mP
%ZO+m\U^cU1]H%qaIs/fPZ\))e"X\7b%u9cG/kuekls`R*]L&X/Kokq!X&9BSH65q$NFjYT11_PYGg)cH_^M]GhU7d.].<i)NT6Rb
%F%VDl4f,"QD3FAn\Yr/ljFbQ9>/:Cdc^#N*j6Q"&[C9JjM&<qZNV7G.KJCCn,ud^8`RfqeTaUl=Df/td"AcGTiBoVYC-9[:I-6<l
%)H@?:!4t(!Q&f0WSscn7!!O$X;d&Wr'7)0RdDt-+TCaG6p1T]7<O70@C)EcPd*J1^X)T9@HF=u],k58IL>tR$Zt2lP/u_&TcG:k/
%1FA?Pj";4f(/BSRGt!9,Zu'4)QM4%bE-eA2Ap94Y6dC*R'sj_`OZ+Y`[:%-XQ,)F6<Frji/TYPQ`!"k!Z*baN0C,M^Ah=IV;b]=%
%.64N>'1W'9%e(B:m`><^3eSVG&1-ar&?bGui-iCC,?XG1/!2hO13Mj>Z-a8(dch38g3=gY4tk27o%6rh>iHq=&.k)tR`g+Snl2af
%?l9,o&:YM&(#8%:NSFYu_gAMD<o\FohtR,VLF$mabEQt)A/shP:g1!\>gL:e%a&@jh)NlT2fN?"7k8Qa*D6-qnS$Nso!CZ`0FW;f
%?AM;m"2PO#,_2iL#]8VL=t&5?rg+Ts49X8F`Me__45>EV7#"s*3P),iocmrgPh*t!8T:ndd-FaqC0;Xi)a_D!j[LZV>9:0*)S^ns
%O'*k@WS--[f%,aONfUYon_M*WM:J!].ULdR-l,cuf%m-p_;V`?bO)kI/+fks2]O.t5rs8tp%/kN04>d<(._)+ih$D]\B?Wd!A;X2
%%#m7`-#ga.*`eYT9e/bt2'V):m@;KA@_UcZlkYK_X4/FhQ#t+^P-*.<D?8L4*_RCVf02e[H`MqdB):j>@9T89enOu.gkC-n5$<)W
%*d;/^,MJCjLihC09$e";qPJVE8YIWr3S$6eYeC?H+[;MFNPs*p$Mc;FioNejU*P@!g09D(G(_:B1u`GK(**q'@<O>YT>U`Mml+Zo
%VNLP=m1(doZX7e`jT[AobL/ZEVI_n+l>,1?GYoL"g+Eb99819j/rQ9*dE&4JKmD)6cKs!QR$0RN+XNHim!TLU9<aWcDq2_:2sTtY
%=?c2;1:(c^FU$i4]8OKjmBm-Fc(EBs2]$U7P?SlsZRI6H>6G&l#$U?(>Qlu"^(:WYXc],!_G.c:alu+W2,>gbR$F>"EDV*Z=U`*k
%j.g`J\8LEDiSJpi6$N\q"X0"ll3mr"=1j=7:T/hgZg_[Ner0TpVNoK<1@jASNfoaH/4.e4be`BZeX)Jabpa,7"M,al)aqo;!j+am
%OC_ucg*)l9+-b(cAaR+gTNh'F!dXqD3$=D-kf4\<0)i%8qTt/N:=$gIafkf(<bge6>T#qn_D+;Q.B%AC%I`>YJ82[<T#Pij=M9=?
%/\4eX)HR)O)m[O^0%d\'PqN8E2+D)*%]Up:p_F+dD?Tf]h<[VA%W:C2/b!Pq(JI)r&*ZV88dk;I(=fFGf@Gmn\HFo.W)R*jBR3[]
%&EYc*4@HOpX9C=`^n]_l;GZfjVfXFgVs702:,mP2eB4JcW<aRt+pV!VVJB/kU[<48#8H)rDJ]na/ZQ,)QV^nJ_&&(pm8>;=di]M:
%bi31S/'3fpl3hMi-9^WS-sl-$1WM1`-^)e6hBL;"3&.+#/Td=Y'qdp^FD)YF.mi@_"^Q;Yje5=`*#XdOfBfaZP`HlHX\NrjMQ9&?
%5l,a@@5#ML`ua8tFGN?8?fUXd-GlYQ2KjHAUL_,XIcP$[Jje:$Elq(''6L#-q.A\&EHDE^;t++e^^`\CGu5l]cZ4l8rje@%db'LE
%9eE%YS2eoLT"AH<oaJDa70be^L^a[[rg'c4f9SQ+)lOW7G1H!?i26r4eDc1,6h&"gk=c4?-(L3NB-Q_PVks+7YGD%(cIHnH+9o`Q
%<Z%:PpEOi*7(!kH0?,L/SQ@>WeY*^)U_?jQpu"[%)3Q\,j;o+jQZ=IQ$;Vd'iq;G##_Z/&ig`=oEDn5BPYb95)&IK3?6@Leq'p0V
%/(\*#$b:D8K2@*!GoK3A/JsksXi#hFc*gAPkd`]95KO7ZnQ."hfYS#$;%Clp8<m]i33h4+n(intT/Ll&kjf&q(-DH-*Vdn9rHs[\
%-XbQ_jWeKVq!7L53&?95QHZ0m_BRm845Fms%o]&(:!dZRSmIa]Fk7cVA6"V"LKA%e]ddg`^-gOcDJ;r/.l4Y@P8JK#&aXPU#$'$N
%El24IH?S0Hm'G"B=4""RcX)mmG2FJ0'ANdtcta9L?C*p$f-)-pd#A[4YK<Jb<JoX]8$Ge<)iR(d9%/,e)W6%!YY,->PX2KE"aib1
%iI/>QcS\\AT\&9D^+,E<^*D:.1MXMn/(5ACPqI@>+e3+k44$b;EsjPRqD6=-Hp)DpOVW)>'qOH_T;[`fW'm1*7;&UgB6rSW.T%Qc
%d?tntVDc/Z&p:&cS`]C5BT6r.7%GbqV\B.ZC?$6_;.iMKR3$UM2nksuFeTVAl@C=/j'-7qB3N\3RDQ5cpi]9ZM,n_q"eKFfDl6$p
%WC81<i0i$gL0E)p<cgqpEND+u"A70=q&(_MLUtn_X2TqLGbeR"E<,apj2P$m5lS8mZ!3*72@CJgr8u^uB$!dH2!05<*:fVdml-6`
%hogbi),8OL</Wcin?-5Gk&IA._W@.F?,u!P>PC_Rc'gj7,o?1;\Fo`7LBW`!;0kVk`usD3.W2\*e`Ds082IQA:q'\e%?K5^Z>LF@
%@,Lt^[DOUoo9(0#h!9[*WfbmQH9+sSTdr/S%[,$)*[7GkCQ;cGMgDmKs6`7i"/.%PJNnY+7cfD']i<^qjcBIG/#S4IQ?-;gbe>`a
%H1Cj-#OL3[^OeucB;[aGIba7Zh3>UM(;qMoP3+Mk"]WF(k#(2maWdI6UrJP^]l3oLqB6OWH!s#`fV$f8-tf&,<i1k7%M8#Sd:Xpf
%/k1j]m((gD,BI\YrnW@f@#JV)&6l;\ZJD1HLf$n#Lu%#Qg<2Gs<!W/t_t0u5f-/aoS=G$!GJ=t,5hi<Q1mU8@cOli&3,QWS[G!pQ
%c%,lko]8sf'U,KO@P?([%7\BdqtJ\QOU96uZK%:j.E8)AIO.D%:\H$Q!q1L6MXQY<3!Xb`aHsV><lV&$p@#1/dSFp\/bQ&QX*B?p
%,uWC<H(%YV^`[-HAtEouC_0!ckeJ2%8W/"8?Z4]5Hgd(X/+9GIeP"-?7eIB1KV]Q#i<r.#MQ58TAB?hA+'V^ciQha[mm6Q;69TG4
%#GIt@ji0d*XGT>/NKB6a`Ia7dKmS\lons_*,qW"']/8ftm$iK/+5<J!FfH.Hl@?o)j4ifpB0+Fs(3l]5^7bmVV@oG6JS/0H)lc_I
%.aaY"Gc!@4TaGq:&tLJ&B1h2'W_d=Xd?tVlVDQ#X$?`?^SS<Xf>2pRe:hMi:YnhSa1qoXjFf#eBBn9o#j4gP0a#_V9$@&F'^7>aV
%VA,TcJ0ui,:SC/CPb1hDmRUD?;$,'c`^A;A'=laZ6JKaG<_K:*_3S?Dl/d_!(Ei5s$_qoZ+nEC*6K>37h9=T.rKUTNT_oDGT6YMr
%j<oRS*m*^*GfVj=SJa*gMYIB(/b\Enj3uGdSBBXXe&a8c]_R=is-rp0BI3GOf3L_C;!-Zg1cXQe?X1"B;`eX_FU*pCmdG<Lq;p5C
%qUKMuHN*?UDu\pgYGTj'r9<O^I.]`'ouhj^l;tasY?ubUqes4Fe,TF/LTbf.pJ(VH[t"5ES$.=VBk0("X'\$hnPA%kor%i]Y@oV)
%1D)*EHMG,0I.cS[]0H(o?[_l+s8&:8fl/5$Aifq`s8)Tdhu0U)q>EJPbocu`mI0:H870%/SNCOiqYcm:J,f26s8Di0rjBu2&*c`6
%n__T4q7?P1S,%iSqo<WigO9!\hgYO[f3a!uhuEW9n,N%A\)7/"JN3Tis6t5^s2R>FFQo8Z56$-4nb'Z3I%oa(]2oI:jcd7s6hirq
%$a8ibNMQ=NDGq@trp$P&^\d:l^U(*g>sAhqilAe4B7o-uC&W$XroqT:s*jOB[s:lmZY'n24GS%.6?]$PDQnS<i(>k7@mON,r#:b(
%+;`g)*'[=`Sp]<i)Zl2t_Bf.ikdPJ;d#Tu9"G&RqN"`#q58oT7ai1"cO>BnRG_F3^60%DG;;N(t&@0O=XMAcM_=,W+7]=A'Yh`1t
%pFce<Tplf/FB1?YIFjmJhQs/:&UI,(cYC@jJ)i0g)F`d@.?;mAoAoDAOXDK+IWW+%1Y?nc87&5jFTtYV"9CM/_IX>>167pehq*i&
%3bjSdjMldLKoGiRk/QE:FBr,&[<96"$Oie$(Oa]='gN3/15/MJD>aIUr"0_b-aSA"TAUg0X)TjR*-6!6fGJU9+1TEU*(L21X^R&[
%p6+7Of0u)?]XH)"0;rDObDUIh`$p.)Wr3*c(Jrs--kT]ecVD@n-jrR@j2YU$-O*3(Jia[P!FBe5X$^9)NLA\A$=4D$c)GUF,I;H.
%U8&8oLLLUd6R*9s=JQla/!s8M+<.a@N%^h;N%@I"\]$^e&Efoo[klaqII$>0/s.0%W\1G3b7&.*9=)82o4JK!%:!0\GB$<F-1Xkr
%V*F%kGe'kGBr:\:GGd:[AdM[C#/&EE;uYCO$okRL<ta5s10d5(NkTRG3023JH0`[&*Ug?@/7*ZZ%f5coD[+iQ>0/G#ms,^fL'.<.
%hUpE9N.O=m<l2kG;*\thZaf[?P`EP0[W?'I>CU!]cMM`r"GpKqY+4soEnkg!]^X([gF#UFHoB9/f-BF=o%'"b*K`@jEb6$(I5/A.
%g6kgRl^MA>3\sCSo[A9Pbh+lS^7b%>cAW,Z0;/4\"!o_L?MIRs;tr+SMj&ATAN8g9hDmA!\BU.q]l@Wu%X^_1jMmTR>'Jt:qR&+h
%hu*AgbL_%rc7[NQ0e^KC)'C7m+4Em=^RsAPnQNjn#h8_`Y@[bkBS*df\l(I?0G4]G,(809;*_[NE/^WQ1\k_G*MI'lS[tEKQ#"lk
%\6M3>4nFPd]A10qFoPL<^qVEA0(?CXT0=;kBGM64=B_I9Wmu8P6eCfbM,uYo[;mVo-/dBfo]Ue`f7dT+__5t<,Id?_Y7&)tr4;C`
%_QS=F([C7*&W\eu`Ip"dH&H$nG_K'p.qeD\^FoGqnEZY)=$^uYHBq]YiR`cj(OfZbFlCs<n]Q\lp,hGc5i#>IoA3:&'hg3=S;;Y$
%i,q'K0C\g@Jldp[Q1i)Im0gQZn@HF$!j<!E^(7lDoqR6nHD0t?hAM?3F9PQ@)e\^L]e8rgd-I6s=5s@PT4?ZpKjGRA?0HF)f=OF(
%A3lL=o+o#9n]pf5eANW(EGBCQ9`@]#YKL^2iRcBg^JKHRV9^c/@M?F.r.GYuW]kL#c4CcR.NcL*393k>GpTESKB7#ck=iUsF!97k
%BG[DV01:^-`Bmr.%N3GASC0FT4cHd1^B:]nR\/NZhZ2:S?NJ^*b_c+HY7&&spj0.5Q27V7C&3Fb$be7g]&;n+YPZ+:8@Oi"i4m)]
%!hPKMCjL_@PC*O5;`eX_?Nbsd*rQJ_I[17?^bGT4@#>?-/c`K`liOC!^g7So)K3poZidNDDme3$"0bA2!ii5j1\h2^(P#ckp0Id$
%U-R=EiPZ,?/d/ctlp@oa_1#KWCG'TK7DW6VINM!5a]D"j[<!\p73L7Ea1i2PB8L"Jh-::?Ujp&hlp@oa_(Gl&&F9Q+L-eYlf=jU+
%kAK,;I3ccWT93l+k=g=JfS*]LK"Y4g6X?G;?<FVr-UY+4B`=X+^1e&X=qd=<XldH]?Z+9'1s)Aunj_7H8,_YJSMU)ic@osKVHoS_
%^+_.LRqnp5agRRk69D-*nWUo#U/G[h3s\LDedD"9Y9@_FYFoWFk=g=jfEG\"KY:Fm,HE;LrmDA0$c4M%]--HlYRA<S"CWJ/kQh%r
%_IC/(htdi"-M\"KVKU8G^Bb+W67a_pqcQ6f5r%uWd>kjNlp@oa_(Gk;^Bj!#c*n[:#SoOF3;OYI:%B#s:$nIm0*Jlulp@rNMI8<t
%;K-:'qgu$[_Cc,++RF]a*u63SD`.6oK.o?J3RkQkYXq#Ge_JH<r.;-\_Cc+@Y7T:UXd/HT$J,[&/dT'3m"2GL_Hm@RXkc=)]9!@b
%O))sh^Oi[m^4NAaSMU'p!lD+%M@7:MQ4VX5/c+tb@/Z]+_@DCobK]kN[rjuW\M[H3'dY6tWd`@Fb*i1-$Za):"_[9<c=4QM<^4Wn
%Otkd5NOt(X.GnV)IZ%QsG_K'p.qeE[!e+Djjb7&+9Dls3k$iS7?iS!H$bn=l](#%&Y8>-d7`(Y+X",(JXns*Ipbdn03&S*a-GT'9
%_QO?^hC3p$ktSR6G',)ar4;C`_QO?^hD'J)Ik/dq/UdlgE9VY+?^#_g;c>2ZndE2br4;C`S`3]s^#f.T^b5PrnE[rp$bn=lH5-Ig
%]7j@qn3skI6EFDdR`$_D=rKC5rt<-5$D+cClXpN1/^rs,T4@B/"^W!i?/TjVf6[WR`6-^"_?R[bEh=lRh9Y:BMeAEG><.mSpiYQI
%KjX9_^O!FJTDRf+?\a4-g#p#K"-Vt%]""pj3QY>;Ml([CjM-L3+I=bJ6F<@2U;_S&h7`G4ngCNX(A#e9^9>MAnu_#BG6g+K=%G3V
%F!eX5lp@oa_;6\oATu>&][WF#+kVKV(P5ouFs5M]_HBNfqeD9Kh3.MTLL?<nKiCu4BCZGH/d/ctm(FTFn[FP=HQh$q?l+E##^.BD
%rBa]*c.<_S#St:ZQeZcj2T]#k277KPs$\'_oeq(=fZt2HC:pB>?hu[++kVKV(P5ouFs5M],$SgkBnp(;V(URfRUVG`OD8On9`Br8
%Yfhp:&F=%d?nL2<NFs("KjY^K>mPTsfS*]t,XB-%67_qH$:5e8;q`DI,bL36DWa]B+kVKV(P9>%"RG.bI=GtugRehh%RTgRc$9gY
%=7WhVJr_-E^NM4lAFcY#]\\#mn^Pd>G\Q8kZO>&23.#"O(>CG8o[8N:<9W,IO1Wd,(uLcT#s/-^5/\H<%_sFeN)W_3-fSJ9J6cL[
%$c%4W!1(_<HYI<^"^`'n?1<!Qf*,O=+5**#5.ItPYF'4`28=dI8Nu1aeBEdEK!,Qr0)0arn5]B<[J\HV*uBH5!-SCq"^i-s]e$=o
%OB&dmYRk`PKX:ic8NnBLeBEdE(BIp1"9/G,T-]$<E9kodoKDaHYRA6!!4r6t!jJ"Z[JF)5XmH+ITZ?l6&##BO1K$rlS;8fu])_1!
%YkJK4/_sm<nH,p&^b,W!!:0ck]11o6(3fQ8gauUZG5*r:-_Qo33L4"8FeRE@?LJWBHG6cu?X!*^-UY't,(C8smqt:uONR_Hb`I4P
%oFEt&)Dh=ZW?jGn>^!g.s7W^PN.9l7n@:a\mRtC-Hn-0h7d/YA.;epofl#3f0Zfs<nj4JP>d6Uef$&tqDWMmiUSg7Pgt@[q6H9p\
%V6mQ/kR/CaFF;^(=Sg9rnj:c_cr!glIU!Q!$T\n-r[j6$iRe*as-E]Jq>VnX`H2J6^_S4bXiJkVp^NM_FDGmSS%nX]o1ht]lUk@!
%,)_"^B1_7a<YfTVc/mp;rnc_pQ<`!Z]B<pKh%O%WB!qVd'g>4le=?"!a%mYb%I`OlfRgd8i?)m+Z*T='*W<4/';0X<<9ZQ&Ykskk
%(hh:i,n"o[<Va)$1^1GQ0nQ6m[=%dIQ*7e9DCpYCE&a.r*p___:YQmFk!1^Ga_(1cZ%Zd#8W,]/UQ'aP1g9&RAT^)6q(/VVQu*eH
%:mO&e4]-&PNK;Pjp/!Zl/jesCZNUDuS@;[L=>`a0fM_&$5+#/N(`f24?A:?q]:4T=e_\*fQ?4fVM`d.<i+,+7Q?'3Hd/@RF6oK?.
%E_l!sd;(@P4h%s-f9<S_r@QQ-/Qf'L#M$3KJI8f=V74pobIFE]GE[!OW=ioI3UH6HOfs9\`1-AW@q*lYEZ2@#C"8CHR!a>KpUtiU
%oih>O!3LDb*qE=WI(p9gmlJ+;2]^PY^?^;f[hN?*D6HN+kG=:n"_#)uT(Deh5qNJ7"M[-TSdnUIRq(Xo@V5p+#!!J`dcsoQl&%UY
%7r+e0Sg]iQ2TXXg2p_sKCC]'X\0.@/kG`7gf(W]-pq5J[1pgA4[&r4DZIR6mjKq?sPm3ODQd%X8@(#U(c;#H7_t#b<6@Dt^!J6bt
%!W+]doPon*R2bCY];64j_eL>A/6[A.#-MNokDttS5T@JhLVo,C]\?Z\k#631c+V2"]@cd\BlUWF-h6I/",3AJq.'!",'W60(h;`<
%]'N(Iqc;#'.h%ekGp6T;c2HEK8+XsIgfU)<9hcGg*l2=[k$V$*MSi&@-/"R5.Vdnic(+9A6mAWJ4Cp*r!O8GBbL(U;?A\(qKOC$4
%k+YMqNXCapAAlk21:928=m0cf,@%Z&3Y:?0(MF'`2]CbZFl"a2[S)oul/$+/![bqm>Tj[P&8ZEO4G4VIhU40I6+Ta,,W^-1QS^VM
%1r8X+Rem=qVbi6Z0=EG/R'`7!L2eD6_`p:;%0R^n.>4qT`EM[=.l7P?l-^ltq+D`LTns:ko.fW*Q`CC5oNl/^\su/jF!%`CP8.'P
%)/gZk9kKcq,fc?+YD!?aKQ65X(+pjQ*+9$oN;]GtS1tJ5Qf;E7jlFjW9>2^TYZr1_:AS9lCoKAI$0?`OZ*!3an;YLP/N)I6.hD8^
%Zuq[X^,]p-)c_'s"dR&TP%p`)^jFe3%^1_5*Rhg5)7>$FkRRBum,^J;iIQogdcSft?;;dnOdC(M0nh5@*=eK,8a!L.)e1;@p37'D
%"jfSi$8V<7/MAH_UJ,Ii%jL?P7.@i`$JQ+CXMoj\G1iXt5QJUd=-1lhnCBNO<uQQSRli9oD)dS!Y;D*T^2Nl"gl>$)QC*,YIHD)a
%ZMkmTBBaD04q3kX#]oE;aoE,2=Bo68<DoG(*PKPo.al`7a_X#dQ6Of8j6_s-W%S`kMjuJId]Q8=Mb]gi&0\k^(84MIRsIillQgit
%H'4->6`rlc%Unek7Nu^*O>]<^$+4^*ngrt/m/"B9s'S%#lL60t;7F=M1jjJGj!l[S8#!?[+?`DX(Un!Q#<g.A8H6_"W-$XhCg%%2
%BJj:aO?8g)irFh.e]3.s%?Qk`];#Qa'\S%iSX2Hg:YWKnYJ"nHEN-fm,<5SD(eU-lX.WIPS^<8gJ"m+84X20p</KBY%GA3+[E!At
%clrMo>CdGeN5XQMr,k$j5P4Z$8`Ao<m/isFK:*DogaoL/a6&8,(Y"1t.]ZFpK&]Fq^S+6,C%ph0P9ii*H,!bU5Re/!1cKNE"L[%K
%Gh#AF$mUqRc,ZWn'ed>ae3?7rS$Z?`%H@1oE8TI2TOuo*NY.&4a450+8_tGJ_raWNIAW:1Hn4XGZ/dgNo5rF[3$ank`73iHVf;n&
%ZN#aa45`XL4^WW,?f![?)>l8S.%uF)qdkp,(`g5\TZ&K++3EbR%(i.g\,TV/2!o!S`\p$j\Cs_;WKY<oF<i5MnG?SL2?.b'1i]<B
%-88N\T+]H6LTR(M,n3sQ'fRq"9]!r+SH-4>&l,u='S\q?2O^R-JTUpI_]Sj#*DUlo0]5@2/"#m8\kpB+:DLQ,P+JE5%Gc;<')oiS
%6HI_Z+'2P)FdcP.[5!W'l:eXY=p?_977uRpZ@5Fr\ZIB`/LR1>?;)uO)%[d?,;u9#KRA2[3#p1^?DMZffC<9f/;&!e"Vp0%P6gF@
%bEJfaZ=tR3[-HZJAXfi2qh$OPa2M(MgaR!]%9%h:T#t(7l+WjYX[.7_b9G/_VG<,*m79P\+MKD(57S7c):hU5Nsf0WUc%!IU:%pW
%cd:,8mKP)!#"TsjH@(hoXKDn.9h_K@9P[OkJC$rUL/eN9+JqIf=hAclpkZ5qm8`%?,KS0nDafeL\"!uSD1ThV=q=nJZl4l&=Du_g
%3V:sDc3pR)@bo3XBeb"MdhsEJGPl>'7>13AK+M:"Q%W#Y93.mE0KIJU26PhC9HX#Y*Y7/h6beX:h,%j:<C7ks^8bd5pOLB-&hNAc
%J_\0*&7Oe(7TKH`B'5-84Gsi(U/7Fu%[nPB)-pr<3Z#rViNY<&*KMd:c@3V[e&iJpVuW1G#?qB.b"qT+XaH_@\XbPPda!2cH%o=<
%7d.(&G\1SU5Pt)!GeP5jht=m.,5?l6o:h"Qh[-VupirA)]0&4U8AiM[\E$cVms('f48:W-(B2tL2B:7g1FHXIjW/moBl^nYAb)q<
%NteGAh%b'RJ`"cdr%b!f?Q+%H4<=Vh:-ih8luS'dpk.IUnD73u>([UWP6)lV<YsDhB_!h/rCdPL/'uX#ZcZ2-#Fi_.Z13nhiP>te
%r+R[bGfMXPHYR1DfAD7%m.;T8oStbLZCg6$A.6G1cbj:sEUtdI2i=r>ih<2cK^FLqP\2c_9MFC$F*O&kSYp*ZQfE37dRk2k72%QK
%_cEq2'=U9k(i*:O!QBksr7lcSDm0;33IuChqi,d`_!:`'p=.)S)Ko/5hcbCJoSJu8WN/$US/BcfB"mt"gP!-_85+c?^)57qfj9D(
%Su]He>>*P%b@Pk/M[;rS<@6\r7t(,Y?iN&h3?ABV\]/.84@AJ-)jVnGp%-*\p/jT6_=fHjrT^(b/\<BnkO[j@fl(CL`kD;kG5]=8
%Jc0"-?Q%p;#5jlTIV?O?:OBC$i!^dhQ4uXRnrfr;)uF4sS2`^sqf$+2C'gg__fOsZf%CAKDf<Mu<9SumI5S1<GBH[.\,*g44'+OF
%#tHjK_>skGPq^>1Ii$&n0fQtqgdtaOrJ'-9YIKRQIYJ)HIeq@FMd0rEFD2k]>%A*^RTk%Vm^Eo'omnr#HTT%*04(8#;U_n5$78Qg
%nBBs0mkkR\0+N:rOm',/hN7sA4ab^&V!Y"ZjDQ4'&Vh"hd*=6jGgWNO/.k>!g%e'W+6CHEE?lOnKt_gK9Xn6dkK,AsYFt[U]u"UY
%bqP$`8#cElAF_#d5di-hRC7uY3l&,mr]/)Em>ijcn9E^2rhg>n+*YJY*lW*j"/Q9:Y3!:HQQN*:Rb)?H])aOS[/XS(S/i%J0@C(]
%Z#0GRg^!M<I7`08k.e*J5M'j`QZi97m."E*&)(B>R^Q:%/a#qslF+%j!S[K;W^lVclYl^=(;Q+8SOY)FU`F#;82'S"O$sA?rtY0X
%:g&4AK/(#^`?CZr$L6e6hEVB5Mj&r!Pn.Pp=53CGdH<6rrU/H"5B^\BLfpjl?\SU&BX7GBM\=_@!e"BWV:p`LXY2ntpZDG#dS5uP
%b[^=X\_W^!=#W?/(PmV97_WU8BmN0@WU4=ZP7FtcWVh92)H[&emq6t(r:jjYI(gTE1u82Vq>Du,AuketVXII9MtbIL^Ka=gc+>&e
%5ZVV)F%s7mkP\ZWPN0L5n![UV&)-(cm6*Qn>NCkrbk8Uj)BNYQ_'867?[hd]B<HUD;r0=hVHmL-/tRsp)k6`bp)BKN+mg%phn&aR
%8)d&'s8W,]5EJARa._2aVFu7,_JPpeXF-+SrG%DLfF*fmZj2F8l9;0[>nL0@XV<@!T1u6=[nf0bf>%,We<t5$KC\"$JB$fGqa"^C
%d-BkF2t%da2&uQBiehPm&)u"_r,'(?XF8^GL@THC[DS\#S[:U.)[T=25JR)r,XMCspODe,MG<tt5P+aVp%A:[+$HUKhgY=mYJ9o0
%bCBQggOK$sYJ0nc5Q6,toC;_lp*9SVrR:d>P5fdrmbscZrpTm-4oG:tk[4>OTEhj\poiTRLT\AC4K[N>FZU=l9Z[J4a4-6jf<X<&
%JqOE-ReODok)U&M?(gTb"M;I\FuGT@/m,].30`e_YkHu90!GYC\@G`A,Z>ca5dh[Uf?I5'pS!@8OWB:Af=0L%q[*6]P3e7efj=L:
%HnYI"KCG<$:T2Ln<H_`S)XUa>F44\A=+FKALY\pnd/>GDGU8l.[+!&#iXboCntWQ`LFCB*^F_9^EJ[Jk#h4MXN&4;T_&3#7jV[t?
%=!>&XOl>S6)?0#uBe[B.P7DX'=?otXUE#MKI_"2)mt6[LM;Q?:,]_cg;@%8'#^9@DUtB'cg$(0;3_aTXKnE6)Sl4*@,KIo_/.CBg
%0j;'AP2h2.g@STN-$g=:;HA!E=Bn[2G=`%uE[XSV:Z.I-Q3R^Bol,,k-cJDR/:NCS:_mZUO,c>rE20ZqQ+(GC6ChE8/0rt=j*r7Z
%8f-I-`lY@TouDVA4TV/HTp2P`EjXr=ZgaA`>=hS$MnF*B+g_etZEl1,NXA3RR%f9)Yd^h#V!n'7j%pd)%NPH_@_\Feh$Yq-,fPEJ
%p9js5L!,kF<IU-R<cP[T9V\"HQro2sYU#QO=(Ht72j*9<Nk`B5!%d_!X"\bSQm>AE]_IR%C)*"\4TYY^O[W+K\lc`0pccdsL^b\V
%cX-J`Wb_t](/F:/@;9sfEfJe(i5b:2SY^,>*]ghQN0^kOY:3O4!6OP']cR_NcY4Ra?d?-Cm)"moM"g<pK_:olTsfK<R+g+5#Aj@U
%*Qp8p3>n@d/B^kP1Ma0T*8o%*a*BX38Z0ha*01Ra8mQKB0b_3(O\ZZBgeAEc9fBYH:51KO$:\,Gr[^FbL'T"CTd";e3O1*Mk$r\!
%36MI3&e$H#J]IBi8s?Ki)Ah0PS'L)7Ua`i\[9;46;-19HB#6_bECPPEKYrR!p.3[&p)J_-32K,u]gi0#CpNSNQ`)bIg%r\;3`f>4
%MV$nOkd"N<Bl6)44@e/gOi,^OW(E&1ds>!WnPA24d(2`4GE#ZUGid?'AKUId"?c*i25#-]*/W&m)uZkW"[lFT#WK%pc0FlJCCaR2
%kQL0+cjZDW`.>"WML[Y:O'f,#0,9%!g[F#>[f28sjW*SHoFlI(/\1&_qTY"b9C^B.5;"iaMUCW?^\?]BW%6!/;/LW7TYkiULYG1(
%hP9l+36DCO@]c/Z4]3D(ngRG=j*;,=Y0rV2Mm$Y;cgpj#_TZou/Au>k5MO4"d>8E94U`CJZoAF&5rLI#n]-=COCfgF=FE<7G!'aI
%4!:XZr6R+)if&:o5L56LA#Bld34Z#[9J1$rf[<nXDR'#JAt*W9rm?@=EiQ#.=2+F5*ZaSL"?;$l)-Vn[Oe-".0jq-1Xa%b(6QA2k
%bsR.I`o8f45",4Alepjd34NK/Dkm9]V,uAGJ'ok75hA%rb"ah(6Zqic0g+#2%opnBjn)614]-P:($$$>HEVQ8WotPPk7<jX6Sm]R
%VDp7o%aC4OPNKg[3AcrN&G!@%ddmD#mEuF$iG&QC$LbOl7B6N&1M$aG3-a3jN=*fNj%/5r`G0[R4&&AWhiV)cW5+s=H\\W[OV2r:
%E?;0YLPkGtdX.W0+0*cPHM:`95>^If[Jg7AiQ.<E[lY(YPTssUBDFZ]ll<RA*!`XdS>#k&?Z8V=WWjIo`/ZmS=b\mm,@jS_`(phr
%i.H//Fen5?P`4'r(qQL]:CF-97?^(Kc+:7)p$a^XY(k4i2is@GD&i`-E'bDb:gmYk75TF%S4pu&@C,O0(.(sqm4dHZCDq!5Ah@@H
%U&@ABRB+CT6ua@fVKC+HTOgF%$i@Oc!e_*`_<0Vu>,b6JL!DpI2G*!%F3'<*`K)GO&S@"-Eo;Fd<J6LA?JB4:NXMoE,S-%D7'b%Y
%jt&=U-mF/KLldjj]S,)5bhEd$i+ua]IK>&I2-gatUT?end]<gu*h;(&>uPFAff@03KgGB_N4/@O:b7RS&un8MG>U;2%f5q-kn#T[
%R=8;fEaHRViYB?]?8Z8I*Rc''2_ifC].-E(Zh_IpFU5iUMj_oh?C[m]'sN_&rpXlcc$jVp%aWpJh`[QIS0%n;0S[ZUlB=E,7T-j<
%RM<]n/!g;-fL-$`Gi"X0Jb@PqXi*e+VRI]18G![ZGhAl6]hc.5S''si,`rg0p,q),#WVW2-f&!M%*jW0@;:rD9u?%fr`!o2(SD?0
%'uBelHKPMUX;>:N6A\1KP$/VEl(;s0U%P46F#@f0*e^u6,17H2BCBPl?_pc(.b5SeXDQ*0Chf[fU:"SjR2bRmELqM3/[T[a3-8dK
%^3^u]HHQ%u)uAhj=X8:_:5tJN\fL!8o[e-60oT<D69<iDED!e+Y9d,sTYWSc[A`BJTf%=E:<%Q=3)iDGn+<:@ch-2T5=^Su=?46j
%6`<&![2&\#bPho#%tO<aK$Wu`&DW=aJ`@^0n9R+-Lj%_JGQK)`\0P_-M^l,l9sb\HX0PrU[33R*RL4,a-qeAS<q%>q[h&0Ij<*u1
%+-C$N7!]F,bYA[:p3,OGU*YbmOO6;S,m"bp$_i(c`%5&%H]4[Lj/b-HD9pH$_a6c;NtuI>g-S(<[D8s:]H8AE':K7qDCS$Uos6q@
%)>W!*/C(sUF&?;1K6R_(g`^h=dLV'D#4rnC^FniB5s=8q&D>ZK+RM1"(;a,K'Q0?@S$sZHI@r^i]qW@TD=;R$]Lc4=Rk6>_>LjR1
%XTnAgNY$k=G9>fWMLJ-/=.`llkp.C4=lCg&A,ThIplM^\rQr#>PQKrMmKpt0*MD>$1Z7=%r=]L$n(Ij[HWr28E`+mKMlk:_R&3i"
%JaW013n*QDr(AQ)'ahT2*67G&a9K8;E;nob34h<`Y+!7$l21`I]^?7_`fj'fi5.XiRa:Hm_b:"p4ZLn::)&`k($/,]=mJ8s5+]-W
%Qn2KhUJa78j1<dUNYSrB*^?4rlAnmc"-+h&#PCQF8>sD\J7,+N=m'@/_Z'9+*rG*kj%]9::0NM3F".]\nBkB'KnVl"3<5O)A3,:H
%"2Huc`tKja"Pk;U5(rN+i'4q%%^2+\bNIr\3k3ZLYJ9\@o'g*O\:W&pl]]Nj5Rf^%),:m)"'&lUbT9Q?bL;L^4#q7nHoR3`%Llsc
%0kOG4]fG\q2KgsHcfU/=+_X2b#Smu1`6H@$VV[W8dJ`+RdA,1eEG<K#Km!q"-IBMWKj#Dol!C'&hKTs9O7@6(CL">p+2?@=Cc2m+
%27=CWDi"@MlFuln=V/,aQ45oP3Lq:5^_X%0rbjK@`4k<`0VN+eK/SNQef>!+'>tZ53Lf);+G!626#e3tXBA$TU"n@I3ba)^`D/W`
%s/HP%`^QI2DjJl?-dLf(cM".`\c+EP[l>$$E'l"iIN$3GLY&##S*K:H*qIkMJh><T")&=EJ1#HF[3do*>uK?unl2dZCus-,jsXcW
%X7#Aqpim=@WPl>QICEW#q7=J%I-PYP*R(O%?O47XVtEg`4WK7&`8R@"Ve7rTO6:l]E/4_nNfKOF+X1KN8KK1PTlP`hQ)F]DZf+-=
%J'CiSgS9M0c<'1P^Z22JTcY;S,Iu`u&Pc#?cC&&Nbd)<[,#f6136O3%_D*3#A3/dI-TtfNcq_3+>m7VPA;,)(k`WL[EaDgjRqHhk
%]6Vsp4e%nX%RCTd:8S5pZ%JR'o][2sgrg'H%GPd9[M?8\gU?]a/n:?II6Z(Kh*Q5C1*^oa+RYc%n+lX6[<^49MRcd1$!J;Ema-7`
%JS3>SL>mueceZT9G.b@Kbm\Y#pdXXi\#Vq&=0XQCO++V*Rr2$mmmlf,>Y=neTC+eqG2[7MH]?]k(k6^K*F<j^SF(I.-\Qs1't!E&
%^AZGr(F*`3JUg!%#J(4a`1'>uqM<D#@J`#\+'oIGG<GWsr]Dc(S!)DDaA.9m`aat0,(&.^Ot@YBn!9'D!me<W$.N+,d!*,i:#VK#
%M!%<TE>Ku*"W<!,bV>Y#O<PoHiNq?lY-YMtJ"1D*h4tDM\+NNs#R?#A4i/-'#\Zbu?WQ-lc'<Emq03h(dd2GPc`^qIqCg`RoC]ls
%qiBc'=qSM_K>795J,B)Cs75RGB5XBkn,C@O?iK<%q+J@;`,teMRNCnp]9s^S`Q9pMfJ<$mM&p>XFA*0D!i\I,p]&W:YISG/8,\oA
%IeP-8E?6tggfqb`s*:[>iOGRC^H5Jm=tPaD)`hn^LOeECD?dO^6sh8#+/(s@BUQ0&RA[muh8*=6E-[7d-$uo[`.';RDsN%r6J_Y1
%=bb21&KrrUe*8,^+2:8$i&-T37]T4T]fl3Ae-;6,:*5O:9oX%gi9,.Y!c<j[^]4(WjLaaQrNN;gXHF8XH)+ocT>]<2Uk_5p@A=G/
%j`KJEK$7ULf0q\.,L+Q2U3Hl@T*DrT6F"h/UN]CQ1'sF?dT)oC@+,:"XhfN%H#R#fYV7FT[GXG1B;$T2K>]hj5;)sUCG3mdm+JG\
%*HS&oKML0d[OjaNCKg`X7dQM4M*"`[Nb6*o%?'#1XJ:&o[@9MDOmprPKE[Qs.P-dra`GVR[N1T<)7nS:IIi<V)!+V/o@#_:(#[R7
%Ve>i'drRVB:EQtDoFVr:cZhQ=M4Y)prr2A9rVZTV%sB;."f=)UN+Ael:)Qp^@s>cRS[CuE1FSD(#L@GJ#Re76VA=8lOMMpCnn"`C
%ci"Ep`dIOeMtX9OYf<E[['+?">f^`0&5FHikG)Bf!Fcgr9:VE1<t0\P8JmGQhZ=mresTZe[@`+B;dl"2NBc9>R)*fJZ;P^aKS)sA
%"$[XK2*^s-["8:A_\u-TC(>F>__C5Y="J/W+V&eXTFom0Lp(C)%W8VggrKLi!R)2\TkFCLiK=WCD?4mE3A7,);9?ETb%=)GkGKSN
%bMY?f,FThJb$Ij40#YTMlmS!hAKFo_nce7%:#+-X]"hO.UolC-3MqO-`llkRTuoHa0CoJIGcIQEZS6g6Mk[)A"ubO:Agd]QP&,/<
%&J`&,Qn8"A(Y,R&/i1TKD(>$JbQApA-uFU'CnWg!*!-&$eN@+5j#qE>5B9LD8$kO@l&P?j0Wl+I*^,QXi58-250UCI_rf9>@f!R'
%+$hjO@A2N\^BDjB8*"[KRr(;kLiNu1O($`<=e`5#C?ksq45W<pcHdnglq:]&r>\'qdaMssUX?I)pN2=gKP+TZHhte""F[>!T)i5V
%IFGnX@HLttH/J(glLCIMJ!]1o$CLhYme@n>98XT<Vl)r0j-B<%TmL%2@lc^iJ&R<>FEfQI6DZ<[3'=,9iGeB.m'3<7QM[NP(tM3T
%TO+<3^?+SF-fAJ]_Q+L;Kn\p$N\FO"`L?VRfZ@#S=a'/olE!oNjYVuKg4,YVAWd#%/uV:q+AAY%P?b+hX"Rt)-mcUKTBt?F7-*9[
%T/8TUgSB<aIS&FFO(WQH'ACN)?l]p;5bpdI[=$gWG+^$YGdIse2X\M2q"T[Y"B"%N.+%eRHes5>$N^l`XTVVYJ9ocXc7iq2&#R?o
%q>XilVI`M>CY6!0*.mI44gdJqFi`3=GY?sLB1ifoHGN;#eNuYdU%PI.]J\61*)")BCC-ggNJf)-[B,\(q`]N:$eFc9Nq-=tIGo0Y
%/,_s;E-(p%UWQ09oYX7\:ecd8m8E]Il""\'7e+J?C(]k0qr&4_pRSML+0JcD@C%jZl]3CG6"e<pk.r3%_CA%']RfC_9QG^'N2k=%
%`Y:Dbo3-t.4[_@q)hs6_2NA:\>K`J;lkQa_:qC$i]laE$1#qOt0HirH-CNR-_G(7Nq:+0Hl9)6J,Wr97FQt"^'ohu+f1KLnEl^!'
%+T0:08#.oK\e8m.Bug>Tl=q0\[SY'ON+pa2'gCAhi]@30kDuC)&B@eWMf:IJ-D*@^R[o5BT82S52h0=G^[Kp4Hh?^gYss5QVW\1^
%Ufo/>@0)=>S!B5McMnG3>CVYEZe,#p20La#!K.QYI:GKn`B^`d47\fA$6*gL^^8T:nI@GdYT]?:5HiV,$]1,C-Gn+hC(d*eWRs+^
%cbmV4lYuMO?[,G;73oc%C`IN]VA;j#f0sjOI09u`%tC,>FLr=*H"OGFZQ*E>?4`TbO!;&07Sn?];0:-bA\uiM_XFb1O414MM)bi_
%WEn>'NEL&m[us0-ZM1g'."*VE#5;X[-d_/LpVB@@o5Tb'a:bI`3pR7d[YsY.>^r$2BiZ=no>J*=a4Zf=N-`i&"FZSgmo9e9b)Gag
%4q:K^I29sPGr?1hLb"8QqJ;AE=W-JV0%Hi.EI%@'**nAO8bV>.4'mVu1`N2Na*7FTEDt[6/ob72r^\]E00XcG2ib)NJ8hc6=PZ!"
%O*7*gK-6GWT?A1OMHPpp\c"<E^ZF41R/2(T?aTuk.^REkaZ'1Rcd1'X$EZ#LFp^sXq'f9LAT%6`GsYKB\_7X7;I]TlSEj:TV4GO*
%i9,,a]&<>-*/Z8uRJ(@LbB*K*!dCuWS%p$9/R^GdE)CV\!_uQD6aK6:b?@]\Rh!46Y8h+o,2Y!TnmBh]o&.NeIZd'SHkO>\R^o*4
%/;sl60k?j9Sr=)'+i$/P)Ijq-[An[FAldt9G$sh"BRu*>DTB&P_'b3Pr<N5oWNbR'HLtW!mlB*_pF<2UmPgQ!P(K<ZO5%WUD9b]o
%E*<$KG-.=CI/-X)YIfSLQRP$:NobPoThJ`f*?![]\#Y72ZbFNZ$2a*tim!GN>Mj:5YS#CfBH?[207i'#I8mqL@^7M<.-"RH3rd;n
%EK3ufI/Km3%`R2efSt#4*O2@Nl@(dKHo#Ru`S1De:@cr>OlfLO?uhF6`XU@\E\L4OHli+5bb98;+oBY>'Cn?uW*D:,e%_G5FRPmD
%io)u'<p3-H7X"=3jZ=M'8.OHU'Gl/PflQ+6Ls)jqPW^K%P@fh/5taV^]brhQ)Y,)u)-hS:O)O\;1MI_.DAB2MGRA"7.>TkU%PkSW
%4;;*&<A`E3J!=K,nP#!V;lJ."5c[JK9lm>g!uH]qgneOG"h0$m!D2<K>L:5WQip0HQC5iIBFE(inc8A3MuA3o*JA7%A66Hf5mf8%
%cRE3ZY_IoUrmHus@kFpO6nP>#S]r!o90_Q$0+fB<:V7QAHcI\#OccGP5Xq5`I[o?aMR(G:dU#<u>BTc=#2V,$f@mgL89\jV#R),B
%D,8_pS<fioZ2Nlj'H:(]='828Q3J:2-5J0)b;*\o=@:UWRk=cr-:5h#AUPb6PqbAuUZiXjVi]#:Wd\2np9sG%atd:!GRA/WL8BH)
%S2uNoma_KD>7lq"dFLQ"V]`&n9P:'h]*m\ilDf3.R':ch)#!-4YF$QE3GNbQ.cum]5n>]r4QkbHDY;0O`e/KpcU,I.&9Xi`6<SE'
%*gV1TH#0c;!T\nleS69p#8E.0_RqE8MOk(O\V`Gig&b>!i[sBe'Tf'LK=@V\C;G2OgBklor`n&n;lDunWS2*,Z)5nKm;cG!+Kq8Z
%c"#0-SE,pT';+?82D0X<V?SOM>4<p[DI_$,6c.bKe1oJ"Z3il.3!+c%(XE<_32?q<ns23]]G?>%>nG"X'dOf7=fFa?U"j@36ZElN
%PaK8pPMTQO+Jg-cY$">E$;sKUeL[5feAfgkrTt2RV9c\Cm&LIJ%EZSMed&c7lo<Y7o:rj5^)Cg$RiV=7;DJWE;m-l%^p>b=Cb<;!
%i8.5?Xu,B:XTN!Ie[BIW,,-qJb=]=`O99c/Hk+69f>"46bVjGQiuGp<qU,Guh7>!eNfOhiGiR$]F15a[<u=7Zp='>3Nu**92MR[6
%$@<,gj&<CEA(khAl';K`kAo/l,u(g](YY8=bqqU*lF.mU8V/,PLG;RI86hlfJ-]-a$LeWE3Xa=XA-co!,Li#"JZGt26YLBZ]B8M?
%kZqd.(8VCbCQSBVMuo.]mM?>P69%80`!^<-d8hm=[Nqm;NB_>d3h>A,m[XasL2KqMEY)AefmNZ)52cf2g1hc5c8s^;c"kH_WXabP
%5/JVA^.a)q/rqCprA='AP/rA"djMS-=;XL4_"1B>_j-=*^:djn^uHWV6:SMp3>ggWOS;SPc&DoS'YJ#@MRt%dCkMD[A3(Sq.HZ+"
%_(EoU<KXq;##WB7'sHi5`IW[`D)-*NN&doGfPm9E&,)%"<9f'@9_K\u`.u_nP=4+ndpEJGNWsaqdB+<\\/E3+Oan<c=#eZSI5%GF
%E>0GN=/As*BQG^#o.GjAPETrHnBZl(8#&=UesZ&'q[.ehE@+TT.a0L/_UUOu."bh[gBMiO>3Me0;s1H'#sUVl9e^aDh6/e]C9'^q
%/:)s@U(JZ-F,4A<1+q#&"gV3O$T!WnNXXT4Ef7>7rGjLTQ`5oJkUMQh(FLKu?039P[*5;FcS3e8150@'NB8p@AWon*E)`'EK\Hp[
%SdUa?YVI:'?dBmU+<#L4q7=FDB\if6@ZVuD%t*gqA0*\CpNp1L86kU`PQYcP0,E(bJd$K]Z1qGo(f67fAM*t[HHL2,a;*#.9sbZo
%qf/Or+mctsV+Sr!D9Lp>1V?+FRlZiZ1Ni4?lk4o7:o:niU/Z&Y;!am3j4`m@%rgJ\;hgIr`^?-!dh\[ah"])Z8O[R=Q:3q;0o^*t
%6fo^o"eq>[9IV"$<?\7J:8cGr;8AA6<3-\0-kB%.?&M_-V<7X8nI!s;)&3n\nR?EKPd<<Fh+Xu&&;2^aDP`;T0-<k/MnsELR`d6]
%11kCg6NbD8H5X0VLs/1rFR]\Jh$4l1l(ZFG[527XamPg2Ub\%`OGb-;BVQj&._5eP]_c57;p2VGQ9,cX'e,)9)9:=t\g_.W?A33f
%M4K:-Q;Ie&*N)3F*)19O%cNkYp1>Wn5O."uo7YP9FD=e)L6DTLOH@!B3p4G=-TTp?U2%Ld"#ipVI]L_Gqhu2@;'^JWdD7lE_W$/^
%\@S9u'lj'_g82/2KVF/eQk4]DBJ!bg,_oWC=#:lk23rp#COeD2[@gmH3mJf-/_bWTR>kSo@T#>RR#`K[]Egl"CVkb#UZepJMiL-H
%/n8dHA9oY_,0?u5+X'/%G`(@u>8N5.jq;Q>ZOp`glumjABt/N>Amstf/4(sn3VB)%32J@qSK/sQD:"-86-/(BK'nBE%=LMhJUU6/
%UECiL9E2^e2(.lE-^0)XG?fE,=)'EJ=Rt;AJf!_6(3+AaNm"u1IJ(uICTu!6OSGO2/@Iq-jH$Au'D4q?[i^Z;gO_o4i2*nYTrF"R
%g>u,DGtPYe%:ZGS[tK@5]_a[BQGCM3%b='na5MkRKYCT^9T7)HZ.l)&D;1s(3<&ub;GsclP6u]F_+C*?[FO?G!=@T4BGC9E/BJ#_
%lpT[e=kL8=IDYGq0F\so&q&7MU<o"pOR)J3`k-cAj":3V5p=]kGL`+NWsP=IEldcC2-_t,BVtQ47WZsFTc7bQkET+m"OT-n6c$[d
%E;$\UHb'>u*u!]\SNC9;B2=j*m?<XUjg$lC=qkq3;HrDoFl5^EW'W^q0Fc';0?da0p%6'Lo"i793'?`oMVTt*6aS;$dB$[#cV;(N
%>+@]D$OC1*B(blI`a1OG]s+f]65XHqY=Z7>>7i2:&N1e4`t%Il>3K6'J3A:DUW9X.cEe7C[8>Oq`XXhD-RV`JW".fKp0)Es0^iBY
%\;0*uob'+H'H?!;&]-G:jP`.%4=#4_P;o+$==&rjYu+L4\lr7Wa(Tg%/01n`BQ>cOjNP$C/MaIfl[r7QJiU=X>@%2h!]\(C%`/MV
%,cniY&D5UNUHiYjBH[Q\F*L8G$XKVQ^p6YrR;qpDh,e+H#PA9g*`Fs-+k]f*C/.M%h1"-p^%nNr);k_FMsJ6,>6-@u+i5QObd^'@
%\6`PT#+93!ZVS:CTiC&jZfO;[IWFLM7ik&6(,5A'\Zl![/^ed_]`eU`@HM$m,sh_^]crkM=@f5!@QL+Y@ZC[ia%0RZ9PJ*R$S8UH
%U+O.;R<snSWJhet-Oi=#>S#LhgF4RF<])=f\hVB;JqIr,;7MF[MP"Rg_GcJ)X!-TKl0=DFg[s7eQs>\UXg&D1`(%,9min(SD.eo:
%o>2i81Z4#`X(NC7,#?d5CK\[hZQE4bMgAuN)[:Cu[L==t343-Q'HQY:4`J9[KdB[`Bt"cMHSqak%%ee#.@7Mb.<Yb=_C\RH\ukIF
%U?dj['8,)qh/#g[X><3.@b-TE[4<lA1;"7=G!uJ1`u&Bd$Eb\T#::U5bU25hqZ)S&TkMG6Q]d[f0]Ah_Sbb[jGm[l#7&6]YFd;$=
%(OBgu+qd]p-5F-:bjnM=C\D)9JZ/E$Pas+N!/A54:)2J`Fq`r242)%h,_S0\$O&E.LHQ]bl=+:`S,WL'J@[ed=hi%R[Zs6n-DuNk
%?n*DB^cM]]Z:l$TI^Ki4Rg$I#^$;;KH/p#t6aSqgo32t!9^GP2p"1!81.ga(H9%k]JVH<:[803Z2VUHAe%;)5jhSY^6U>U,C-a<n
%6,?P?P8g_nPnsgj@h2#C6Y=QjJD)IR61S#?Y.j+BdB["e0Kcm<4U_5J3^He8="KD8rQn:t3\MU54(;m7mAn@7@MajP*Lih5%Pqf$
%$]D%2M2U#RVOYYLJc!9O]R+pM_YSpHRVaB&]k,Y#7q*MT\Jc<FH/Lpf*C[=8ga;heJd3S4HbW1[UF;72ZnOH`6INtqlF9X6Lp$%W
%HX@\1_<IMf\TqT5bt[q7;H8(Y+ZE^>G^!(D&@/%+]JkHld&ppNgb^Z<;F/]?)^#Jf-`bt==btlX"M1I0l:U:E%@<33q1)eM)%)XC
%ZT)U,6Rn"dW$O5?l8T!UKOtc,VCj.T%a(5.;&sV;1o)!*@'kW&]r8*(EhAjGZ"C\]3@.^Z^*jo3:eeBda(&C<V;YWD*M*k"Q,$O>
%2fu15,=$ruj&21=c@8]9G=k:NqZN<6\lXO02@,hZ)25?LN[Vf#J<7pYUQSGI_i8&FKe6<K\'Vf/$^],Q6I6R90(>or*4W!jj4W55
%CN-!UO>%B<_#c2Y>KB@od2%nb_BlWg[DS^':/(3sn);T4D:feaomnB/d[5Z9S5`&[]<:?=$25\MG-rs]m\>K3GfC79?9c`kXQr]a
%!PVlc&0[&Q&`5M&?:Aor'6q3k>'F9;,XLY#)dkXI=F?XF!d0TF#i'/L#=l#9^"Z6<l\N/cD/Of(l26!e'3IcYcm37Pg_>qnfLsB[
%jaoY2q8*_$-@B-k!'.&lqA?*"33S&+b9"8W'7D\W_(mi4Y]B4p!VUm3B!fOmmV'VoAt!s<*+`m%B2bU3QS(rRZc;*<`'1emOHl=J
%mQ$4$4]4-lc4O_d0r?n)RT.?<jIr.[M$R^AVECsB((Te8o>BNR4<)?&O%@=ENU+JO4O:k&Cn4;fd5i7!f]hDT9o*.H87"Y@Va->;
%0.8NCG-DV5bcKlMjpB/2n&3%Bd)&^eDbu^Yc/C1n,YXiI]&VB`4>!!CF1/G'qquG6lupu&#(t_BbYs3i.cE0$0eMG>TB(g9BP-Sm
%."cZ81g&VplQdEB><Kqq:#?_a2oaY<,h+FTLWq#]lK"P*79k/blRo,P@#&lKqK<qLBQZ6Acc=SkKkBEVLl&F:nu`Z<,W,WX-TR?-
%`45IPQTbd%+r3SVA:1FS7dX>'/";UiVB\qr$0RL*,<U=!IQ\'AZ@QOZd`7X;(a4+?[Ynae"<:;IV9"!65?>rhYR7cK8QELTa(-R@
%1KGoKrne'&J-Ri'nh0_C,&AQ=@V/VMcL[MhKV0qi,E*/0&g^3n"<1XNAXZpRFE054CN0m3glLg><^'6qiImcHmbq%`0&"tc,JKG8
%rW8Dtc2'.4buo_1MNTq*Qap8B@9s90U19aT;=oCX]&'>3*.+Iq#/9nC`*W"%ATZrqjWc:'YT6Isc@2,YB^FfHcn(0B0]L_tZ'/qW
%Ql5TMo/)aaarha"oh-#`g\Gn'b;"JT0FO@N-Q.,9r4Ru]qNh&`DA-e-[N/3'fO3:bl/OM"WR^AEHudjJE-?7G/%eQ\08I^2-r2#k
%WCO$"=/i;6D[1FQnrShk$h>,mIgc6.G+hnu"U]p%-p+L,bY2!ZFJ][t^amQ(aI<l=A^YI1dQ0l>Z.65(Dl7)3s0L!hpJDp>S;E_f
%3/]+lK:cs:YfO6/Tq81=[GF4X_4'ckX1b_&Z0aHPHoL!`cn>Sc!Hc-GO%6+=!<P+;JIuOZVh*9^4TTG)JS]V)Im:@+K:@5VF8C&Q
%/Ob*,(i_V&no0f3iaPoM/9^QOOR-hS*QL:k>Jf#<=*!(AgCOjrG?9RY9c3KOZ_o$3M;ao9DM\#/+C#ke>9h=h<Jt1Jp@;N@5^a7X
%g#]jLbU.:mb9"^?%k5^-9?$;YM^3bLSq_+9U"br5fq_,j0TN94Nt(MW9t72ZB*J23A;Q9aYBj0F_4>SLa7XHI9(l:96>s1&^aBG0
%R)#s@\JY1:E(<I,*ibdI1+C;!e!f7V,4/>]PU.C*T\s3OC[b;Jle5>*8IdsAB6I`PcSs?5&)t)a0]AP3N>]Fi6Fsg2K$?B6[7uL<
%']`RFNEf?/*//+;^]QW'R'arrGCVQoo/52"YlhSQ?)frDF-?j8E<">JCQRTK74u'9#o(59;O,RB<u@KI4mI]C\K4$lrPmLYi"egc
%hn..b/G"J/-o25eBF>O5.3a'.&LmLn@\71hj#+-9H6.mO@*MWbSrW:cK.GB]-/.\&E-8g2%rP0Sn7`M0J2%k)bV`8N*\:f$T(+-t
%OJH/*3i0Ni(TKA.2/q"T\I:S:7Og%D_8][\p%dR[TaOr0k+lGCRl<DNh,D#nR.3sB]ZNlA16ceJAdH'ufOT?V^bNQ;nE)-X,8ih%
%;mdRCD&>-H\36?:<K!EJOq2D+E%jg&]W$VZ?.NboaPlY&8U$/9Ju*rZh=WScIc,>"h8tA)[nV&UVl\e>cjuB/qTTgWF[*-VOi+W1
%.ZDVWB7(j="TrWb2.`l;`JYOKb_Y?XY,KRNXRVnq\Os)Ab"[;2+7+ZBUq)K]I<cHfVk4q9-B+lTlATJ@)TBKXR72"fb_>Sq@FsFf
%du;rnLoBYG;!d\OGHs9<8@,2Iim[3_R9dWidNVUmoj=8]/),_\mEipGr,8m0T"=Q9`2ETAQ.0r]?6+[aK6:s;".Y0V_&URIb\M,q
%.<t=0#rL&rEGT\W>;LT4kXsAmcC8hm3-:oV%S=p!EP@+0r(?D,qY\E@d=N>6E`T?P=ADMN$X$1:\i_#'HBEPXOGk]UKF2Y".Tdqs
%Vh(>F'`4T*\![1pl%WmS`pYk!oPWrfQ$+/!p4ii#3:tBt3stGgX0l8r_%5pbi)'nC(60*G0l5Ts"s`Bk3+:r!++`Q2`lX8*7F,2\
%#*)sn-a1E`KlIo0cIcZV5hG^Z>a'B^2>ugm*fQB?("j,%4cQ9+^uI&3\D)D!Oe$_!`thM0^$<-Z;1Hsl7McRPOqKUHgC;0IQoI!^
%+s0P$HD"BU)Nm8c5M[49m(cb>+<+HufL1Y("+!`23"0`43OnP/dfH$cE(s6>Uj?k`Xq'%-OnEt/faHYO2`6D3oS_2qN6CH)fXI(\
%)iS(:C8Z2sruFTdHOkJr1iTAthe1^\`apNK8e0/Xm0u4gVD'CRHAfJQ+D5fCADGm`3o]XBSSb'c-=+TIgTceX!Zr@9E"$WLkKTpA
%r1o'/<',ZbL9WbKiE]5ADRC7*/:-1V"iobu[<F)_pXj4D8`@mZkD\#2F0c2)LEi_3o6BIMVsVb^<QY!GS7F\5Ec9&o<\=;i/C%%h
%=K])Rp!:>-ES[PhrKiRpqa0ZGn)7:FqOdfYpFe`.k8t5"N696eq!.1[I/3HMIZ"Qnn;%/>od0oQqSC!lHD]ci4ajsd^]3Sg^\j5n
%6(6f:3Bj?Qs8Ip@roZ4iSOt.&@(Pllfh6X.F5i+-2p:f8SHrC[:+kU,ppq.7g5`[YhX'$nK0T7E%_GebpuOiupE=p^[Y7ejc$E8s
%`49/t9<%W&3fskl09Jd$>j:_?IfGk%4SJKsk6/LR$;5\FF\d;D/u00>'n4"ESJfaGn+lBNpYrg(GDkqH-f:'0pcO')UtJMf0>:2)
%[dLGbN,_ARmS%!bngF$H?iQk47<a[XhC%.<P$k9XS+)Lm;3LqF#qqA;?[KZ%7UZ,aHbqkp^Be`ihBKW,8U.bE(\@MM]L,Ll][A"'
%r")kPIETrF.DCmo-Q&CK30Kgi^H&c,%8Od15csq"?AcSDp0c:_E=j(TV;8Q%2gj5EWKuoR=)*5FEI[r?><O_9bs$SZHbf$@GRTYa
%mOuh%g$pp^3f6-AM^.1TY/g%q>^e7PCH5P@aZEa&?54OK\7$AK\$l<`_kT`EPCVhIn4%ZpaEUa3cZc:u(Z-gY>C?0/q<f!Vd@VQ9
%c//KR\s%*rft'8of=q1)]\D&Qk\ef(U:^.kGHV@7r^7(=_O!d0ZZ,)in?*AU^AOSl:A$9W>D0HkmsPi*X2:Vr6,L5S*X+^g'^@D8
%$9TI,bJOq4\`Q7!'SX0nr<gbkT>RGa(P`"T^A8;p2.fpJIGel-5>Hb$q9u>C0TPmKqEKc5icoX^i>=<_Y;n]J?28/KW?jGd[@61[
%Z&]X?c0::LRfRh9[<X#(jocqMYCfpmroOk(I2B`54<D?-U3Y$Sdr:nIZ^!@P4E(/i"*-%AbI!7t?/\;3OF'd+5Ogh_STB<)&T*gP
%*52t!Crie22;h6(kN#@-UmZ/ii'l0/q#V0!ioBn5^S>c8j\hlha<"?'KR#/7=)'e!fMbQfUieY%*OXd)DW"b3`o#mV]k%0'G@)jJ
%VeQ(APU;1%$^CKC$PHS(DS:ptfY;E@<B`!orqF@_N0%8OfkpNHOLp2WM'0L3kF<:B*)>,mY]`c@g%bOeBDFe_K2k13&EGtsZ8S3u
%lJk$Za=46i5Or26a8>Ieh-8L*1H@JMS"5;,j#&>NpO5O>Iiit%nB[(.;lW0M/7X@qOP.TK,GACZSDo6Ke)dMj$:`;t[oXu5S+f5=
%L3IW$fMHb:=,]%PZIn<D4.l\D)\;#[VL>[]kP<>GE07?FUstmo'Ab_7NCafQmJtPd7i]:a^BgR_-q$1TNg\9VT(UPb#:._&mnhUi
%=PQ'PN._o'"<tf-.IFUq%t<oX;_&MZ:ic:[de2Y9s%OJ]WV#(\*7kZ\iF4D:%NL,29i_EC0kPm$a["B&,[>J5i=FO%.Dh;(\QW4G
%?c?JJZEGkFbiIJ-:LpWQ[\d/=[@5<%k9uK`Y)8#dB?mn9El>otOe]TMUN4R.0YHB=YR/>FgUINpTA_3%>F6C52m"l;HbN/$.WT#G
%&@p=_1@i:AIV1<B+0$j"Lrm-l"C!,H0h?I+%ZkeqId9`Jl=JccBshuu78(<cf9SnGZ1"VY_)Ha0cU0TR0*WK/rHroa]Co^[b^?T3
%=ciJ[-5e2A&<T>gjGB]BIQ52*`uY_Ugjhm@n&Q[4kEu4+*&?U55sEklN(^UlZ/ptYR5a:(5m`#kiir0sE^paT]_;*;H"6H;@GqTY
%:2Q9]bVJ(cC>^HLS#C2)`o%@3LRokq0V8bHL%AU;_1:^)*j#L[>L.O?,]"27T("R+\=:5kg3g;\YKm[K7QgN#?[_nF`J<'m.$F/.
%r\>D:GVe[:^<TN=7Xt"OJ,SZM2h*n]p)W_fCO>Ve,(5II$m*)E'*n@_E9W;82t<lf4#/HNXc[tN4%(/Ng[QV<]#@CZ3lhVADH#f^
%__Z_`41U)1lu=@Eh"uNPf5nk4d_iL"2cB8V&ed1<_dFOPBQ"1$3&53WZ4XY+GWML;Wep8RdH[c<h"`2#;IjinS3:>cruL,uQhlYV
%F5TDWF&MW8:tr_W8TF.`_]EI$e.V33ccOV"p3dk;rOsoeJ%3nHLM*0=h<U@i,/T"t)2/_W+H5G-hNQ!&E6Y6k11(R4,DG3P=?$bN
%13!4,=qs208`K$Sc2YeYIdBb:M"JMd,=G:u`hL<1N"#dOT+N(TV`Y,nLu_*`LJc>L(1*Kh[pfo*#mg0C0FWMofJjHOSpHM(_n1hq
%a::'M6-[0</7@'inSC_P&l(0<iGaVqH)6'cP4&Cb*I2-\]KB7Hkl\r4imD&O>N:N,6Y\Q/^D:r<H&;tPL-i+R:YR]gqnRL:d?oHK
%%,u%L:CN@Bi/m"7>t@[r*9-E2PCg_rODi-1r5@QrEBdn8;$.'B4,k"^)5d^6W^4pIjZ$suQ(RWYj1_tC5ul_3LX1h4)Lb(UD=I:^
%Nmqq8nHN<!5JKjo_%s@>proMl3+_YCp;jIM$2#Erc4?^-Uj.l8XWckQQ7(MY?ArDA6L&lc:fXkM6qb2>OHLgZ*K.p5Df@*9iNga$
%=VDk6b<#4bJ4?S7+pO+&-:+4PA";F>!f.XF3)iap*'$Ij/)Tq`;I3n4e/Ifb(;G9UgkHHo!D!=2eMa3VkuTb8rh``RS,udTbB\,b
%mTcB@fB2F&EUIb(rI[NS_);"KkPo?diLDSDp*j8&ipI9%VMhs3Z']BJ.B+*W-@tZ@i+Nq2]/%7!)381r>/SIP,T+e0S`Qh)@cJJ@
%BfO\ZY;"M803^6h<iC?V&!WqsX\qI'*`"cFi:o=L*EFYE-H9O!V'*0[gc)_#/I,p0fg(!JBNOSrKkMAhrj40aYju7SQZ4u_4P-7!
%[K/t,9A^P'G]S6;<J7c,4T;u[eMuIJ>SbWej!E(n8.7#BpO*L1;gc-_.uXpjgq4D_<V40po5cqB!57W&gWPWpasN.dqm[9SPIJc/
%N_uQtqT?J%JCg*7<cr3sZq&VQ<nuPJ<ZJJlA6V@B)PVV'L[6mjJ,;ppmrr]TV1iV1e*ZaF`=Th+C.4nZ2$L>\n9S3Dn2')8HQ6=*
%YX9K*p"[FIHJVLU&2+RARf3pY((&gf/YCrKlG]o6i!K\&b^&=+ee_XMaM%+"F?`AKcriE6P8/XCSWpFC:Cm/N=,k;I`MSs[=K(_j
%;;YfYg7t/?eA\WM[GZI94Q!:<;B(G1CAd5_T`QM)9!VYY'a?&r"Pg\TG;Te*C*7:F24o&GaW/2n:u?nq5Yb@U\H\i8X8H#?>aXD=
%Ne_A)*"Opre)EP2$3L_6Y$Dp%o*X]!Xao<m%eR+<ITIW`[/S%%V[9B5GPl!_3;`ViSrBQ+*t4K;C((;92Kl*H\00CH"pqW#Qii+l
%&Fmp7LGPNjjN,=3J(9Ja%7A;hIpp59XWs\;%K0[J$_bl]!:)Z4^U+6V=ef0:7lNW%EU>QtgA5,:=![^Hin-4%ipr!/fjlQoGB<(h
%B*#Y'k.2SEN/.l>FJ@Hl&a@jQIX1KA`dn(d,22I?NG-):fC?Ir,^bp_L=bbBAen@960^+`Bh*HDqT"S0j%s5BY"I!r["9/\^.Ff5
%nQ@'-0]UVoL)])/NDd1(D[=R[ma9j/lmSc$O;Ke,-KKhiV</Sbn2YdjI0tg44pa<F]Ds6W%(7a:Nh8P'3T,;p]1QU.$#0.E):Z+N
%D[TB$D4JoHkVucg?K+(76s&H^&$56sKOFG9ah&aC3CgGZ<2hfl]1QW:kI,=(@FKG;"-+l8Q$8DC=*[*31'fsI!-iu^GCU3LV\%%S
%&f+L@IeUAjS98A[pGt(iUZ4JL5u%u.63"VNCdJ*-S=^>[+&<Zo=hMP,FUK(>S]rZ\p7()uKB7:dQ9*^*Tqt5&N-KTX+"\u#S_oMM
%pqn01T/dh?gjnQkhGHDo($5Wj5MSALZ/Q'?T(&oC$-5p%Dar=WgC+<`N5'&eF3e3%SD;fh=-u__9gkhc>XoTW/bWB7oo@]5QSn>.
%Df2i3@^!aWMnKmQ]op(uWdW-)p-S8M>[];'pH3#p>XoTW/bWB7omYR%>Eh<'p0-gjfP@bD@]q_#00JE#r/&,h0)*pQI1?*><*%6Q
%ph)p$\'i\U!a>g$^'Q@KFc&UqMng*Z/HT,Zp6GiIOi$5fJX&ktlGjQh)1GsCX6'W!#](+*,-Z8b@-N8iSr:?!IkCY'r3c=cc1m42
%L%HT;r^)Y8hTu+2pjoBFRN(bBKYLOnJ+;-ga^9b*g+E;-r3c<8n^ld(2rh(aRAisZKtL7M$@`qB+=aGS#/'_Hn^ld(GKaF]o$]_6
%]'*qWf:oH;?gj5nn5t>OBDV08Qc#6)'L&ac<H81JjL*'EOk9IVYDUQ92tQl!qHEO!k\JStU9@YI(K(Z#J#4mVn]KhDGoZUNWCAa(
%i1C=,Xg8\!^ckHo6Q4gm#](+*,-XLDMnn24^rdt`I@h1(<O*LkRD0G"n<?pn"((W-k\JSt4/OYn"]Z=d/c&ZC[HMDRfA"\S\s*u6
%\<$HK>s?`(_?Z[<8oDF/'DbnkqaFka-@OjX_OD3IdFY+r7:1te(4Elf^;?_cFN&NaQ]dD$DeAp_<*%6QGS/RPYXMsgR(t0mn%PXT
%Mng*Z/HT,Z[Ku63&=B52jXUJr0?kNDhTYbGWN;O-n05)*@#MhW0nK!jEH)TC,-XLDMng*Z]chs;Ids\5T2$WDk@<A<);d7#W9+<^
%1EiuFKOPPG-V7^*VJcs&^_VJQ!a>f9#ja,LXBn5o<sYm5]K<")RILAX=Z&.r7:;%h(4j//!fNE/DQ<FTYXMrX^_VJQ!rFSQQ7j\q
%.g/m*Tc=a(bkQagXI:*tc\0)7&:Y;EVb(:lij2hl[Kp[]fHROg?uJVEnWI+k6=>ZL^LI>8)*]g?<HA7K"L\SP&_K/lY]B!A0*5>\
%[Kp[]fHRQ/,VX_IBm42o#qT>%3@;S1nH2]m2)jG^@#Mf9J\>OpCR:>j=Tl/=C_>;DYXMr<7UW(e$^&UI!cs^nO,7gfI)f2j2)jHc
%$%]3g'T9aj8HS5G;L2UO[Kp[]fHROg@#Mf9JLpq-"L\Sp.&L9T$7>lWhT@R:f8Lf=b,VuQ0*5>\[Ku4?'3Md*<#1$:!a>f9#](+*
%>7t&Kp`?UM=M6\DbiCYA#H"eADSSIM!aE9uMnhMN!_\m4o-1D-@#Mf9JLpq-"L\SP&_J;37:8M<e?Y=A&6Q[AE_Jn]is2HeC2UhF
%^_VJQ!dhrj<\=Cdq'SX>h^f7A*4@hCES*A8YWr'V(]EdRs5WP=s#p-.>S=-W';*6:o_")?C&!7hXI:*tc\0Wq^?":[:Qs,Y`?@;7
%'BZW*J%N>Mr"o?:ro<f=T7=\u,o)+urt^"4aBIoc0jjTHX2]mrf1W'=.iqX("5#62e98l^[8r0:\VUJk0=VdIG:tiG98\F!g(H\`
%VgM**0A5M2Q+5c3&b""P,#O9Xk8"E"*gkbh>V;&Ni\!+M6k.-X1$;/Y3#?t_+18LAKBb(o(IpW^5?oO/jl:R%U!?n`Dq)0u4`sI8
%MEk&F<1C(FQA.Y1,VYt].A:FN*sn;t)MR)3Lqc>5-'q9l;LuS>X=XS'T,"D#/a:]!XGdmW[k@aGYM?Hb5i9gD.:/qT>SmuF@;ot\
%(Z.A7TO450.+U_Ep*>kmB`YJd6HYHpBl*8hFJ2V@8Bg^U95sP0@4^Nl1R^IkTHk.\jZuKa.D1NAOOh8cTe7dV9N'7"7iHTD:]lu]
%<Vde/'HqT"d9_>Hd_A.L83'4W-:#4l)D\T1a)L:JW<s5,'mGn?^ZZ'\$K(+&S8cH2Y>JK<qn#ip8r4),!`$.C@2oAn"d3`adST^r
%)Eb>)O]DXX/'THYd!&Y(]ltd.^,["'MBntTnP?,3n"FZNe@QOJ[jqN/3h\SI=%DW.n6T%IlT0)S_<;ik6,9Fd>/8isl_PtqUi7iL
%#JO'C*iHG)fuOoo'`:7UX\f+C&9ss'Kg#s+oROY%7Ak^4hkqfAd8Bpf.8,*8A_%LA#*M_Q%6.)->XRCCa[UcVij2[KW1W.^U69Q]
%-)^&9r,5L.R^QRk'j%9YT7hqj33GUh>#$[SONs\d+;49I9/N$;/'ZJ9U:QNXg.CfiW[-)ig&eq0+=]#B-R,6-KbdY9^RTQ\TdZli
%fSL)`A3GaVaWRHK4k!9L7)VY3TBohN'T(S>#]!njL"3M,AYK?bKH?mh5g(@V5O_-06d(:GUD$YI%SVnW8(7Z>,U`o"4D:hGcnMNI
%M<7@^>Ktq+?BTP*41*eseS>.6Gg`Q,Wc`oJY43V=>$"&6>+"Bg9L1mY6PjI56-0s8$oF1:9c74CbZFGI:,3I`'@W/$Opj%H26:12
%ejuP_T[+fi)OM)G%0f!7Ojaj^b.7u.LmP;*QY$"pE[J),>bM*O,#=OTDq_Fu9'7rL'#'o'C?qBB"[hfoQ6[Y!m2RQ=kpbO]1VJY%
%dh:`D__c2gRXX/O=pp?os)1rbb60'dVfeEnUe+?&Jq?9;R`r@LT&1LGB&=M=8?ClTJS<.niMhEs6pm3C[$+<W=&FkTYKe1-I*_77
%%MdOE4@3o%?CaI"Gh0Rf8",O$e7"NY6L$*]KI&-5$.CcmR%OX],==S\"/N`%IaK9)7DtjtTk#0`RN"uR2?_WMMWU3EY=e^P3+GB(
%CJQgUk(j_JFX!Z7-:do1j+dX.RS:nKNI2dk.NIs6ReIHuMfbQQP4jET'uDg#*c,pr8U`m""4;DRks*F+.S7"s:=DGSW)bJ+1KVrl
%6B?Ik#rK<V$3QE,S^?[j=0>t*b+@82.OKgEf',DTKh<Fq[3[\e&S==_c.^fZn/t=ibV2b'3^d.#B\?BK-7u&[Y0qU(.@uKWEXtib
%UeXpUgkqXWQns^Y\gQIY9_4bjYL)CVgV$T`UTgAC-s:,,:<9Y#>,]D>X-e,/N'i7hPDp`f/YnQ2>r40YQqOA2_C4E\d0IWq?nS0N
%V'UT;+f8Q,A\TE?S@!6Q;2r0<KoB\GV;;n[W=?ba@HbA^JU46;S+BA_4/F_7.lStDUQa(K_.4:$"^&C"Q)0np(!mRZZX'ESCK2tQ
%Yl2$L8DJgGndnc\^(gfm':(WhV%B34qlP[,PVY34;^--ZLRN0[(*,^;=]UB@EMQtL/nl8_:7k9eLi$p;AESt\13^(5L((boK*(2b
%-GgX/YW<]Xbs94_o18No]bZX9GQCCbMtNS\)lR.r)`X:J\r7?n%!c:8?CKm]P*tMKoHB\:QVH:lWjHicPpmNWDb-[$5TTm2*(A0Q
%n->MO-?&H3fc%kK'.KKo]?(#m.SQ9VQ-p@b10nRRPZ5naMbQoFi^@"I8Tr?K[9Pfjc0teRElMo%.2bZl>F23b=-M0b25$o_q;R$+
%9=CT3*HjL"*-f/TrXuh:QA/BNiKrFnIhS#0V>pqrm]$]h3_A4fD90#H;>k$M%S@&aBkO[$AEAFT`(VKijXB3K@@ZthJ_`knP*;\.
%%cS1cU.5'ePU-8i9+r7iP$8CG0nGOIJr_Z\A/8lfng(55$66CL/.iKVGVi&Sa=9T&Y-k<p6PfQ]FL!b+%q<&O;R"Jh<[(1M*]?)2
%/.R8>WcT,>N0Q+7",kVsR."KZ,)"mkAhti2!EW%>&^r*8kaabkoI'@'":Tp\&<\G(>9Rrk_>l&c;SSCK/Yoa6WF.kWHuDl8dYlCO
%%m(1B<\Bm1"L=mOi[Ni/Y/"-BE9F)ah?]h`(na.2ej27qTEOF$8(-@u$*H<pol;IU]cjFcB.%<3GpN).L6#='Gh""Bn=C&l]d]jI
%hkca+k'ta_l=+6:7eU-86)i+48M4STV2R\S,F_*K===0_/1RmK]@^rLM'8cZ(02WP/kSg1X<"*%?L08Ddcp%PD:Pnu'4,G%^6@Sn
%N=A%q!kBe4Z]nir,gd1/['L&f@H0U#]C3VVjK)=Oe:B1#bfW2jAujY)'PBLr<Z38`+/G$]H;56iRMnW3@K`t[%T4],RlV2;@!FGu
%amN"N2H<r^A!=,pX>#f[<=F"P_)/`k_bGf.pl*X)+1)&Z,7ViMfm#?@:lcA.TQsM$gM!#,+9JOF+159c/67sD/@>7f%CckbSekXn
%(pchsN#eH$$/VnnJ_"M*42)5l42Oa18pCj3UNXLsX.bCgbot8,CfV$E4<jLI2#'s+'EVo4=(\g*6QYm3&T?]Jh:kbL12tbZ%Cp6n
%BE]lk!_"J(8J39<l*<^9]88i5/+Ci+Bh[m6-aNo]JU:rjWG=m1,8R]C^hk!"UG^@d'a_E'<P9@Bdu2eDZU?,bN-QFDB^!-T4JYbf
%)UkKj#)5F0U97tdg.1f_]>QDs(,sKC+tqJ6YL=E=3I!F!aB6aq`i?-,iM576,eA,i12(PA@Yu;dTHIYu%ELr>=foT/[lHfSbm+t+
%q5H-NUp6n7'+h?EOLhLD<^s^.#3rj:C'fVCFq@>DH"I1pVMGh=@P+V62"1Co$.;-\M!eij#jdX&(ua'PQpOYjC3?HoIB?B8V/U+m
%HH]/a0h>nAf1sh3Sj;bpDdjgk88F%#gUNHHTB1,O.!\7_a2)Sp6.,1Oa]oa-=43cbO%QfAdP%sD7/Kt!Z4-GX.3<c2-_+E[';QF3
%Ka'5g;1oO??@<-$)mmX?>2cUeM?oDl/u`V/j"r'j=n;mO3;WQ6^\gNgG#uVZq;#78YmnE*#HfT%#]c9UM5?>FRtT!s+pJ?.':9-=
%eHcrfWYk78qqlAAb4,F=i(F6X#"A,5XksEc@XqTK.1#2rGVB+BS9:rb3/tTYi(c4OaCcig0@C!oCqG:i(H41ZKOiXtC8b7'CZ>t]
%3&-5A]-^p+@`_['Y;lkjVXQZA$-Y*C8NbF40O.@VD,L>7l$<dM-N(R!dBVHO?`Pr1C0+=H6DnEu.$_mU=R)B"L=j&gZ=XF'B/qDC
%MY,jiP^A1:3o2kt$RlZp<Z>cd8E.-`_ZD7p1Bn"e.L[ZcY0+"F*WBr-7gs-cq#n4kZ:a+qKsrHK**;#3jLN<=)_nP=gBh3$eOEe'
%GH\D((Eli73BYnIabT\MHE.H'NIMT77158,-94+Uh-.=_:";;T0Emc1M]!n?BIKar),WcJ2OpRfh;:Ig)N6qV5n1q!CsaCa2ZT0e
%We8*bf:ge=6;;EpK+;K3nO:BY@/DY7S8:b?aQ5B8"u&Q*37/A6+G/jQJtAuC9Uo[V-s'Mr=cKah&9K@/nloW0Q8-Po\;#RCH&7)>
%YZ'^lBIX+a5Ai>XSad1RZrTFmY)Y(cntTJOi1r%41lkDQb/u33)dnbD0pU!i70E;-X)aDL2j>)X*gFeY7HD=]<>%3#m8-M($FdGZ
%Cf!?""l;\;_]uT8eicf%SAEVhYh^g;Qi]5-ZK\<OrF:Btnr-;OEJ4=Y.g`<0R[s<%>#N!pYpJXU!U:k:mA=:sANWck<aFUA.,>/?
%&e98G"VQu]3*,(6;Te9X&P+ILF/?[BRpqdWLUC*$$YfB@c<;ff!=$PY_J`jmLP4<9:2X6pRhhmcWq4kGFHL(Hb-g<3e7m3QSdE3;
%9rjJ\)m`ab&DK`^\U'1u<t:%bFNBiT5p8<Y=,\-"`=WW$]Km%[Ts`RuNloh,#%h.^?*Tb93L))HVCkB4=Xk'm6U2ub"^W\!\qJ%5
%(1W+ZfX_ccX</GUoi6.\`U2j\XX^n\K,a]Pn-94MfGV)qD[lUjljri-\!TX[$(=btq9tf(`XLjDS-<j;\<?9gX>@u]DJKtF>K4P3
%ZQ@bLM42&:Dj#Br:o!BQ@c`>_qIm.V<h1^-&)FZ$Zf;3,,9M^%9?u??XpKq0UJ;]>kr':MFWKp+_.(L2KZ"8,bW=q,.$9(QA'k$6
%G(XLk;[/9)T4]V.%$slh]F5AfPp_3JCjf_OeT;of)AA49C7*=ZrK&Ja/ZtQr=XE9S<@)d./ueVt&#Nhc1`_*C#LDEY6YeU!`+'%<
%Cm$Y'IMkCPJkbFedW!*-Ykcd#'^;,^a-sqR/2Zs=<])OJm-"Ig<GaVYY1LPH>C22iXG3=;/YXjl7sq%Ka^]<b(AY&;0_+/&iDB)J
%IEr7d_=ZCZYB"*J_9B9bFUk8O,tWb$U$O7f?=3o5XbJG:7!O`$7:INp$nm1>=<r0q$7@bp,Fk,q/,]_m+cn0S/M'bi72^m,bZI@(
%O26d7>+I5d-[.C\MaK_N`1#dq9.'M<?"\I!`s^Y'ZMsGmJNAK_;_E2dXf-rS*:b;X7KkS]9?iG_-G%`XcuQRPUBPP7/NPHD[E:Bk
%kqP\l(rS4,,J;o=e:Ao3RhSb>eq>4J%tN3]=kHt_5t1EE3RfG0B$1It2!**NAGe2@0qAe((=XMHd\<I-*)4::a]c(DA=sfW'in;k
%Uf_t@^$&4W!CWnSeS6Tu+CN:@PU2'ieW@aj6o[e$BLoS:F[\b;+7IZ2F:erRDO*SSO--7d-76/I;CU1NDYkac>s,/<$p:_9d3#e0
%!)M!'eAQk>(pYn<X>\%&2%mm)j=TX<#It%W+aP%5eJ0_A+Cb0&lbr9s//NOe@Rr\A^d%:"ntOP0!)%+9C:V^pZM(rr@/&3371g7F
%ZX%\_a!?j'$ehEl3!m]o_)]Y!?++3B+i&']qC1lRh'sNLch_F7$!Y`8_SM8GQ"'CD?(U'TAG2D3UK(.?ae>uUC9(_m2NTOd66O`7
%)4k^*+NCOfpt]R_3/>FdU50Tqc%F^EA9d`U=-KC7_Y.Ll2Sj^fj!*,n$IWrrqDass5\JKMbt/m4@F`NSSELB^I=R.;4PJ'aZ*?42
%a>u2<N,]5iXoJZC6)1j7.Ng^>D3g'cXcFgl=(+[F)(>WN$d)Lf@or#R1p\m)ChdBG`>:CDWg]FXK?[#WWI=)"9r@Ej<njMXI'Q.f
%\Y;F35'pL@gB]-=7*;P^*%HW#6\Ee;h(ZVUFOf</JPedJBc*&i$9)nhCFIK^&3#'p#-qWX6qu/X]5"u]@mqu<K!r[n"gR?R#134>
%l5mR=ES)!U<QbRU2*d@7=7=@CmrYL+/Cjls%4`Dr:p>[b+A'_e5e:>\^kEkYd#]f0eI-;7/Ba'7V)f$2hmWs6%8rQuD%#8\<LX&r
%;d81%)OD/Tp2dNH[:HYJV]9f0nf!*-OG:_$9q6^*``*T%_oL5.0j5Vbfh^bDP9??2AcQ6Aqe;"/Bo8s0R'=LE>qW_5'\H,cD(lmY
%1!$rd,NJ$?c"u7*f9%-g&4b\Y9=BotB#U]/q.,2CNDOTRaX%Frp!GD,c*a@s!)%:TCfegh%&m@TaOer\ptXB_6n16BAAd(qB1Plc
%d_^HW<K&,6Xh+e6LP42u8=90i7'Z=8o/,08U"Co<.FbVGQE>-Z7pDe]=>F%rbpuLo%`=qY)UIUQ'2CpUOtFCJS1#?oG.)>nh'0eI
%2)@Lg)m1[N?;8M<gEfPNd3;Vr(jM.ZFZ0a+MlL2',kY[rR3+o^;8Q5QPOBAhDht0*GHm1)1i@:SloL#N`G-k'g4ZR\2;O^>G4n.:
%?lM!QcMS.COh)o%0\DhZ)$(PfgS%$p@b&j/<>dYbO<<n-pN@l&4)1YQ`P=Hf^d6es5%6pUghUl_qV06],kj<5+0'3@3'$h!G'&!O
%?gsMd&#:.F6aT4ac=QZF>qa\&=BUh57[g`$k[kd^C2I?N3=js$Ic"Tlb:\VTNUu>LiXn&E3kE\?,UE8#j62E#Em_RYV"&%oADJO9
%Qq^`b(AOgO1l]Rg0Cp9Tpo^'4ULm29\k1+==rp9XnN3<,gLV$W%$$unWY1r\dt4_3(CsdWdTZ"JKM?BE>D%uHZ[JDRkNuY.;oojd
%7oGrfn#b5/VUQ0&qpRUZa+8c./S\5_]PS]W[h(pl[R73^Kt'q1%HWNTUO*,-Ds%Y8*;:%h&:FfI/A_t(D;b5!d5=,J^R]nZ\-9"s
%<Ei:idh_^,OcRTH=GHW.f(b%)UmY]2DPne4q5,Tu;2d:44ko*"p0ktdIi>Se&@6MQo!q$UnKgjDiCB=<-#?VA5.H]^$,-]da+TWi
%C27tJV1q.-2He/NcV)Q\XN?q?@Wd;qM]I:dX_=9[dE'C8XdZMDaNsu3(!E2>M!/T7@!CI'LED,o\mk8CO#/B;3`^'8^#JE)XgS\a
%82>[kL8\>.$$TU\#%-`,6;]rSCQP/&WMmU@;eQj6B-2\o0t)l%E1/M/JhGgC%4C5YnE?sGG#X/\5?Q,GDb'eQ)aSD4Gh)R%[Od'2
%-J;hfLjLu/Xr9d&6$HVp6(ngI&pX%PJIBk1riU69E5(0X5[\3n>oOa_\0KMJ8'X/,W*RNXJ>+EWBqhK0S[)C'^oR!PCruMm,d)sR
%W/6QG0NQ`U>5KRu*))EoH7-3E+<BSr/2qHnFc0Vg2J,WPJAL5Hlu+?jS#X,"IKioE0#$tmFfV2nDkZ,lm#Yatb2lpbEU#sak5!C;
%Q8^Nd^;_J;D\j=ec7`d!"-`2R1_).cO91i;Wj*Rq2cGF3_4+J9dUYQ>XQnHnfUV!.Rn7D:0q&f4KW81Saf5f\Am8!LVKp"Xg:FCM
%dDds46$%3(oQJ9#9&)XPaoBtbiSmDO.82[ds7%1\oD&+*e*k'JgD;9N^Z:=+pL\R4\qe0H`_"^TY;iqaZ""]u+E:;L$*m9Z=R=g:
%C?Db0mDMS`rHR!+`OWruZqA?BcjY(BMm>*.'"%e2?*.sGGh$QmVB`M^o0F+4CYNH-iE3F/^dg-A#g?d7d[AL;BUH?b/r[:dEN&9'
%@Vt<u[P=6D:@"=!=lqcR-0s4IURJfQ\r@8j0%&0&Z#?jJk)r:oQ_63pc%:`g=0m<H4ljhBUSI7b`L-#s;G0;Ch)UJ$dl<fK[nR!^
%$)3/lQ=G$rgdf<YdYOftl0OKB[Tuq.\'L?%bl1WijBGG=Xa)M2+)MQN"1X[gCZIi33c$fVCVrm^p[0n<dPaZ@Fu+lM2VStHIN1rN
%UF`%:;Ao)b2$X#,_Q*mKc>%Mi/^4VPFuTgF>+6;'Pr*ESS?hNROF^l0(7WuHXc@I4d9C95+ilm:d$nn%j>:Ha+&8#R`Mmk%EC_Za
%8sr/Jb98&fcdW4CJ_;B=)e\(%1;*$8ifIHl3dj"BVH;bbGZc^[2J:1j;R,UaV,A^PCO.P.kKSU0HJ80"Vf^2hV3;pKd.dgjm\Qpr
%/^TUH1gKN..D27k`@4<NOiDOc&NMP3*CC,mZ_KBW*,&<4/8@j@5W=U<@I$L$giR4$O)Rc.4g('gD?kr%Yf!!=>N'1<a7O*SK=qa:
%3nP0.3CTU-c`ieiB!NJ3_5Ee,59gAN1dO8[)QT1+_bI>0[u4"go2)%F\,[Iom(jmgUSFBrFged5K3cnU^$;;A,.Bl@7r5[k38Hc-
%nU.$+bd`HBLa&]QJOREd+j0eS59/Cp.E(?_007UmBI,a@fEmh)CVXp0?CDd>C)@1@,?B2W^7M^)#)Ll_1"Aqh&:qcRE)m3FBC8JN
%XX#ud(1e-;ctCOJ"JR9#o`0)$/pUQnkcQJ*3%kjqGsTr)1ee&5e:>4V+73!H'1!\;>C%$i`f\O2F`u=*HQ"HaW'%L2+krU]`(S1n
%"CB-j2,^WR>tBD=WHDIcOBV^r[Udp(XFjj&L(m>d62&a#^gY\l*3L9$p(56*knFP8R>)j#Gs0#"cKkOtbuNWG=*Z$"eL[erDGTa7
%9!P<ifP5*U\27c:o5K:D%Sp)KL!FbuIQddZh=aa!l?#-hcGeeI.uk<3\V^gPi(O$3?A+Z.d.pR('r$00V1-ht1^!J-I+`Z\>nssY
%K/.<TB/(&"R^_?ti).<q[O]<6_dch./h1eI->\aT1c8]@i.@%!iB_scU\G]5#":O0JAFb1TZ\pQ6Xf8H*)tWAh=ps+0$HY*V=IA>
%Cl"&K(!b-WlWeh`HUr*\D"g?c;`l,1CA<+-iL`\h6LHdXp-c4*-a:\gk$U2eVBOohmuBDuk8V6r`cn,<p8^3cO?uT:\C8Y;GuT=-
%GeU0:3\L;$S;n$bSFcFlERh[L*s?pIs-AUr[O[5&)<F\+.:PC]^L)4YU@0%Z;_L8mF0G@d%-Q!iMkH.;S-X+u(L/XA6JNi5*eq_u
%Hm2H!,19e(lGc(2*&Y"jWH+_mCAQ:%T?YCbo8&W7AsLi44H12GN1ZHCSbn!33'VlA$><h:6X6]Z[=`P>B,\pIKI=k1Z4k=[+,@bZ
%ns^!t8^Gp^_m4'q1ko4eVpXA4G#L7tNQ@DOCb+Ael:1IPFuPGP;"2l0=4/ed<d6%j>j^(pn[=lP$Gl/0WWY,2^If(nO.Q&NR&8Kc
%.JqNg4a6Y#?uAR+WlVB'c,[hDDXKC9\Ag4@2[6n\@u0FRcG)g6OfX>Ci//(Ykt%2<'9+*c6bYO870_E\@b>Q7`lO/cc&R<i?k6aG
%]%@/Eo2ZC1DrZ*jPe7g&a>B8;gM2b(M?FD"ql_n"j]9.U36faX#P[<ld>[Hl4m22$kLL2NS'C?"or$)!QRhXYP#f`9QO_.shgmZ2
%Edg'n+B#r]$i.^5*dkIpc%iR7HQ8I:5B%\%&(dj"+#o>CduCX4n?T3VHH%=-_uFgG>Ftl3WLBq"-\ZiWTjSu,_l94<Q94PPbug?q
%*.p_HQ!Qq_4LR8h<.N9U@7V`Z(,r(#R0^r,[Y/YK/!kA!hnfS<W/#,?,i7;0YT<COI#3l"(`03#/m#bC#Va4b'*NY%[WDq5U+hZ(
%#4PUT=U7*1p,hC63XtH)m=Dr6+0XtMT5I?,O&!dfe@me;T:PPVSWM/kq:!9/\ikb>RkE;>n=OUB]][7UD/S7"^c*V$`uNJeqrKaB
%TM!e]hr.A4\K8<'&?YVsmq\*6.VUWnR)=)/'8[9Y=/F*3Y>J+@aYQ>PRX:JBDXAXBU?DhL)ddSb'MuL4\Mt]po$*(!o5Z/N;1>Wd
%ES,^fPNB[_k$&tmDZ13_,!1]eRg/Ytn%le()"'@0em+%bH;8&Ng]VB@Zt@3G:HfcgXk2TSRrFCnIEi8u6*irYb?&%8IIZ9=ae=i%
%%,miq,_ni-4ErJ3a:A0<s7kn]+27R*Ys0=+%ui0Yq"?_B?e_07chK@Ar=5CnDMb)pgRD8WMLJ:'h<TD.^M??VGA1H0I03!^k_M#h
%jlZ3fVi8X/#9oXu,g:b%PgQeuK>iDZB>(QgN*n.KCiR=%lqN:?<lH`=Q%3AP`oY$S6"IpD3D6Nk%g!ugNl\NB6KQlT!sY989R@2G
%SLkYsJ;Ze?Jm>D.!TQ^cQ!3QJ"UY+4e7ssum!dgqK;DW+,]l3$i,MF=[/HmL:n)TGKJ3,a`PW;FH9Ao"8`h;Qh*1&X*?6_NhIN6t
%Q7bqBXFm$#$k7E$,@eT6m5Fadlj^spH8-klVm+aop=DG!K&%L`7:6i7N\Z@%X2.lZ&%VSe"R^A@i!6*Gn?'akCU7]OnQ55ZL3t)7
%9nHg9eShob(nS'"ZB%_Pna^=Z%--\a:\dN.Nl$.P)&ndb%N_>bOre;p%strKK[Qou6f71>L!TG)UPC3HheTf70^NT`>jB2^NV2k\
%H?nN!H[4VKC.<S,>7r"g]'&GAcp&*WY%(Yb4m+5m_?UJX\'pKVD_!/pZ-4>N%9ojk$26E&(o=Iel>`2AQ\2C@MTO0X:)2b*j]%JJ
%`3CCE<Om\Xmn``0fWE`8>:1$LfD)>!fNelSKH/9<%N$%cTAr%:nIB4%iZ:3QBYtdL`0c4b<oc3*@qp&m("=.lACfNN:,q9ulb;'Z
%ge2A>F+Zuj;pUIj\:8ZBSlXd1lQB*7EJ@(Jm,4Gj3oBG^]A24h39&T/jFcS4-dj`T),FL/g5q92e==0oJ7;Lmgd1Qg/eoVY!m\CE
%.RBp9jS.>UD$%+Z>-m1_.h?thpNB,2lI`gO02<,sbY;#4.\=5G\B89&H`LY>chQ-q`qSBRR=i%6*7;'F;-1JQ)RHP?f@k]=k@r"\
%rP'u'CXPD+b\>#&,7d:,b*hAeCW5g0NnoL/Fr2ocpZ",20SsWCdTO<]6Pl>4$1Qsd.3tHd=l]NlODlhW(U:_2N:*SgY)N*o`,U[#
%&#>:ZO9++21p<]!</fjrX\YT^'/p;2=G7V=j57!LUr74(m(YH0)]A*amE3<Yc]Y2Js#Eh+b7(g:9eiVllA=Lun^Qs.Nh,+pCM,)7
%;sRr;\,B84r%p[NhHp0[eWuf=FW@&[Dm)h#WbbH5E>fteb%ZBf(c'.L!$T`9?X&ndVV#U5'L*&R<lZJYm;$>`hk/c&;TBA>C/^HM
%M4DX&EHp*9G`>F@@3+6HEJ^7,%-f\<&_m=F-AugKhq==S`1:4>Wo*<$,MmF;gt&0uSm1tjcTC\="-0eH14o8G,B?6G>=FnM\=CV6
%mQC(%VO'<(%ek9uGh6q*0XrBe>guQh_27n^#QA\Xq>PF*-_e2+:\B*u"QhM"E*Me6/ctnq#n/1,n5eGi#`Mf*mr([TIjbZa4!*4M
%D(rq)2AiaLa*b>'DW+e_T-T+B)f/C(-VRsP[)"4M^2C(9588eph*\R4LaK,Wr((8+-\W8:8#j.WDtPXg>84Lolr0c8O.]]O5;n4@
%S49Sm$<-jj@8V(,SZ(fh^=BP<Cf/iZYYU_)OI,,*1DauU?q?c9-'YV&Oh\+hfYZ<G]SV\a(4@e2>4hJ:dhhS9oH-5\?Q>[#NFr;k
%r5;ufPcM2J;r,="H5;2d$<n5<8Q/aS].#s"L%1F(GBP/>5>kUdP*PZ1<B'HMSjd(G_A7iRaqTSpe2YJFj&0!r4$]X7.*V/oKd"@(
%:M6]=JPYqi$<n4Q.-sm00K^q<[+ml$KctlA-$u(09^s?]i<^MeWHY):>PM7FU9I'pMo%Yl$:?/ZS!2e?.I7SC*'E-FZRu+KAJZZ?
%?9,U>)-ZD[9eLZQPAuXb.dU&DjLhS(`tRR.:'N]h5D.W%.g$<,[ZU):DG3pHM,W8DIT0i_3QDC#"\.GB;<-KVY@MgU->9[f]UZfV
%Bq]L4k<o;N:49:SOd\/',J]X8@C_YSV\Mh3C*a`.^RXWUe:r=^7cNpoe?R8G$)EV7VRk`VgXJV(2V`EgM'Q^^r-WZ(3EIT])=Z.Y
%g_R4^H*lI!4G-2*$_B<8#O;AQjdbH#I<N.NkT&#TnN%A)YSo'TI-/Z-e[h:jb5rQY]7QQ-d0j'H]`s:sBQHJtPW9OD0K1KN:9l?7
%m//Od;D",@0-gX\aI07cN5qE4Pc&7PSr37?e-%m9Ml4:5mH#.1rOucp-%=YH+9d49f,[9!Dp*IA([cQp4R+5khi?rb7%Umq^"oF%
%]5EdG$*V9>2NNeu8%PS4^`.%rp)nW5ODo8OOik<a=9NOkRu.H"CB7g<4qG>.Bt1V-=i6.j546T0,[%D2ZWclO9"3cKRXg_oI+UBE
%'Sn#<pDkK_2#3A.@H_JJR[ID!RTWV6A1r)-+;QEZjT2I1K$:4f0KW2&aU35SH'.o"")h8E8e4ds@VTVG\hXleeqW'7=<b(Y:KC%d
%iQ0L&.-lcI>_[?k;GF1b=qqPO59$MS_pI$iC(2r8aOr)FWD+34=[Oi@P6Va^ak&<@%m$>Y]pg9DZA:R.`5[+1p*.cf&(LP[S@/+]
%g$?uU,4i*%d!2J1(EGa_`]a5+7p>=%[UH-ZOs?Lm(!(s,g86E$bB"(RW$85?U]#SU1r0'-?_tdp5l86D?EnL^cuBELJNoZEmbPd?
%?9deZhW$C@[Af]mB=u>j!Xpti$j`(f`;m?6-L=>l)8FVHdb6Mc7Q#O;q]t4"7dI-;Fl];)1u84XYmMYr['R4<&MDu">oka(kY"ph
%nid;Lf<(8oJR^,RF2aaY`u+B@g)8s0N#FT:HIqWZeTrccLF*9b'[rM_'qP4Zl9#C3EN`6\k83,\82FS9/@JX`nC4=K8P]6663]pn
%S`EnC$_t*^*NG[H=\(??C9h/`e]+=bVrorl35iHeGUg@KD,bkF_[iE%fGH74XFE:j47_Bt`*@X!a4!b3K6-ho4EJcH2%MA+n]Nt_
%nM7%-'DR5&46=q6+W.q/rji$;DSAarTB=*&n%*c(<DcMY3RIlU4`S3$"*Y:t;XLC!]Y7%@V0E/LESA;Gm?%e7nj89)l0rn+m,ekd
%DAC?H50^pCA\/6V_i^S64qt0A)IX;&#>PqULYL&,<GQYpf7n"VcL%1FDB2A)=N<<CA.ZThc6fpNBBaYZX*,n$i+sqKMsacW&ahKq
%>L?RiN,[+#o0OXHTjEo4?YVSsWt!r^T8G#TT>c!^52i>mZQZQj/)D#plA6k>>Bn##Gus:AKhpbe2tI59PJTmPc]c4+(@ipoPm1>R
%?+b2arFB;H_[H*^=@]0Lk16nO4qu]:=ua\UYIsGb-/B$cel2s8b_;1XVJG.Rb5n@E&R:irn:AchJ[2#i/6Jpi[I^QGi+PF/j4Z48
%mP8FC81-*Ufe1or+,B4r6<;I@0^Jji9l5EM'TbJ+?Ppm4Wk*sL%*92A8'uuD,##fBr\R9Lj#u;),kfGSLtBd+V_UmhG6)J<CGCW`
%VqC,a<&Q[Y78)r-kWOql2t/5b%F9GYiBl$KX6LYlAAd=>ASHq*Gc/!<>??59JU7h\]O"JR-CuMt$ne"Qn&8coE#W,'!VV4'^M:es
%0.,>hoQ`WUen\nG3TX^EA$2'G[M?I;hC&6[La/V%pR>'*B27tK]XU'A/?O3"Vs&YP-o'u%P2RH5(n%CU29.la\tZU.:6Eg25IT@X
%q@PjBq]1%"gjlMm2dEk]4qE&]%_Mh0c>=Zm:?\W&)Gf/*kJ:h95\#`V1?"Y`O0QK?FFRjQL^7`V&&j(nX[\,b?Q"\<haG2BaUS"K
%,;HB2o'aL;Os9_io5DD,cnRAWqJ;01,&j!J75$%I"3!Kg+I[OTGWsR?C9`=8`R(InZf,G2jUkV"C@Qt"3!:iKHe\h%f0e4XI+7Jr
%ed:+h@D]MI:=X5F4%\Cm,B7I,.e]<h;L+o(cQn\BX7j0Fi"+aP8/mR:Vc1=a=,Z75qk8_$%3bE$r1RpmR(Vj&S\V"^%,]c#<P.qj
%,_[JZImd*4E)aSNM2-TYjY))URt&``kF_bEa+l=^rUT:#4sSues6GS-J,-9TJ+9-Q^ARho^\ID-^\I\mG@1:006hF!bQ";d])2*N
%?iK_:?[_n7h-^3N=8rd:IPcNCX'bhSn,DK'J+<O>4mKJ.~>
%AI9_PrivateDataEnd
